{"ast":null,"code":"var _s = $RefreshSig$();\n// src/firebase/auth.ts\nimport { signInWithPopup, GoogleAuthProvider, FacebookAuthProvider, signOut, onAuthStateChanged, signInWithEmailAndPassword, createUserWithEmailAndPassword, getIdTokenResult } from \"firebase/auth\";\nimport { authClient } from \"./config\"; // Use the configured client auth instance\nimport { useState, useEffect, createContext } from 'react';\nconst googleProvider = new GoogleAuthProvider();\nconst facebookProvider = new FacebookAuthProvider();\n\n// Define the auth context type\n\n// Export the auth context\nexport const AuthContext = /*#__PURE__*/createContext(undefined);\n\n// --- Get ID Token (for Backend Auth) ---\nexport const getCurrentUserIdToken = async () => {\n  try {\n    const user = authClient.currentUser;\n    if (!user) {\n      console.log('No user is currently logged in');\n      return null;\n    }\n\n    // Get the ID token\n    const token = await user.getIdToken();\n    console.log('Got Firebase token:', token.substring(0, 20) + '...');\n    return token;\n  } catch (error) {\n    console.error('Error getting Firebase token:', error);\n    return null;\n  }\n};\n\n// --- Auth State Management ---\nexport const useAuth = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(authClient, user => {\n      setUser(user);\n      setLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n  return {\n    user,\n    loading\n  };\n};\n\n// --- Sign-in Functions ---\n_s(useAuth, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\nexport const signInWithGoogle = async () => {\n  try {\n    const result = await signInWithPopup(authClient, googleProvider);\n    return result.user;\n  } catch (error) {\n    console.error(\"Google Sign-in Error:\", error);\n    throw new Error(error.message || \"Google Sign-in failed.\");\n  }\n};\nexport const signInWithFacebook = async () => {\n  try {\n    const result = await signInWithPopup(authClient, facebookProvider);\n    return result.user;\n  } catch (error) {\n    console.error(\"Facebook Sign-in Error:\", error);\n    throw new Error(error.message || \"Facebook Sign-in failed.\");\n  }\n};\nexport const signInWithEmail = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(authClient, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error(\"Email Sign-in Error:\", error);\n    throw new Error(error.message || \"Email Sign-in failed.\");\n  }\n};\nexport const registerWithEmail = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(authClient, email, password);\n    // Optionally send verification email here: await sendEmailVerification(userCredential.user);\n    return userCredential.user;\n  } catch (error) {\n    console.error(\"Email Registration Error:\", error);\n    // Handle errors like email already in use, weak password\n    throw new Error(error.message || \"Email Registration failed.\");\n  }\n};\nexport const signOutUser = async () => {\n  try {\n    await signOut(authClient);\n  } catch (error) {\n    console.error(\"Sign-out Error:\", error);\n    throw new Error(error.message || \"Sign-out failed.\");\n  }\n};\n\n// --- Auth State Listener ---\n\nexport const listenToAuthChanges = callback => {\n  // Returns the unsubscribe function\n  return onAuthStateChanged(authClient, callback);\n};\n\n// --- Check Admin Claim ---\nexport const checkAdminStatus = async () => {\n  if (!authClient.currentUser) {\n    return false;\n  }\n  try {\n    const idTokenResult = await getIdTokenResult(authClient.currentUser);\n    return idTokenResult.claims.admin === true;\n  } catch (error) {\n    console.error(\"Error getting ID token result/claims:\", error);\n    return false;\n  }\n};","map":{"version":3,"names":["signInWithPopup","GoogleAuthProvider","FacebookAuthProvider","signOut","onAuthStateChanged","signInWithEmailAndPassword","createUserWithEmailAndPassword","getIdTokenResult","authClient","useState","useEffect","createContext","googleProvider","facebookProvider","AuthContext","undefined","getCurrentUserIdToken","user","currentUser","console","log","token","getIdToken","substring","error","useAuth","_s","setUser","loading","setLoading","unsubscribe","signInWithGoogle","result","Error","message","signInWithFacebook","signInWithEmail","email","password","userCredential","registerWithEmail","signOutUser","listenToAuthChanges","callback","checkAdminStatus","idTokenResult","claims","admin"],"sources":["C:/Users/negis/OneDrive/Desktop/new project/blockfest-ui/src/firebase/auth.ts"],"sourcesContent":["// src/firebase/auth.ts\r\nimport {\r\n    signInWithPopup,\r\n    GoogleAuthProvider,\r\n    FacebookAuthProvider,\r\n    signOut,\r\n    onAuthStateChanged,\r\n    User,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    getIdToken,\r\n    getIdTokenResult\r\n} from \"firebase/auth\";\r\nimport { authClient } from \"./config\"; // Use the configured client auth instance\r\nimport { useState, useEffect, createContext } from 'react';\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst facebookProvider = new FacebookAuthProvider();\r\n\r\n// Define the auth context type\r\ninterface AuthContextType {\r\n    user: User | null;\r\n    loading: boolean;\r\n}\r\n\r\n// Export the auth context\r\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// --- Get ID Token (for Backend Auth) ---\r\nexport const getCurrentUserIdToken = async (): Promise<string | null> => {\r\n    try {\r\n        const user = authClient.currentUser;\r\n        if (!user) {\r\n            console.log('No user is currently logged in');\r\n            return null;\r\n        }\r\n        \r\n        // Get the ID token\r\n        const token = await user.getIdToken();\r\n        console.log('Got Firebase token:', token.substring(0, 20) + '...');\r\n        return token;\r\n    } catch (error: any) {\r\n        console.error('Error getting Firebase token:', error);\r\n        return null;\r\n    }\r\n};\r\n\r\n// --- Auth State Management ---\r\nexport const useAuth = () => {\r\n    const [user, setUser] = useState<User | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(authClient, (user) => {\r\n            setUser(user);\r\n            setLoading(false);\r\n        });\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    return { user, loading };\r\n};\r\n\r\n// --- Sign-in Functions ---\r\nexport const signInWithGoogle = async (): Promise<User | null> => {\r\n    try {\r\n        const result = await signInWithPopup(authClient, googleProvider);\r\n        return result.user;\r\n    } catch (error: any) {\r\n        console.error(\"Google Sign-in Error:\", error);\r\n        throw new Error(error.message || \"Google Sign-in failed.\");\r\n    }\r\n};\r\n\r\nexport const signInWithFacebook = async (): Promise<User | null> => {\r\n    try {\r\n        const result = await signInWithPopup(authClient, facebookProvider);\r\n        return result.user;\r\n    } catch (error: any) {\r\n        console.error(\"Facebook Sign-in Error:\", error);\r\n        throw new Error(error.message || \"Facebook Sign-in failed.\");\r\n    }\r\n};\r\n\r\nexport const signInWithEmail = async (email: string, password: string): Promise<User | null> => {\r\n    try {\r\n        const userCredential = await signInWithEmailAndPassword(authClient, email, password);\r\n        return userCredential.user;\r\n    } catch (error: any) {\r\n        console.error(\"Email Sign-in Error:\", error);\r\n        throw new Error(error.message || \"Email Sign-in failed.\");\r\n    }\r\n};\r\n\r\nexport const registerWithEmail = async (email: string, password: string): Promise<User | null> => {\r\n    try {\r\n        const userCredential = await createUserWithEmailAndPassword(authClient, email, password);\r\n        // Optionally send verification email here: await sendEmailVerification(userCredential.user);\r\n        return userCredential.user;\r\n    } catch (error: any) {\r\n        console.error(\"Email Registration Error:\", error);\r\n        // Handle errors like email already in use, weak password\r\n        throw new Error(error.message || \"Email Registration failed.\");\r\n    }\r\n}\r\n\r\nexport const signOutUser = async () => {\r\n    try {\r\n        await signOut(authClient);\r\n    } catch (error: any) {\r\n        console.error(\"Sign-out Error:\", error);\r\n        throw new Error(error.message || \"Sign-out failed.\");\r\n    }\r\n};\r\n\r\n// --- Auth State Listener ---\r\n\r\nexport const listenToAuthChanges = (callback: (user: User | null) => void) => {\r\n    // Returns the unsubscribe function\r\n    return onAuthStateChanged(authClient, callback);\r\n};\r\n\r\n// --- Check Admin Claim ---\r\nexport const checkAdminStatus = async (): Promise<boolean> => {\r\n    if (!authClient.currentUser) {\r\n        return false;\r\n    }\r\n    try {\r\n        const idTokenResult = await getIdTokenResult(authClient.currentUser);\r\n        return idTokenResult.claims.admin === true;\r\n    } catch (error) {\r\n        console.error(\"Error getting ID token result/claims:\", error);\r\n        return false;\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}