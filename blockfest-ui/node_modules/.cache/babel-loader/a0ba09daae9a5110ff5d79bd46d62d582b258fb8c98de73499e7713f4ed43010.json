{"ast":null,"code":"// src/utils/blockchain.ts\n\nimport { ethers, parseEther } from 'ethers';\nimport { toast } from 'react-hot-toast';\n\n// Define types\n\n// --- Configuration ---\nconst CONTRACT_ADDRESS = process.env.REACT_APP_CONTRACT_ADDRESS || '0x0000000000000000000000000000000000000000';\nconst TARGET_NETWORK_ID = parseInt(process.env.REACT_APP_TARGET_NETWORK_ID || '11155111', 10);\nconst TARGET_NETWORK_NAME = process.env.REACT_APP_TARGET_NETWORK_NAME || 'Sepolia Testnet';\nif (CONTRACT_ADDRESS === '0x0000000000000000000000000000000000000000') {\n  console.warn('Contract address not configured. Please set REACT_APP_CONTRACT_ADDRESS in your .env file.');\n  toast.error('Contract address not configured. Please set it in your .env file.');\n}\n\n// --- ABIs ---\n// IMPORTANT: Paste your ACTUAL compiled ABIs!\n\nconst EVENT_MANAGER_ABI = [{\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"initialOwner\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnableInvalidOwner\",\n  \"type\": \"error\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"account\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnableUnauthorizedAccount\",\n  \"type\": \"error\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"previousOwner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnershipTransferred\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"newScore\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"SybilScoreUpdated\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"UserBlacklisted\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"UserWhitelisted\",\n  \"type\": \"event\"\n}, {\n  \"inputs\": [],\n  \"name\": \"MAX_SCORE\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"blacklist\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"getSybilScore\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"isBlacklisted\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"owner\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"renounceOwnership\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"score\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"setSybilScore\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"transferOwnership\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"whitelist\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}];\n\n// --- Updated TicketNFT ABI (based on your TicketNFT.sol and needs) ---\nconst TICKET_NFT_ABI = [{\n  \"type\": \"constructor\",\n  \"inputs\": [{\n    \"name\": \"initialOwner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"approve\",\n  \"inputs\": [{\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"balanceOf\",\n  \"inputs\": [{\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"burn\",\n  \"inputs\": [{\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"eventManager\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"getApproved\",\n  \"inputs\": [{\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"getQRHash\",\n  \"inputs\": [{\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"isApprovedForAll\",\n  \"inputs\": [{\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"operator\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"bool\",\n    \"internalType\": \"bool\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"mintTicket\",\n  \"inputs\": [{\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenURI\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }, {\n    \"name\": \"qrHash\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"name\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"nextTokenId\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"owner\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"ownerOf\",\n  \"inputs\": [{\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"qrHashes\",\n  \"inputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"renounceOwnership\",\n  \"inputs\": [],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"safeTransferFrom\",\n  \"inputs\": [{\n    \"name\": \"from\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"safeTransferFrom\",\n  \"inputs\": [{\n    \"name\": \"from\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }, {\n    \"name\": \"data\",\n    \"type\": \"bytes\",\n    \"internalType\": \"bytes\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"setApprovalForAll\",\n  \"inputs\": [{\n    \"name\": \"operator\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"approved\",\n    \"type\": \"bool\",\n    \"internalType\": \"bool\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"setEventManager\",\n  \"inputs\": [{\n    \"name\": \"_eventManager\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"supportsInterface\",\n  \"inputs\": [{\n    \"name\": \"interfaceId\",\n    \"type\": \"bytes4\",\n    \"internalType\": \"bytes4\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"bool\",\n    \"internalType\": \"bool\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"symbol\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"tokenURI\",\n  \"inputs\": [{\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"transferFrom\",\n  \"inputs\": [{\n    \"name\": \"from\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"transferOwnership\",\n  \"inputs\": [{\n    \"name\": \"newOwner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"event\",\n  \"name\": \"Approval\",\n  \"inputs\": [{\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"approved\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": true,\n    \"internalType\": \"uint256\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"ApprovalForAll\",\n  \"inputs\": [{\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"operator\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"approved\",\n    \"type\": \"bool\",\n    \"indexed\": false,\n    \"internalType\": \"bool\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"BatchMetadataUpdate\",\n  \"inputs\": [{\n    \"name\": \"_fromTokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": false,\n    \"internalType\": \"uint256\"\n  }, {\n    \"name\": \"_toTokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": false,\n    \"internalType\": \"uint256\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"EventManagerSet\",\n  \"inputs\": [{\n    \"name\": \"newManager\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"MetadataUpdate\",\n  \"inputs\": [{\n    \"name\": \"_tokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": false,\n    \"internalType\": \"uint256\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"OwnershipTransferred\",\n  \"inputs\": [{\n    \"name\": \"previousOwner\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"newOwner\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"TicketBurned\",\n  \"inputs\": [{\n    \"name\": \"user\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": true,\n    \"internalType\": \"uint256\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"TicketMinted\",\n  \"inputs\": [{\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": true,\n    \"internalType\": \"uint256\"\n  }, {\n    \"name\": \"tokenURI\",\n    \"type\": \"string\",\n    \"indexed\": false,\n    \"internalType\": \"string\"\n  }, {\n    \"name\": \"qrHash\",\n    \"type\": \"string\",\n    \"indexed\": false,\n    \"internalType\": \"string\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"Transfer\",\n  \"inputs\": [{\n    \"name\": \"from\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": true,\n    \"internalType\": \"uint256\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721IncorrectOwner\",\n  \"inputs\": [{\n    \"name\": \"sender\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }, {\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721InsufficientApproval\",\n  \"inputs\": [{\n    \"name\": \"operator\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721InvalidApprover\",\n  \"inputs\": [{\n    \"name\": \"approver\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721InvalidOperator\",\n  \"inputs\": [{\n    \"name\": \"operator\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721InvalidOwner\",\n  \"inputs\": [{\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721InvalidReceiver\",\n  \"inputs\": [{\n    \"name\": \"receiver\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721InvalidSender\",\n  \"inputs\": [{\n    \"name\": \"sender\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721NonexistentToken\",\n  \"inputs\": [{\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"OwnableInvalidOwner\",\n  \"inputs\": [{\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"OwnableUnauthorizedAccount\",\n  \"inputs\": [{\n    \"name\": \"account\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}];\n// ----------------------------\n\n// Basic validation\nif (!CONTRACT_ADDRESS) {\n  throw new Error('REACT_APP_CONTRACT_ADDRESS environment variable is required');\n}\nif (!TARGET_NETWORK_ID) console.error(\"REACT_APP_TARGET_NETWORK_ID not set.\");\nif (EVENT_MANAGER_ABI.length === 0) console.error(\"EVENT_MANAGER_ABI is empty.\");\nif (TICKET_NFT_ABI.length === 0) console.error(\"TICKET_NFT_ABI is empty.\");\n// --- Helper Functions ---\nconst getProvider = () => {\n  if (typeof window.ethereum === 'undefined') {\n    console.error('MetaMask not detected');\n    return null;\n  }\n  return new ethers.BrowserProvider(window.ethereum);\n};\nconst getSigner = async provider => {\n  try {\n    const accounts = await provider.send('eth_requestAccounts', []);\n    if (accounts.length === 0) return null;\n    return provider.getSigner(accounts[0]);\n  } catch (error) {\n    console.error('Failed to get signer:', error);\n    return null;\n  }\n};\nconst getEventManagerContract = async (readOnly = false) => {\n  const provider = getProvider();\n  if (!provider) return null;\n  const signer = readOnly ? provider : await getSigner(provider);\n  if (!signer) return null;\n  return new ethers.Contract(CONTRACT_ADDRESS, EVENT_MANAGER_ABI, signer);\n};\nconst getTicketNFTContract = async (readOnly = false) => {\n  const provider = getProvider();\n  if (!provider) return null;\n  const signer = readOnly ? provider : await getSigner(provider);\n  if (!signer) return null;\n  const eventManager = await getEventManagerContract(true);\n  if (!eventManager) return null;\n  try {\n    const ticketNFTAddress = await eventManager.ticketNFT();\n    return new ethers.Contract(ticketNFTAddress, TICKET_NFT_ABI, signer);\n  } catch (error) {\n    console.error('Failed to get TicketNFT contract:', error);\n    return null;\n  }\n};\n\n// --- Core Blockchain Functions ---\nexport const connectWallet = async () => {\n  const provider = getProvider();\n  if (!provider) return null;\n  const signer = await getSigner(provider);\n  if (!signer) return null;\n  const address = await signer.getAddress();\n  return address;\n};\nexport const checkNetwork = async () => {\n  const provider = getProvider();\n  if (!provider) return {\n    isCorrect: false,\n    currentNetwork: null\n  };\n  try {\n    const network = await provider.getNetwork();\n    const currentNetwork = {\n      chainId: Number(network.chainId),\n      name: network.name\n    };\n    return {\n      isCorrect: Number(network.chainId) === TARGET_NETWORK_ID,\n      currentNetwork\n    };\n  } catch (error) {\n    console.error('Error checking network:', error);\n    return {\n      isCorrect: false,\n      currentNetwork: null\n    };\n  }\n};\nexport const switchNetwork = async () => {\n  if (typeof window.ethereum === 'undefined') {\n    console.error('MetaMask not detected');\n    return false;\n  }\n  try {\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId: ethers.hexlify(TARGET_NETWORK_ID.toString())\n      }]\n    });\n    return true;\n  } catch (error) {\n    if (error.code === 4902) {\n      try {\n        await window.ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: ethers.hexlify(TARGET_NETWORK_ID.toString()),\n            chainName: TARGET_NETWORK_NAME,\n            nativeCurrency: {\n              name: 'ETH',\n              symbol: 'ETH',\n              decimals: 18\n            },\n            rpcUrls: [process.env.REACT_APP_RPC_URL || '']\n          }]\n        });\n        return true;\n      } catch (addError) {\n        console.error('Error adding network:', addError);\n        return false;\n      }\n    }\n    console.error('Error switching network:', error);\n    return false;\n  }\n};\n\n// Corrected buyTicket\nexport const buyTicket = async (tokenURI, qrHash, outsider, priceInEther) => {\n  const contract = await getEventManagerContract(false); // EventManager handles buying\n  if (!contract) throw new Error(\"EventManager Contract not available.\");\n  if (!priceInEther) throw new Error(\"Price is required to buy ticket.\");\n  try {\n    var _receipt$transactionH;\n    const value = parseEther(priceInEther);\n    console.log(`Calling contract.buyTicket with URI: ${tokenURI}, QR: ${qrHash}, Outsider: ${outsider}, Value: ${value.toString()}`);\n    const tx = await contract.buyTicket(tokenURI, qrHash, outsider, {\n      value\n    });\n    const receipt = await tx.wait();\n    console.log(`Transaction Confirmed: ${receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash}`);\n    return (_receipt$transactionH = receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash) !== null && _receipt$transactionH !== void 0 ? _receipt$transactionH : null;\n  } catch (error) {\n    var _error$data;\n    console.error(\"Buy Ticket Error:\", error);\n    const reason = error.reason || (error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message) || error.message || 'Unknown error';\n    if (error.code === 4001) throw new Error('Transaction rejected.');\n    throw new Error(`Purchase Failed: ${reason}`);\n  }\n};\n\n// --- *** CORRECTED getMyTickets using Event Querying *** ---\nexport const getMyTickets = async userAddress => {\n  if (!userAddress) return [];\n  const provider = getProvider();\n  const nftContract = await getTicketNFTContract(true); // Get read-only NFT contract\n\n  if (!provider || !nftContract) {\n    console.error(\"getMyTickets: Could not get Provider or TicketNFT contract instance.\");\n    throw new Error(\"Failed to connect to NFT contract.\");\n  }\n  try {\n    console.log(`Querying Transfer events for recipient ${userAddress} on contract ${await nftContract.getAddress()}`);\n\n    // Define the Transfer event filter - transfers TO the userAddress\n    const filterTo = nftContract.filters.Transfer(null, userAddress);\n    // Define the Transfer event filter - transfers FROM the userAddress\n    const filterFrom = nftContract.filters.Transfer(userAddress);\n\n    // Query events (adjust block range as needed for performance - 'earliest' can be slow)\n    // Consider storing the last queried block number locally and starting from there.\n    const transferEventsTo = await nftContract.queryFilter(filterTo, 'earliest', 'latest');\n    const transferEventsFrom = await nftContract.queryFilter(filterFrom, 'earliest', 'latest');\n    console.log(`Found ${transferEventsTo.length} Transfer(to) events`);\n    console.log(`Found ${transferEventsFrom.length} Transfer(from) events`);\n\n    // Process events to determine current ownership\n    const ownedTokenIds = new Map();\n\n    // Add tokens transferred TO the user\n    transferEventsTo.forEach(event => {\n      if (event.args && event.args.tokenId) {\n        ownedTokenIds.set(Number(event.args.tokenId), true); // Mark as potentially owned\n      }\n    });\n\n    // Remove tokens transferred FROM the user\n    transferEventsFrom.forEach(event => {\n      if (event.args && event.args.tokenId) {\n        ownedTokenIds.delete(Number(event.args.tokenId)); // Remove if transferred away\n      }\n    });\n    const finalOwnedIds = Array.from(ownedTokenIds.keys());\n    console.log(\"Final calculated owned ticket IDs:\", finalOwnedIds);\n    return finalOwnedIds;\n  } catch (error) {\n    console.error(\"Error querying Transfer events in getMyTickets:\", error);\n    throw new Error(\"Failed to fetch owned tickets via event query.\");\n  }\n};\n\n// Corrected resellTicket (uses EventManager)\nexport const resellTicket = async tokenId => {\n  const contract = await getEventManagerContract(false);\n  if (!contract) throw new Error(\"EventManager Contract not available.\");\n  try {\n    var _receipt$transactionH2;\n    const tx = await contract.sellTicketBack(tokenId);\n    const receipt = await tx.wait();\n    return (_receipt$transactionH2 = receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash) !== null && _receipt$transactionH2 !== void 0 ? _receipt$transactionH2 : null;\n  } catch (error) {\n    console.error(\"Error reselling ticket:\", error);\n    throw new Error(error.message);\n  }\n};\n\n// Corrected getEventDetails (uses EventManager)\nexport const getEventDetails = async () => {\n  const contract = await getEventManagerContract(true);\n  if (!contract) return null;\n  try {\n    const [active, maxTickets, currentTickets, ticketPriceInsider, ticketPriceOutsider] = await Promise.all([contract.eventActive(), contract.maxTickets(), contract.ticketCount(), contract.ticketPriceInsider(), contract.ticketPriceOutsider()]);\n    return {\n      isActive: active,\n      maxTickets: Number(maxTickets),\n      currentTickets: Number(currentTickets),\n      name: \"BlockFest Event\",\n      // Default name since contract doesn't have this\n      description: \"BlockFest Event Description\",\n      // Default description since contract doesn't have this\n      startDate: \"TBD\",\n      // Default since contract doesn't have this\n      endDate: \"TBD\",\n      // Default since contract doesn't have this\n      ticketPrice: ticketPriceInsider,\n      // Using insider price as default\n      ticketPriceInsider: ticketPriceInsider,\n      ticketPriceOutsider: ticketPriceOutsider\n    };\n  } catch (error) {\n    console.error(\"Error getting event details:\", error);\n    return null;\n  }\n};\n\n// Corrected getTokenMetadataURI (uses TicketNFT)\nexport const getTokenMetadataURI = async tokenId => {\n  const contract = await getTicketNFTContract(true);\n  if (!contract) return null;\n  try {\n    const uri = await contract.tokenURI(tokenId);\n    return uri;\n  } catch (error) {\n    console.error(`Error getting token URI for ${tokenId}:`, error);\n    return null;\n  }\n};\n\n// --- Updated getAvailableTickets (fetches ALL issued IDs) ---\nexport const getAvailableTickets = async () => {\n  const contract = await getEventManagerContract(true);\n  if (!contract) return [];\n  try {\n    const countBN = await contract.ticketCount();\n    const count = Number(countBN);\n    if (count === 0) return [];\n    console.log(`Total tickets issued: ${count}. Fetching IDs...`);\n    const ids = [];\n    const promises = [];\n    for (let i = 0; i < count; i++) {\n      promises.push(contract.issuedTickets(i));\n    }\n    const results = await Promise.all(promises);\n    results.forEach(tokenIdBN => {\n      ids.push(Number(tokenIdBN));\n    });\n    console.log(\"All issued ticket IDs fetched:\", ids);\n    return ids;\n  } catch (error) {\n    console.error(\"Error getting available/issued tickets:\", error);\n    toast.error(\"Could not retrieve list of issued tickets.\");\n    return [];\n  }\n};\n\n// Corrected getQRHash (uses TicketNFT)\nexport const getQRHash = async tokenId => {\n  const nftContract = await getTicketNFTContract(true);\n  if (!nftContract) return null;\n  try {\n    // Ensure TICKET_NFT_ABI includes getQRHash\n    const qrHash = await nftContract.getQRHash(tokenId);\n    return qrHash;\n  } catch (error) {\n    console.error(`Error getting QR Hash for token ${tokenId}:`, error.message);\n    return null;\n  }\n};","map":{"version":3,"names":["ethers","parseEther","toast","CONTRACT_ADDRESS","process","env","REACT_APP_CONTRACT_ADDRESS","TARGET_NETWORK_ID","parseInt","REACT_APP_TARGET_NETWORK_ID","TARGET_NETWORK_NAME","REACT_APP_TARGET_NETWORK_NAME","console","warn","error","EVENT_MANAGER_ABI","TICKET_NFT_ABI","Error","length","getProvider","window","ethereum","BrowserProvider","getSigner","provider","accounts","send","getEventManagerContract","readOnly","signer","Contract","getTicketNFTContract","eventManager","ticketNFTAddress","ticketNFT","connectWallet","address","getAddress","checkNetwork","isCorrect","currentNetwork","network","getNetwork","chainId","Number","name","switchNetwork","request","method","params","hexlify","toString","code","chainName","nativeCurrency","symbol","decimals","rpcUrls","REACT_APP_RPC_URL","addError","buyTicket","tokenURI","qrHash","outsider","priceInEther","contract","_receipt$transactionH","value","log","tx","receipt","wait","transactionHash","_error$data","reason","data","message","getMyTickets","userAddress","nftContract","filterTo","filters","Transfer","filterFrom","transferEventsTo","queryFilter","transferEventsFrom","ownedTokenIds","Map","forEach","event","args","tokenId","set","delete","finalOwnedIds","Array","from","keys","resellTicket","_receipt$transactionH2","sellTicketBack","getEventDetails","active","maxTickets","currentTickets","ticketPriceInsider","ticketPriceOutsider","Promise","all","eventActive","ticketCount","isActive","description","startDate","endDate","ticketPrice","getTokenMetadataURI","uri","getAvailableTickets","countBN","count","ids","promises","i","push","issuedTickets","results","tokenIdBN","getQRHash"],"sources":["C:/Users/negis/OneDrive/Desktop/new project/blockfest-ui/src/utils/blockchain.ts"],"sourcesContent":["// src/utils/blockchain.ts\n\nimport { ethers, parseEther } from 'ethers';\nimport { BigNumberish } from 'ethers';\nimport { toast } from 'react-hot-toast';\nimport { EventDetails } from '../types/global';\n\n// Define types\ninterface TicketData {\n    tokenId: number;\n    tokenURI: string;\n    qrHash: string;\n    owner: string;\n}\n\n// --- Configuration ---\nconst CONTRACT_ADDRESS = process.env.REACT_APP_CONTRACT_ADDRESS || '0x0000000000000000000000000000000000000000';\nconst TARGET_NETWORK_ID = parseInt(process.env.REACT_APP_TARGET_NETWORK_ID || '11155111', 10);\nconst TARGET_NETWORK_NAME = process.env.REACT_APP_TARGET_NETWORK_NAME || 'Sepolia Testnet';\n\nif (CONTRACT_ADDRESS === '0x0000000000000000000000000000000000000000') {\n    console.warn('Contract address not configured. Please set REACT_APP_CONTRACT_ADDRESS in your .env file.');\n    toast.error('Contract address not configured. Please set it in your .env file.');\n}\n\n// --- ABIs ---\n// IMPORTANT: Paste your ACTUAL compiled ABIs!\n\nconst EVENT_MANAGER_ABI = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newScore\",\"type\":\"uint256\"}],\"name\":\"SybilScoreUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserWhitelisted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_SCORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"blacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getSybilScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"}],\"name\":\"setSybilScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n// --- Updated TicketNFT ABI (based on your TicketNFT.sol and needs) ---\nconst TICKET_NFT_ABI = [\n  {\n    \"type\": \"constructor\",\n    \"inputs\": [\n      {\n        \"name\": \"initialOwner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"approve\",\n    \"inputs\": [\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceOf\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"burn\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"eventManager\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getApproved\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getQRHash\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isApprovedForAll\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"mintTicket\",\n    \"inputs\": [\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenURI\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"qrHash\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"name\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"nextTokenId\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"owner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"ownerOf\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"qrHashes\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"renounceOwnership\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"safeTransferFrom\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"safeTransferFrom\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"setApprovalForAll\",\n    \"inputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"approved\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"setEventManager\",\n    \"inputs\": [\n      {\n        \"name\": \"_eventManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"symbol\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"tokenURI\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferFrom\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferOwnership\",\n    \"inputs\": [\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Approval\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"approved\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": true,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"ApprovalForAll\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"approved\",\n        \"type\": \"bool\",\n        \"indexed\": false,\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"BatchMetadataUpdate\",\n    \"inputs\": [\n      {\n        \"name\": \"_fromTokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"_toTokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"EventManagerSet\",\n    \"inputs\": [\n      {\n        \"name\": \"newManager\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"MetadataUpdate\",\n    \"inputs\": [\n      {\n        \"name\": \"_tokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferred\",\n    \"inputs\": [\n      {\n        \"name\": \"previousOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TicketBurned\",\n    \"inputs\": [\n      {\n        \"name\": \"user\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": true,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TicketMinted\",\n    \"inputs\": [\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": true,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"tokenURI\",\n        \"type\": \"string\",\n        \"indexed\": false,\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"qrHash\",\n        \"type\": \"string\",\n        \"indexed\": false,\n        \"internalType\": \"string\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Transfer\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": true,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721IncorrectOwner\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721InsufficientApproval\",\n    \"inputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721InvalidApprover\",\n    \"inputs\": [\n      {\n        \"name\": \"approver\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721InvalidOperator\",\n    \"inputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721InvalidOwner\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721InvalidReceiver\",\n    \"inputs\": [\n      {\n        \"name\": \"receiver\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721InvalidSender\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721NonexistentToken\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"OwnableInvalidOwner\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"OwnableUnauthorizedAccount\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  }\n]\n// ----------------------------\n\n// Basic validation\nif (!CONTRACT_ADDRESS) {\n    throw new Error('REACT_APP_CONTRACT_ADDRESS environment variable is required');\n}\nif (!TARGET_NETWORK_ID) console.error(\"REACT_APP_TARGET_NETWORK_ID not set.\");\nif (EVENT_MANAGER_ABI.length === 0) console.error(\"EVENT_MANAGER_ABI is empty.\");\nif (TICKET_NFT_ABI.length === 0) console.error(\"TICKET_NFT_ABI is empty.\");\n\ninterface NetworkInfo { chainId: number; name: string; }\n\n// --- Helper Functions ---\nconst getProvider = (): ethers.BrowserProvider | null => {\n    if (typeof window.ethereum === 'undefined') {\n        console.error('MetaMask not detected');\n        return null;\n    }\n    return new ethers.BrowserProvider(window.ethereum);\n};\n\nconst getSigner = async (provider: ethers.BrowserProvider): Promise<ethers.Signer | null> => {\n    try {\n        const accounts = await provider.send('eth_requestAccounts', []);\n        if (accounts.length === 0) return null;\n        return provider.getSigner(accounts[0]);\n    } catch (error) {\n        console.error('Failed to get signer:', error);\n        return null;\n    }\n};\n\nconst getEventManagerContract = async (readOnly = false): Promise<ethers.Contract | null> => {\n    const provider = getProvider();\n    if (!provider) return null;\n\n    const signer = readOnly ? provider : await getSigner(provider);\n    if (!signer) return null;\n\n    return new ethers.Contract(CONTRACT_ADDRESS, EVENT_MANAGER_ABI, signer);\n};\n\nconst getTicketNFTContract = async (readOnly = false): Promise<ethers.Contract | null> => {\n    const provider = getProvider();\n    if (!provider) return null;\n\n    const signer = readOnly ? provider : await getSigner(provider);\n    if (!signer) return null;\n\n    const eventManager = await getEventManagerContract(true);\n    if (!eventManager) return null;\n\n    try {\n        const ticketNFTAddress = await eventManager.ticketNFT();\n        return new ethers.Contract(ticketNFTAddress, TICKET_NFT_ABI, signer);\n    } catch (error) {\n        console.error('Failed to get TicketNFT contract:', error);\n        return null;\n    }\n};\n\n// --- Core Blockchain Functions ---\nexport const connectWallet = async (): Promise<string | null> => {\n    const provider = getProvider();\n    if (!provider) return null;\n    \n    const signer = await getSigner(provider);\n    if (!signer) return null;\n\n    const address = await signer.getAddress();\n    return address;\n};\nexport const checkNetwork = async (): Promise<{ isCorrect: boolean; currentNetwork: NetworkInfo | null }> => {\n    const provider = getProvider();\n    if (!provider) return { isCorrect: false, currentNetwork: null };\n\n    try {\n        const network = await provider.getNetwork();\n        const currentNetwork: NetworkInfo = {\n            chainId: Number(network.chainId),\n            name: network.name\n        };\n\n        return {\n            isCorrect: Number(network.chainId) === TARGET_NETWORK_ID,\n            currentNetwork\n        };\n    } catch (error) {\n        console.error('Error checking network:', error);\n        return { isCorrect: false, currentNetwork: null };\n    }\n};\nexport const switchNetwork = async (): Promise<boolean> => {\n    if (typeof window.ethereum === 'undefined') {\n        console.error('MetaMask not detected');\n        return false;\n    }\n\n    try {\n        await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: ethers.hexlify(TARGET_NETWORK_ID.toString()) }]\n        });\n        return true;\n    } catch (error: any) {\n        if (error.code === 4902) {\n            try {\n                await window.ethereum.request({\n                    method: 'wallet_addEthereumChain',\n                    params: [{\n                        chainId: ethers.hexlify(TARGET_NETWORK_ID.toString()),\n                        chainName: TARGET_NETWORK_NAME,\n                        nativeCurrency: {\n                            name: 'ETH',\n                            symbol: 'ETH',\n                            decimals: 18\n                        },\n                        rpcUrls: [process.env.REACT_APP_RPC_URL || '']\n                    }]\n                });\n                return true;\n            } catch (addError) {\n                console.error('Error adding network:', addError);\n                return false;\n            }\n        }\n        console.error('Error switching network:', error);\n        return false;\n    }\n};\n\n// Corrected buyTicket\nexport const buyTicket = async (\n    tokenURI: string,\n    qrHash: string,\n    outsider: boolean,\n    priceInEther: string\n): Promise<string | null> => {\n    const contract = await getEventManagerContract(false); // EventManager handles buying\n    if (!contract) throw new Error(\"EventManager Contract not available.\");\n    if (!priceInEther) throw new Error(\"Price is required to buy ticket.\");\n\n    try {\n        const value = parseEther(priceInEther);\n        console.log(`Calling contract.buyTicket with URI: ${tokenURI}, QR: ${qrHash}, Outsider: ${outsider}, Value: ${value.toString()}`);\n        const tx = await contract.buyTicket(tokenURI, qrHash, outsider, { value });\n        const receipt = await tx.wait();\n        console.log(`Transaction Confirmed: ${receipt?.transactionHash}`);\n        return receipt?.transactionHash ?? null;\n    } catch (error: any) {\n        console.error(\"Buy Ticket Error:\", error);\n        const reason = error.reason || error?.data?.message || error.message || 'Unknown error';\n        if (error.code === 4001) throw new Error('Transaction rejected.');\n        throw new Error(`Purchase Failed: ${reason}`);\n    }\n};\n\n// --- *** CORRECTED getMyTickets using Event Querying *** ---\nexport const getMyTickets = async (userAddress: string): Promise<number[]> => {\n    if (!userAddress) return [];\n\n    const provider = getProvider();\n    const nftContract = await getTicketNFTContract(true); // Get read-only NFT contract\n\n    if (!provider || !nftContract) {\n        console.error(\"getMyTickets: Could not get Provider or TicketNFT contract instance.\");\n        throw new Error(\"Failed to connect to NFT contract.\");\n    }\n\n    try {\n        console.log(`Querying Transfer events for recipient ${userAddress} on contract ${await nftContract.getAddress()}`);\n\n        // Define the Transfer event filter - transfers TO the userAddress\n        const filterTo = nftContract.filters.Transfer(null, userAddress);\n        // Define the Transfer event filter - transfers FROM the userAddress\n        const filterFrom = nftContract.filters.Transfer(userAddress);\n\n        // Query events (adjust block range as needed for performance - 'earliest' can be slow)\n        // Consider storing the last queried block number locally and starting from there.\n        const transferEventsTo = await nftContract.queryFilter(filterTo, 'earliest', 'latest');\n        const transferEventsFrom = await nftContract.queryFilter(filterFrom, 'earliest', 'latest');\n\n        console.log(`Found ${transferEventsTo.length} Transfer(to) events`);\n        console.log(`Found ${transferEventsFrom.length} Transfer(from) events`);\n\n        // Process events to determine current ownership\n        const ownedTokenIds = new Map<number, boolean>();\n\n        // Add tokens transferred TO the user\n        transferEventsTo.forEach((event: any) => {\n            if (event.args && event.args.tokenId) {\n                ownedTokenIds.set(Number(event.args.tokenId), true); // Mark as potentially owned\n            }\n        });\n\n        // Remove tokens transferred FROM the user\n        transferEventsFrom.forEach((event: any) => {\n            if (event.args && event.args.tokenId) {\n                ownedTokenIds.delete(Number(event.args.tokenId)); // Remove if transferred away\n            }\n        });\n\n        const finalOwnedIds = Array.from(ownedTokenIds.keys());\n        console.log(\"Final calculated owned ticket IDs:\", finalOwnedIds);\n        return finalOwnedIds;\n\n    } catch (error: any) {\n        console.error(\"Error querying Transfer events in getMyTickets:\", error);\n        throw new Error(\"Failed to fetch owned tickets via event query.\");\n    }\n};\n\n// Corrected resellTicket (uses EventManager)\nexport const resellTicket = async (tokenId: number): Promise<string | null> => {\n    const contract = await getEventManagerContract(false);\n    if (!contract) throw new Error(\"EventManager Contract not available.\");\n\n    try {\n        const tx = await contract.sellTicketBack(tokenId);\n        const receipt = await tx.wait();\n        return receipt?.transactionHash ?? null;\n    } catch (error: any) {\n        console.error(\"Error reselling ticket:\", error);\n        throw new Error(error.message);\n    }\n};\n\n// Corrected getEventDetails (uses EventManager)\nexport const getEventDetails = async (): Promise<EventDetails | null> => {\n    const contract = await getEventManagerContract(true);\n    if (!contract) return null;\n\n    try {\n        const [active, maxTickets, currentTickets, ticketPriceInsider, ticketPriceOutsider] = await Promise.all([\n            contract.eventActive(),\n            contract.maxTickets(),\n            contract.ticketCount(),\n            contract.ticketPriceInsider(),\n            contract.ticketPriceOutsider()\n        ]);\n\n        return {\n            isActive: active,\n            maxTickets: Number(maxTickets),\n            currentTickets: Number(currentTickets),\n            name: \"BlockFest Event\", // Default name since contract doesn't have this\n            description: \"BlockFest Event Description\", // Default description since contract doesn't have this\n            startDate: \"TBD\", // Default since contract doesn't have this\n            endDate: \"TBD\", // Default since contract doesn't have this\n            ticketPrice: ticketPriceInsider, // Using insider price as default\n            ticketPriceInsider: ticketPriceInsider,\n            ticketPriceOutsider: ticketPriceOutsider\n        };\n    } catch (error) {\n        console.error(\"Error getting event details:\", error);\n        return null;\n    }\n};\n\n// Corrected getTokenMetadataURI (uses TicketNFT)\nexport const getTokenMetadataURI = async (tokenId: number): Promise<string | null> => {\n    const contract = await getTicketNFTContract(true);\n    if (!contract) return null;\n\n    try {\n        const uri = await contract.tokenURI(tokenId);\n        return uri;\n    } catch (error) {\n        console.error(`Error getting token URI for ${tokenId}:`, error);\n        return null;\n    }\n};\n\n// --- Updated getAvailableTickets (fetches ALL issued IDs) ---\nexport const getAvailableTickets = async (): Promise<number[]> => {\n    const contract = await getEventManagerContract(true);\n    if (!contract) return [];\n\n    try {\n        const countBN = await contract.ticketCount();\n        const count = Number(countBN);\n        if (count === 0) return [];\n\n        console.log(`Total tickets issued: ${count}. Fetching IDs...`);\n        const ids: number[] = [];\n        const promises: Promise<BigNumberish>[] = [];\n\n        for (let i = 0; i < count; i++) {\n            promises.push(contract.issuedTickets(i));\n        }\n\n        const results = await Promise.all(promises) as BigNumberish[];\n        results.forEach((tokenIdBN: BigNumberish) => {\n            ids.push(Number(tokenIdBN));\n        });\n\n        console.log(\"All issued ticket IDs fetched:\", ids);\n        return ids;\n\n    } catch (error) {\n        console.error(\"Error getting available/issued tickets:\", error);\n        toast.error(\"Could not retrieve list of issued tickets.\");\n        return [];\n    }\n};\n\n// Corrected getQRHash (uses TicketNFT)\nexport const getQRHash = async (tokenId: number): Promise<string | null> => {\n    const nftContract = await getTicketNFTContract(true);\n    if (!nftContract) return null;\n    try {\n        // Ensure TICKET_NFT_ABI includes getQRHash\n        const qrHash = await nftContract.getQRHash(tokenId);\n        return qrHash;\n    } catch (error: any) {\n        console.error(`Error getting QR Hash for token ${tokenId}:`, error.message);\n        return null;\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}