{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\negis\\\\Downloads\\\\Archive\\\\src\\\\components\\\\VIPVerificationForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useVIP } from '../contexts/VIPContext'; // Adjust path\nimport GlowingButton from './GlowingButton';\nimport { ShieldCheckIcon } from '@heroicons/react/solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VIPVerificationForm = ({\n  onVerified\n}) => {\n  _s();\n  const {\n    checkVIPStatus,\n    checkingVIP,\n    isVIP,\n    resetVIP\n  } = useVIP();\n  const [name, setName] = useState('');\n  const [rollNumber, setRollNumber] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!name || !rollNumber || checkingVIP) return;\n    const success = await checkVIPStatus(name, rollNumber);\n    if (success) {\n      onVerified(); // Trigger callback\n    }\n  };\n\n  // If already verified, show a success message and maybe a way to reset\n  if (isVIP) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-secondary-dark p-6 rounded-lg shadow-lg border border-accent-glow/30 text-center animate-fade-in\",\n      children: [/*#__PURE__*/_jsxDEV(ShieldCheckIcon, {\n        className: \"h-16 w-16 text-success mx-auto mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-text-main mb-2\",\n        children: \"VIP Status Verified!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-text-secondary mb-4\",\n        children: \"You can now access the ticket marketplace.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Show form if not verified\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-secondary-dark p-6 rounded-lg shadow-lg border border-accent-glow/30 animate-fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold text-text-main mb-4 text-center\",\n      children: \"VIP Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-text-secondary text-sm mb-6 text-center\",\n      children: \"Enter your details to check for VIP access.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"vipName\",\n          className: \"block text-sm font-medium text-text-secondary mb-1\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"vipName\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true,\n          className: \"w-full px-3 py-2 bg-primary-dark border border-accent-glow/50 rounded-md text-text-main focus:ring-accent-light focus:border-accent-light focus:outline-none\",\n          placeholder: \"Enter your name\",\n          disabled: checkingVIP\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"vipRollNumber\",\n          className: \"block text-sm font-medium text-text-secondary mb-1\",\n          children: \"Roll Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\" // Or 'number' if appropriate\n          ,\n          id: \"vipRollNumber\",\n          value: rollNumber,\n          onChange: e => setRollNumber(e.target.value),\n          required: true,\n          className: \"w-full px-3 py-2 bg-primary-dark border border-accent-glow/50 rounded-md text-text-main focus:ring-accent-light focus:border-accent-light focus:outline-none\",\n          placeholder: \"Enter your roll number\",\n          disabled: checkingVIP\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GlowingButton, {\n        type: \"submit\",\n        className: \"w-full\",\n        disabled: checkingVIP || !name || !rollNumber,\n        children: checkingVIP ? 'Verifying...' : 'Check VIP Status'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(VIPVerificationForm, \"5XqOsdfcFzjwr4grMnO0HWdBcZo=\", false, function () {\n  return [useVIP];\n});\n_c = VIPVerificationForm;\nexport default VIPVerificationForm;\n\n// const VIPVerificationForm = () => {\n//     return (\n//         <div>VIPVerificationForm</div>\n//     )\n// }\n\n// export default VIPVerificationForm;\nvar _c;\n$RefreshReg$(_c, \"VIPVerificationForm\");","map":{"version":3,"names":["React","useState","useVIP","GlowingButton","ShieldCheckIcon","jsxDEV","_jsxDEV","VIPVerificationForm","onVerified","_s","checkVIPStatus","checkingVIP","isVIP","resetVIP","name","setName","rollNumber","setRollNumber","handleSubmit","e","preventDefault","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/negis/Downloads/Archive/src/components/VIPVerificationForm.tsx"],"sourcesContent":["import React, { useState,useRef } from 'react';\r\n\r\nimport { useVIP } from '../contexts/VIPContext'; // Adjust path\r\nimport GlowingButton from './GlowingButton';\r\nimport { ShieldCheckIcon } from '@heroicons/react/solid';\r\n\r\ninterface VIPVerificationFormProps {\r\n    onVerified: () => void; // Callback when verification is successful\r\n}\r\n\r\nconst VIPVerificationForm: React.FC<VIPVerificationFormProps> = ({ onVerified }) => {\r\n    const { checkVIPStatus, checkingVIP, isVIP, resetVIP } = useVIP();\r\n    const [name, setName] = useState('');\r\n    const [rollNumber, setRollNumber] = useState('');\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (!name || !rollNumber || checkingVIP) return;\r\n\r\n        const success = await checkVIPStatus(name, rollNumber);\r\n        if (success) {\r\n            onVerified(); // Trigger callback\r\n        }\r\n    };\r\n\r\n     // If already verified, show a success message and maybe a way to reset\r\n    if (isVIP) {\r\n        return (\r\n            <div className=\"bg-secondary-dark p-6 rounded-lg shadow-lg border border-accent-glow/30 text-center animate-fade-in\">\r\n                <ShieldCheckIcon className=\"h-16 w-16 text-success mx-auto mb-4\"/>\r\n                <h3 className=\"text-xl font-semibold text-text-main mb-2\">VIP Status Verified!</h3>\r\n                <p className=\"text-text-secondary mb-4\">You can now access the ticket marketplace.</p>\r\n                {/* Optional: Button to reset/re-check if needed */}\r\n                {/* <button onClick={resetVIP} className=\"text-xs text-accent-light hover:underline\">Check different credentials</button> */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Show form if not verified\r\n    return (\r\n        <div className=\"bg-secondary-dark p-6 rounded-lg shadow-lg border border-accent-glow/30 animate-fade-in\">\r\n            <h3 className=\"text-xl font-semibold text-text-main mb-4 text-center\">VIP Verification</h3>\r\n            <p className=\"text-text-secondary text-sm mb-6 text-center\">Enter your details to check for VIP access.</p>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                <div>\r\n                    <label htmlFor=\"vipName\" className=\"block text-sm font-medium text-text-secondary mb-1\">Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"vipName\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        required\r\n                        className=\"w-full px-3 py-2 bg-primary-dark border border-accent-glow/50 rounded-md text-text-main focus:ring-accent-light focus:border-accent-light focus:outline-none\"\r\n                        placeholder=\"Enter your name\"\r\n                        disabled={checkingVIP}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"vipRollNumber\" className=\"block text-sm font-medium text-text-secondary mb-1\">Roll Number</label>\r\n                    <input\r\n                        type=\"text\" // Or 'number' if appropriate\r\n                        id=\"vipRollNumber\"\r\n                        value={rollNumber}\r\n                        onChange={(e) => setRollNumber(e.target.value)}\r\n                        required\r\n                        className=\"w-full px-3 py-2 bg-primary-dark border border-accent-glow/50 rounded-md text-text-main focus:ring-accent-light focus:border-accent-light focus:outline-none\"\r\n                        placeholder=\"Enter your roll number\"\r\n                        disabled={checkingVIP}\r\n                    />\r\n                </div>\r\n                <GlowingButton type=\"submit\" className=\"w-full\" disabled={checkingVIP || !name || !rollNumber}>\r\n                    {checkingVIP ? 'Verifying...' : 'Check VIP Status'}\r\n                </GlowingButton>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VIPVerificationForm;\r\n\r\n\r\n// const VIPVerificationForm = () => {\r\n//     return (\r\n//         <div>VIPVerificationForm</div>\r\n//     )\r\n// }\r\n\r\n// export default VIPVerificationForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}