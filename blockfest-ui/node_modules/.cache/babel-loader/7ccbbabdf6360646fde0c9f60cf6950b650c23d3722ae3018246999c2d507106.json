{"ast":null,"code":"// src/utils/blockchain.ts\n\nimport { ethers, parseEther, formatEther } from 'ethers';\nimport { toast } from 'react-hot-toast';\n\n// Define types\n\n// --- Configuration ---\nconst CONTRACT_ADDRESS = process.env.REACT_APP_CONTRACT_ADDRESS || '0x0000000000000000000000000000000000000000';\nconst TARGET_NETWORK_ID = parseInt(process.env.REACT_APP_TARGET_NETWORK_ID || '11155111', 10);\nconst TARGET_NETWORK_NAME = process.env.REACT_APP_TARGET_NETWORK_NAME || 'Sepolia Testnet';\nif (CONTRACT_ADDRESS === '0x0000000000000000000000000000000000000000') {\n  console.warn('Contract address not configured. Please set REACT_APP_CONTRACT_ADDRESS in your .env file.');\n  toast.error('Contract address not configured. Please set it in your .env file.');\n}\n\n// --- ABIs ---\n// IMPORTANT: Paste your ACTUAL compiled ABIs!\n\nconst EVENT_MANAGER_ABI = [{\n  \"type\": \"constructor\",\n  \"inputs\": [{\n    \"name\": \"_ticketNFT\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"_staking\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"_validator\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"_sybil\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"buyTicket\",\n  \"inputs\": [{\n    \"name\": \"tokenURI\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }, {\n    \"name\": \"qrHash\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }, {\n    \"name\": \"outsider\",\n    \"type\": \"bool\",\n    \"internalType\": \"bool\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"payable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"cancelEvent\",\n  \"inputs\": [],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"eventActive\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"bool\",\n    \"internalType\": \"bool\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"getStakedAmount\",\n  \"inputs\": [{\n    \"name\": \"user\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"getSybilScore\",\n  \"inputs\": [{\n    \"name\": \"user\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"hasTicket\",\n  \"inputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"bool\",\n    \"internalType\": \"bool\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"isOutsider\",\n  \"inputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"bool\",\n    \"internalType\": \"bool\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"isValidator\",\n  \"inputs\": [{\n    \"name\": \"user\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"bool\",\n    \"internalType\": \"bool\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"issuedTickets\",\n  \"inputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"maxTickets\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"ownedTickets\",\n  \"inputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"owner\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"refillTickets\",\n  \"inputs\": [{\n    \"name\": \"amount\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"refunded\",\n  \"inputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"bool\",\n    \"internalType\": \"bool\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"renounceOwnership\",\n  \"inputs\": [],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"sellTicketBack\",\n  \"inputs\": [{\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"setEventActive\",\n  \"inputs\": [{\n    \"name\": \"active\",\n    \"type\": \"bool\",\n    \"internalType\": \"bool\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"setTicketPrices\",\n  \"inputs\": [{\n    \"name\": \"insiderPrice\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }, {\n    \"name\": \"outsiderPrice\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"staking\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"contract Staking\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"sybil\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"contract SybilGuard\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"ticketCount\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"ticketNFT\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"contract TicketNFT\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"ticketPriceInsider\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"ticketPriceOutsider\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"transferOwnership\",\n  \"inputs\": [{\n    \"name\": \"newOwner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"validator\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"contract ValidatorPoS\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"withdrawFunds\",\n  \"inputs\": [],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"event\",\n  \"name\": \"OwnershipTransferred\",\n  \"inputs\": [{\n    \"name\": \"previousOwner\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"newOwner\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"TicketPurchased\",\n  \"inputs\": [{\n    \"name\": \"buyer\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": false,\n    \"internalType\": \"uint256\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"TicketRefunded\",\n  \"inputs\": [{\n    \"name\": \"holder\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": false,\n    \"internalType\": \"uint256\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"error\",\n  \"name\": \"OwnableInvalidOwner\",\n  \"inputs\": [{\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"OwnableUnauthorizedAccount\",\n  \"inputs\": [{\n    \"name\": \"account\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}];\n\n// --- Updated TicketNFT ABI (based on your TicketNFT.sol and needs) ---\nconst TICKET_NFT_ABI = [{\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"initialOwner\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"sender\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"ERC721IncorrectOwner\",\n  \"type\": \"error\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"operator\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"ERC721InsufficientApproval\",\n  \"type\": \"error\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"approver\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"ERC721InvalidApprover\",\n  \"type\": \"error\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"operator\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"ERC721InvalidOperator\",\n  \"type\": \"error\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"ERC721InvalidOwner\",\n  \"type\": \"error\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"receiver\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"ERC721InvalidReceiver\",\n  \"type\": \"error\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"sender\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"ERC721InvalidSender\",\n  \"type\": \"error\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"ERC721NonexistentToken\",\n  \"type\": \"error\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnableInvalidOwner\",\n  \"type\": \"error\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"account\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnableUnauthorizedAccount\",\n  \"type\": \"error\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"approved\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"Approval\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"operator\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"bool\",\n    \"name\": \"approved\",\n    \"type\": \"bool\"\n  }],\n  \"name\": \"ApprovalForAll\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"_fromTokenId\",\n    \"type\": \"uint256\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"_toTokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"BatchMetadataUpdate\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"newManager\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"EventManagerSet\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"_tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"MetadataUpdate\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"previousOwner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnershipTransferred\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"TicketBurned\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"string\",\n    \"name\": \"tokenURI\",\n    \"type\": \"string\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"string\",\n    \"name\": \"qrHash\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"TicketMinted\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"from\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"Transfer\",\n  \"type\": \"event\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"approve\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"balanceOf\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"burn\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"eventManager\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"getApproved\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"getQRHash\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"operator\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"isApprovedForAll\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"tokenURI\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"qrHash\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"mintTicket\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"name\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"nextTokenId\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"owner\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"ownerOf\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"qrHashes\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"renounceOwnership\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"from\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"safeTransferFrom\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"from\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }, {\n    \"internalType\": \"bytes\",\n    \"name\": \"data\",\n    \"type\": \"bytes\"\n  }],\n  \"name\": \"safeTransferFrom\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"operator\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"bool\",\n    \"name\": \"approved\",\n    \"type\": \"bool\"\n  }],\n  \"name\": \"setApprovalForAll\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"_eventManager\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"setEventManager\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"bytes4\",\n    \"name\": \"interfaceId\",\n    \"type\": \"bytes4\"\n  }],\n  \"name\": \"supportsInterface\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"symbol\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"tokenURI\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"from\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"to\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"transferFrom\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"transferOwnership\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}];\n// ----------------------------\n\n// Basic validation\nif (!CONTRACT_ADDRESS) {\n  console.error('REACT_APP_CONTRACT_ADDRESS environment variable is required');\n}\nif (!TARGET_NETWORK_ID) console.error(\"REACT_APP_TARGET_NETWORK_ID not set.\");\nif (EVENT_MANAGER_ABI.length === 0) console.error(\"EVENT_MANAGER_ABI is empty.\");\nif (TICKET_NFT_ABI.length === 0) console.error(\"TICKET_NFT_ABI is empty.\");\n// --- Helper Functions ---\nconst getProvider = () => {\n  if (typeof window.ethereum === 'undefined') {\n    console.error('MetaMask not detected');\n    return null;\n  }\n  return new ethers.BrowserProvider(window.ethereum);\n};\nconst getSigner = async provider => {\n  try {\n    const accounts = await provider.send('eth_requestAccounts', []);\n    if (accounts.length === 0) return null;\n    return provider.getSigner(accounts[0]);\n  } catch (error) {\n    console.error('Failed to get signer:', error);\n    return null;\n  }\n};\nconst getEventManagerContract = async (readOnly = false) => {\n  const provider = getProvider();\n  if (!provider) return null;\n  const signer = readOnly ? provider : await getSigner(provider);\n  if (!signer) return null;\n  return new ethers.Contract(CONTRACT_ADDRESS, EVENT_MANAGER_ABI, signer);\n};\nconst getTicketNFTContract = async (readOnly = false) => {\n  const provider = getProvider();\n  if (!provider) return null;\n  const signer = readOnly ? provider : await getSigner(provider);\n  if (!signer) return null;\n  try {\n    var _eventManager$ticketN, _eventManager$getTick, _eventManager$nftCont;\n    // If we have a hardcoded TicketNFT address, use it directly\n    const TICKET_NFT_ADDRESS = process.env.REACT_APP_TICKET_NFT_ADDRESS;\n    if (TICKET_NFT_ADDRESS) {\n      return new ethers.Contract(TICKET_NFT_ADDRESS, TICKET_NFT_ABI, signer);\n    }\n\n    // Otherwise try to get it from EventManager\n    const eventManager = await getEventManagerContract(true);\n    if (!eventManager) return null;\n\n    // Try different possible function names\n    const ticketNFTAddress = (await ((_eventManager$ticketN = eventManager.ticketNFT) === null || _eventManager$ticketN === void 0 ? void 0 : _eventManager$ticketN.call(eventManager))) || (await ((_eventManager$getTick = eventManager.getTicketNFT) === null || _eventManager$getTick === void 0 ? void 0 : _eventManager$getTick.call(eventManager))) || (await ((_eventManager$nftCont = eventManager.nftContract) === null || _eventManager$nftCont === void 0 ? void 0 : _eventManager$nftCont.call(eventManager)));\n    if (!ticketNFTAddress) {\n      console.error(\"Could not get TicketNFT address from EventManager\");\n      return null;\n    }\n    return new ethers.Contract(ticketNFTAddress, TICKET_NFT_ABI, signer);\n  } catch (error) {\n    console.error('Failed to get TicketNFT contract:', error);\n    return null;\n  }\n};\n\n// --- Core Blockchain Functions ---\nexport const connectWallet = async () => {\n  const provider = getProvider();\n  if (!provider) return null;\n  const signer = await getSigner(provider);\n  if (!signer) return null;\n  const address = await signer.getAddress();\n  return address;\n};\nexport const checkNetwork = async () => {\n  const provider = getProvider();\n  if (!provider) return {\n    isCorrect: false,\n    currentNetwork: null\n  };\n  try {\n    const network = await provider.getNetwork();\n    const currentNetwork = {\n      chainId: Number(network.chainId),\n      name: network.name\n    };\n    return {\n      isCorrect: Number(network.chainId) === TARGET_NETWORK_ID,\n      currentNetwork\n    };\n  } catch (error) {\n    console.error('Error checking network:', error);\n    return {\n      isCorrect: false,\n      currentNetwork: null\n    };\n  }\n};\nexport const switchNetwork = async () => {\n  if (typeof window.ethereum === 'undefined') {\n    console.error('MetaMask not detected');\n    return false;\n  }\n  try {\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId: ethers.hexlify(TARGET_NETWORK_ID.toString())\n      }]\n    });\n    return true;\n  } catch (error) {\n    if (error.code === 4902) {\n      try {\n        await window.ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: ethers.hexlify(TARGET_NETWORK_ID.toString()),\n            chainName: TARGET_NETWORK_NAME,\n            nativeCurrency: {\n              name: 'ETH',\n              symbol: 'ETH',\n              decimals: 18\n            },\n            rpcUrls: [process.env.REACT_APP_RPC_URL || '']\n          }]\n        });\n        return true;\n      } catch (addError) {\n        console.error('Error adding network:', addError);\n        return false;\n      }\n    }\n    console.error('Error switching network:', error);\n    return false;\n  }\n};\n\n// Corrected buyTicket\nexport const buyTicket = async (tokenURI, qrHash, priceInEther, recipient) => {\n  if (!tokenURI || !qrHash || !priceInEther || !recipient) {\n    throw new Error(\"All parameters (tokenURI, qrHash, priceInEther, recipient) are required to buy ticket.\");\n  }\n  try {\n    var _receipt$transactionH;\n    const value = parseEther(priceInEther);\n    console.log(`Calling contract.mintTicket with URI: ${tokenURI}, QR: ${qrHash}, Recipient: ${recipient}, Value: ${value.toString()}`);\n\n    // Get the contract instance\n    const contract = await getTicketNFTContract();\n    if (!contract) {\n      throw new Error(\"Failed to get contract instance\");\n    }\n\n    // Call mintTicket instead of buyTicket\n    const tx = await contract.mintTicket(recipient, tokenURI, qrHash, {\n      value\n    });\n    const receipt = await tx.wait();\n    console.log(`Transaction Confirmed: ${receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash}`);\n    return (_receipt$transactionH = receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash) !== null && _receipt$transactionH !== void 0 ? _receipt$transactionH : null;\n  } catch (error) {\n    var _error$data;\n    console.error(\"Buy Ticket Error:\", error);\n    const reason = error.reason || (error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message) || error.message || 'Unknown error';\n    if (error.code === 4001) throw new Error('Transaction rejected.');\n    throw new Error(`Purchase Failed: ${reason}`);\n  }\n};\n\n// --- *** CORRECTED getMyTickets using Event Querying *** ---\nexport const getMyTickets = async userAddress => {\n  if (!userAddress) return [];\n  const provider = getProvider();\n  const nftContract = await getTicketNFTContract(true); // Get read-only NFT contract\n\n  if (!provider || !nftContract) {\n    console.error(\"getMyTickets: Could not get Provider or TicketNFT contract instance.\");\n    throw new Error(\"Failed to connect to NFT contract.\");\n  }\n  try {\n    console.log(`Querying Transfer events for recipient ${userAddress} on contract ${await nftContract.getAddress()}`);\n\n    // Define the Transfer event filter - transfers TO the userAddress\n    const filterTo = nftContract.filters.Transfer(null, userAddress);\n    // Define the Transfer event filter - transfers FROM the userAddress\n    const filterFrom = nftContract.filters.Transfer(userAddress);\n\n    // Query events (adjust block range as needed for performance - 'earliest' can be slow)\n    // Consider storing the last queried block number locally and starting from there.\n    const transferEventsTo = await nftContract.queryFilter(filterTo, 'earliest', 'latest');\n    const transferEventsFrom = await nftContract.queryFilter(filterFrom, 'earliest', 'latest');\n    console.log(`Found ${transferEventsTo.length} Transfer(to) events`);\n    console.log(`Found ${transferEventsFrom.length} Transfer(from) events`);\n\n    // Process events to determine current ownership\n    const ownedTokenIds = new Map();\n\n    // Add tokens transferred TO the user\n    transferEventsTo.forEach(event => {\n      if (event.args && event.args.tokenId) {\n        ownedTokenIds.set(Number(event.args.tokenId), true); // Mark as potentially owned\n      }\n    });\n\n    // Remove tokens transferred FROM the user\n    transferEventsFrom.forEach(event => {\n      if (event.args && event.args.tokenId) {\n        ownedTokenIds.delete(Number(event.args.tokenId)); // Remove if transferred away\n      }\n    });\n    const finalOwnedIds = Array.from(ownedTokenIds.keys());\n    console.log(\"Final calculated owned ticket IDs:\", finalOwnedIds);\n    return finalOwnedIds;\n  } catch (error) {\n    console.error(\"Error querying Transfer events in getMyTickets:\", error);\n    throw new Error(\"Failed to fetch owned tickets via event query.\");\n  }\n};\n\n// Corrected resellTicket (uses EventManager)\nexport const resellTicket = async tokenId => {\n  const contract = await getEventManagerContract(false);\n  if (!contract) throw new Error(\"EventManager Contract not available.\");\n  try {\n    var _receipt$transactionH2;\n    const tx = await contract.sellTicketBack(tokenId);\n    const receipt = await tx.wait();\n    return (_receipt$transactionH2 = receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash) !== null && _receipt$transactionH2 !== void 0 ? _receipt$transactionH2 : null;\n  } catch (error) {\n    console.error(\"Error reselling ticket:\", error);\n    throw new Error(error.message);\n  }\n};\n\n// Add this debug function\nexport const debugContractInterface = async () => {\n  const provider = getProvider();\n  if (!provider) {\n    console.error(\"Provider not available\");\n    return;\n  }\n  try {\n    const eventManager = await getEventManagerContract(true);\n    if (!eventManager) {\n      console.error(\"Could not get EventManager contract\");\n      return;\n    }\n\n    // Get the contract address\n    const address = await eventManager.getAddress();\n    console.log(\"Contract address:\", address);\n\n    // Get all function names\n    const fragments = eventManager.interface.fragments;\n    const functionNames = fragments.filter(frag => frag.type === \"function\" && \"name\" in frag).map(frag => frag.name);\n    console.log(\"Available functions:\", functionNames);\n    return {\n      address,\n      functionNames\n    };\n  } catch (error) {\n    console.error(\"Error debugging contract:\", error);\n    throw error;\n  }\n};\n\n// Update getEventDetails to use the correct function names\nexport const getEventDetails = async () => {\n  const contract = await getEventManagerContract(true); // true for read-only\n  if (!contract) {\n    toast.error(\"Could not connect to Event Manager contract to fetch details.\");\n    return null;\n  }\n  if (CONTRACT_ADDRESS === '0x0000000000000000000000000000000000000000') {\n    console.warn('Event details fetch skipped: Contract address not configured.');\n    // Optionally, you might want to inform the user or return a specific state\n    return null;\n  }\n  try {\n    // Call these as functions using ()\n    const isActive = await contract.eventActive();\n    const maxTicketsBigInt = await contract.maxTickets();\n    const currentTicketsBigInt = await contract.ticketCount();\n    const ticketPriceInsiderBigInt = await contract.ticketPriceInsider();\n    const ticketPriceOutsiderBigInt = await contract.ticketPriceOutsider();\n    console.log('Raw event details from contract:', {\n      isActive,\n      maxTicketsBigInt,\n      currentTicketsBigInt,\n      ticketPriceInsiderBigInt,\n      ticketPriceOutsiderBigInt\n    });\n\n    // Convert BigInt to string for prices (to be used with formatEther or display)\n    // And BigInt to number for counts (if they are not excessively large)\n    const details = {\n      isActive: !!isActive,\n      // Ensure boolean\n      maxTickets: Number(maxTicketsBigInt),\n      currentTickets: Number(currentTicketsBigInt),\n      name: 'My Awesome Event',\n      // Placeholder: Fetch from contract or config if available\n      description: 'Join us for an amazing experience!',\n      // Placeholder\n      startDate: new Date().toISOString(),\n      // Placeholder\n      endDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\n      // Placeholder\n      // Store prices as strings in Ether, converted from Wei BigInt\n      ticketPrice: formatEther(ticketPriceInsiderBigInt),\n      // Default price, can be insider\n      ticketPriceInsider: formatEther(ticketPriceInsiderBigInt),\n      ticketPriceOutsider: formatEther(ticketPriceOutsiderBigInt)\n    };\n    console.log('Processed event details:', details);\n    return details;\n  } catch (error) {\n    console.error(\"Error getting event details from contract:\", error);\n    // Check if the error is due to the contract not being deployed or methods not existing\n    if (error.code === 'CALL_EXCEPTION') {\n      toast.error(\"Failed to fetch event details: Contract call failed. Ensure contract is deployed and ABI is correct.\");\n    } else {\n      toast.error(`Failed to fetch event details: ${error.message}`);\n    }\n    return null;\n  }\n};\n\n// Corrected getTokenMetadataURI (uses TicketNFT)\nexport const getTokenMetadataURI = async tokenId => {\n  const contract = await getTicketNFTContract(true);\n  if (!contract) return null;\n  try {\n    const uri = await contract.tokenURI(tokenId);\n    return uri;\n  } catch (error) {\n    console.error(`Error getting token URI for ${tokenId}:`, error);\n    return null;\n  }\n};\n\n// --- Updated getAvailableTickets (fetches ALL issued IDs) ---\nexport const getAvailableTickets = async () => {\n  const contract = await getEventManagerContract(true);\n  if (!contract) return [];\n  try {\n    const countBN = await contract.ticketCount();\n    const count = Number(countBN);\n    if (count === 0) return [];\n    console.log(`Total tickets issued: ${count}. Fetching IDs...`);\n    const ids = [];\n    const promises = [];\n    for (let i = 0; i < count; i++) {\n      promises.push(contract.issuedTickets(i));\n    }\n    const results = await Promise.all(promises);\n    results.forEach(tokenIdBN => {\n      ids.push(Number(tokenIdBN));\n    });\n    console.log(\"All issued ticket IDs fetched:\", ids);\n    return ids;\n  } catch (error) {\n    console.error(\"Error getting available/issued tickets:\", error);\n    toast.error(\"Could not retrieve list of issued tickets.\");\n    return [];\n  }\n};\n\n// Corrected getQRHash (uses TicketNFT)\nexport const getQRHash = async tokenId => {\n  const nftContract = await getTicketNFTContract(true);\n  if (!nftContract) return null;\n  try {\n    // Ensure TICKET_NFT_ABI includes getQRHash\n    const qrHash = await nftContract.getQRHash(tokenId);\n    return qrHash;\n  } catch (error) {\n    console.error(`Error getting QR Hash for token ${tokenId}:`, error.message);\n    return null;\n  }\n};\nexport const verifyContractSetup = async () => {\n  const provider = getProvider();\n  if (!provider) {\n    throw new Error(\"Provider not available\");\n  }\n  try {\n    // Get network info\n    const network = await provider.getNetwork();\n    const isCorrectNetwork = Number(network.chainId) === TARGET_NETWORK_ID;\n\n    // Get EventManager contract\n    const eventManager = await getEventManagerContract(true);\n    if (!eventManager) {\n      throw new Error(\"Could not get EventManager contract\");\n    }\n\n    // Get TicketNFT address\n    const ticketNFTAddress = await eventManager.ticketNFT();\n    return {\n      eventManagerAddress: await eventManager.getAddress(),\n      ticketNFTAddress,\n      network: network.name,\n      isCorrectNetwork\n    };\n  } catch (error) {\n    console.error(\"Error verifying contract setup:\", error);\n    throw error;\n  }\n};\n\n// Test function to verify contract setup\nexport const testContractSetup = async () => {\n  try {\n    const setup = await verifyContractSetup();\n    console.log(\"Contract Setup:\", setup);\n    return setup;\n  } catch (error) {\n    console.error(\"Setup verification failed:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["ethers","parseEther","formatEther","toast","CONTRACT_ADDRESS","process","env","REACT_APP_CONTRACT_ADDRESS","TARGET_NETWORK_ID","parseInt","REACT_APP_TARGET_NETWORK_ID","TARGET_NETWORK_NAME","REACT_APP_TARGET_NETWORK_NAME","console","warn","error","EVENT_MANAGER_ABI","TICKET_NFT_ABI","length","getProvider","window","ethereum","BrowserProvider","getSigner","provider","accounts","send","getEventManagerContract","readOnly","signer","Contract","getTicketNFTContract","_eventManager$ticketN","_eventManager$getTick","_eventManager$nftCont","TICKET_NFT_ADDRESS","REACT_APP_TICKET_NFT_ADDRESS","eventManager","ticketNFTAddress","ticketNFT","call","getTicketNFT","nftContract","connectWallet","address","getAddress","checkNetwork","isCorrect","currentNetwork","network","getNetwork","chainId","Number","name","switchNetwork","request","method","params","hexlify","toString","code","chainName","nativeCurrency","symbol","decimals","rpcUrls","REACT_APP_RPC_URL","addError","buyTicket","tokenURI","qrHash","priceInEther","recipient","Error","_receipt$transactionH","value","log","contract","tx","mintTicket","receipt","wait","transactionHash","_error$data","reason","data","message","getMyTickets","userAddress","filterTo","filters","Transfer","filterFrom","transferEventsTo","queryFilter","transferEventsFrom","ownedTokenIds","Map","forEach","event","args","tokenId","set","delete","finalOwnedIds","Array","from","keys","resellTicket","_receipt$transactionH2","sellTicketBack","debugContractInterface","fragments","interface","functionNames","filter","frag","type","map","getEventDetails","isActive","eventActive","maxTicketsBigInt","maxTickets","currentTicketsBigInt","ticketCount","ticketPriceInsiderBigInt","ticketPriceInsider","ticketPriceOutsiderBigInt","ticketPriceOutsider","details","currentTickets","description","startDate","Date","toISOString","endDate","now","ticketPrice","getTokenMetadataURI","uri","getAvailableTickets","countBN","count","ids","promises","i","push","issuedTickets","results","Promise","all","tokenIdBN","getQRHash","verifyContractSetup","isCorrectNetwork","eventManagerAddress","testContractSetup","setup"],"sources":["C:/Users/negis/OneDrive/Desktop/new project/blockfest-ui/src/utils/blockchain.ts"],"sourcesContent":["// src/utils/blockchain.ts\n\nimport { ethers, parseEther,toBeHex,formatEther } from 'ethers';\nimport { BigNumberish } from 'ethers';\nimport { toast } from 'react-hot-toast';\nimport { EventDetails } from '../types/global';\n\n\n// Define types\ninterface TicketData {\n    tokenId: number;\n    tokenURI: string;\n    qrHash: string;\n    owner: string;\n}\n\n// --- Configuration ---\nconst CONTRACT_ADDRESS = process.env.REACT_APP_CONTRACT_ADDRESS || '0x0000000000000000000000000000000000000000';\nconst TARGET_NETWORK_ID = parseInt(process.env.REACT_APP_TARGET_NETWORK_ID || '11155111', 10);\nconst TARGET_NETWORK_NAME = process.env.REACT_APP_TARGET_NETWORK_NAME || 'Sepolia Testnet';\n\nif (CONTRACT_ADDRESS === '0x0000000000000000000000000000000000000000') {\n    console.warn('Contract address not configured. Please set REACT_APP_CONTRACT_ADDRESS in your .env file.');\n    toast.error('Contract address not configured. Please set it in your .env file.');\n}\n\n// --- ABIs ---\n// IMPORTANT: Paste your ACTUAL compiled ABIs!\n\nconst EVENT_MANAGER_ABI =[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_ticketNFT\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_staking\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_validator\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_sybil\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"buyTicket\",\"inputs\":[{\"name\":\"tokenURI\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"qrHash\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"outsider\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"outputs\":[],\"stateMutability\":\"payable\"},{\"type\":\"function\",\"name\":\"cancelEvent\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"eventActive\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getStakedAmount\",\"inputs\":[{\"name\":\"user\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getSybilScore\",\"inputs\":[{\"name\":\"user\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"hasTicket\",\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isOutsider\",\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isValidator\",\"inputs\":[{\"name\":\"user\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"issuedTickets\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"maxTickets\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"ownedTickets\",\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"refillTickets\",\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"refunded\",\"inputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"sellTicketBack\",\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setEventActive\",\"inputs\":[{\"name\":\"active\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setTicketPrices\",\"inputs\":[{\"name\":\"insiderPrice\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"outsiderPrice\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"staking\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contract Staking\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"sybil\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contract SybilGuard\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"ticketCount\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"ticketNFT\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contract TicketNFT\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"ticketPriceInsider\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"ticketPriceOutsider\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"validator\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contract ValidatorPoS\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"withdrawFunds\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"TicketPurchased\",\"inputs\":[{\"name\":\"buyer\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"TicketRefunded\",\"inputs\":[{\"name\":\"holder\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"OwnableInvalidOwner\",\"inputs\":[{\"name\":\"owner\",\"type\":\"address\",\"internalType\":\"address\"}]},{\"type\":\"error\",\"name\":\"OwnableUnauthorizedAccount\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"internalType\":\"address\"}]}]\n  \n\n// --- Updated TicketNFT ABI (based on your TicketNFT.sol and needs) ---\nconst TICKET_NFT_ABI =[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"EventManagerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TicketBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"qrHash\",\"type\":\"string\"}],\"name\":\"TicketMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eventManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getQRHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"qrHash\",\"type\":\"string\"}],\"name\":\"mintTicket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"qrHashes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventManager\",\"type\":\"address\"}],\"name\":\"setEventManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n// ----------------------------\n\n// Basic validation\nif (!CONTRACT_ADDRESS) {\n    console.error('REACT_APP_CONTRACT_ADDRESS environment variable is required');\n}\nif (!TARGET_NETWORK_ID) console.error(\"REACT_APP_TARGET_NETWORK_ID not set.\");\nif (EVENT_MANAGER_ABI.length === 0) console.error(\"EVENT_MANAGER_ABI is empty.\");\nif (TICKET_NFT_ABI.length === 0) console.error(\"TICKET_NFT_ABI is empty.\");\n\ninterface NetworkInfo { chainId: number; name: string; }\n\n// --- Helper Functions ---\nconst getProvider = (): ethers.BrowserProvider | null => {\n    if (typeof window.ethereum === 'undefined') {\n        console.error('MetaMask not detected');\n        return null;\n    }\n    return new ethers.BrowserProvider(window.ethereum);\n};\n\nconst getSigner = async (provider: ethers.BrowserProvider): Promise<ethers.Signer | null> => {\n    try {\n        const accounts = await provider.send('eth_requestAccounts', []);\n        if (accounts.length === 0) return null;\n        return provider.getSigner(accounts[0]);\n    } catch (error) {\n        console.error('Failed to get signer:', error);\n        return null;\n    }\n};\n\nconst getEventManagerContract = async (readOnly = false): Promise<ethers.Contract | null> => {\n    const provider = getProvider();\n    if (!provider) return null;\n\n    const signer = readOnly ? provider : await getSigner(provider);\n    if (!signer) return null;\n\n    return new ethers.Contract(CONTRACT_ADDRESS, EVENT_MANAGER_ABI, signer);\n};\n\nconst getTicketNFTContract = async (readOnly = false): Promise<ethers.Contract | null> => {\n    const provider = getProvider();\n    if (!provider) return null;\n\n    const signer = readOnly ? provider : await getSigner(provider);\n    if (!signer) return null;\n\n    try {\n        // If we have a hardcoded TicketNFT address, use it directly\n        const TICKET_NFT_ADDRESS = process.env.REACT_APP_TICKET_NFT_ADDRESS;\n        if (TICKET_NFT_ADDRESS) {\n            return new ethers.Contract(TICKET_NFT_ADDRESS, TICKET_NFT_ABI, signer);\n        }\n\n        // Otherwise try to get it from EventManager\n        const eventManager = await getEventManagerContract(true);\n        if (!eventManager) return null;\n\n        // Try different possible function names\n        const ticketNFTAddress = await eventManager.ticketNFT?.() || \n                               await eventManager.getTicketNFT?.() || \n                               await eventManager.nftContract?.();\n\n        if (!ticketNFTAddress) {\n            console.error(\"Could not get TicketNFT address from EventManager\");\n            return null;\n        }\n\n        return new ethers.Contract(ticketNFTAddress, TICKET_NFT_ABI, signer);\n    } catch (error) {\n        console.error('Failed to get TicketNFT contract:', error);\n        return null;\n    }\n};\n\n// --- Core Blockchain Functions ---\nexport const connectWallet = async (): Promise<string | null> => {\n    const provider = getProvider();\n    if (!provider) return null;\n    \n    const signer = await getSigner(provider);\n    if (!signer) return null;\n\n    const address = await signer.getAddress();\n    return address;\n};\nexport const checkNetwork = async (): Promise<{ isCorrect: boolean; currentNetwork: NetworkInfo | null }> => {\n    const provider = getProvider();\n    if (!provider) return { isCorrect: false, currentNetwork: null };\n\n    try {\n        const network = await provider.getNetwork();\n        const currentNetwork: NetworkInfo = {\n            chainId: Number(network.chainId),\n            name: network.name\n        };\n\n        return {\n            isCorrect: Number(network.chainId) === TARGET_NETWORK_ID,\n            currentNetwork\n        };\n    } catch (error) {\n        console.error('Error checking network:', error);\n        return { isCorrect: false, currentNetwork: null };\n    }\n};\nexport const switchNetwork = async (): Promise<boolean> => {\n    if (typeof window.ethereum === 'undefined') {\n        console.error('MetaMask not detected');\n        return false;\n    }\n\n    try {\n        await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: ethers.hexlify(TARGET_NETWORK_ID.toString()) }]\n        });\n        return true;\n    } catch (error: any) {\n        if (error.code === 4902) {\n            try {\n                await window.ethereum.request({\n                    method: 'wallet_addEthereumChain',\n                    params: [{\n                        chainId: ethers.hexlify(TARGET_NETWORK_ID.toString()),\n                        chainName: TARGET_NETWORK_NAME,\n                        nativeCurrency: {\n                            name: 'ETH',\n                            symbol: 'ETH',\n                            decimals: 18\n                        },\n                        rpcUrls: [process.env.REACT_APP_RPC_URL || '']\n                    }]\n                });\n                return true;\n            } catch (addError) {\n                console.error('Error adding network:', addError);\n                return false;\n            }\n        }\n        console.error('Error switching network:', error);\n        return false;\n    }\n};\n\n// Corrected buyTicket\nexport const buyTicket = async (\n    tokenURI: string,\n    qrHash: string,\n    priceInEther: string,\n    recipient: string\n): Promise<string | null> => {\n    if (!tokenURI || !qrHash || !priceInEther || !recipient) {\n        throw new Error(\"All parameters (tokenURI, qrHash, priceInEther, recipient) are required to buy ticket.\");\n    }\n\n    try {\n        const value = parseEther(priceInEther);\n        console.log(`Calling contract.mintTicket with URI: ${tokenURI}, QR: ${qrHash}, Recipient: ${recipient}, Value: ${value.toString()}`);\n        \n        // Get the contract instance\n        const contract = await getTicketNFTContract();\n        if (!contract) {\n            throw new Error(\"Failed to get contract instance\");\n        }\n\n        // Call mintTicket instead of buyTicket\n        const tx = await contract.mintTicket(recipient, tokenURI, qrHash, { value });\n        const receipt = await tx.wait();\n        console.log(`Transaction Confirmed: ${receipt?.transactionHash}`);\n        return receipt?.transactionHash ?? null;\n    } catch (error: any) {\n        console.error(\"Buy Ticket Error:\", error);\n        const reason = error.reason || error?.data?.message || error.message || 'Unknown error';\n        if (error.code === 4001) throw new Error('Transaction rejected.');\n        throw new Error(`Purchase Failed: ${reason}`);\n    }\n};\n\n// --- *** CORRECTED getMyTickets using Event Querying *** ---\nexport const getMyTickets = async (userAddress: string): Promise<number[]> => {\n    if (!userAddress) return [];\n\n    const provider = getProvider();\n    const nftContract = await getTicketNFTContract(true); // Get read-only NFT contract\n\n    if (!provider || !nftContract) {\n        console.error(\"getMyTickets: Could not get Provider or TicketNFT contract instance.\");\n        throw new Error(\"Failed to connect to NFT contract.\");\n    }\n\n    try {\n        console.log(`Querying Transfer events for recipient ${userAddress} on contract ${await nftContract.getAddress()}`);\n\n        // Define the Transfer event filter - transfers TO the userAddress\n        const filterTo = nftContract.filters.Transfer(null, userAddress);\n        // Define the Transfer event filter - transfers FROM the userAddress\n        const filterFrom = nftContract.filters.Transfer(userAddress);\n\n        // Query events (adjust block range as needed for performance - 'earliest' can be slow)\n        // Consider storing the last queried block number locally and starting from there.\n        const transferEventsTo = await nftContract.queryFilter(filterTo, 'earliest', 'latest');\n        const transferEventsFrom = await nftContract.queryFilter(filterFrom, 'earliest', 'latest');\n\n        console.log(`Found ${transferEventsTo.length} Transfer(to) events`);\n        console.log(`Found ${transferEventsFrom.length} Transfer(from) events`);\n\n        // Process events to determine current ownership\n        const ownedTokenIds = new Map<number, boolean>();\n\n        // Add tokens transferred TO the user\n        transferEventsTo.forEach((event: any) => {\n            if (event.args && event.args.tokenId) {\n                ownedTokenIds.set(Number(event.args.tokenId), true); // Mark as potentially owned\n            }\n        });\n\n        // Remove tokens transferred FROM the user\n        transferEventsFrom.forEach((event: any) => {\n            if (event.args && event.args.tokenId) {\n                ownedTokenIds.delete(Number(event.args.tokenId)); // Remove if transferred away\n            }\n        });\n\n        const finalOwnedIds = Array.from(ownedTokenIds.keys());\n        console.log(\"Final calculated owned ticket IDs:\", finalOwnedIds);\n        return finalOwnedIds;\n\n    } catch (error: any) {\n        console.error(\"Error querying Transfer events in getMyTickets:\", error);\n        throw new Error(\"Failed to fetch owned tickets via event query.\");\n    }\n};\n\n// Corrected resellTicket (uses EventManager)\nexport const resellTicket = async (tokenId: number): Promise<string | null> => {\n    const contract = await getEventManagerContract(false);\n    if (!contract) throw new Error(\"EventManager Contract not available.\");\n\n    try {\n        const tx = await contract.sellTicketBack(tokenId);\n        const receipt = await tx.wait();\n        return receipt?.transactionHash ?? null;\n    } catch (error: any) {\n        console.error(\"Error reselling ticket:\", error);\n        throw new Error(error.message);\n    }\n};\n\n// Add this debug function\nexport const debugContractInterface = async () => {\n    const provider = getProvider();\n    if (!provider) {\n        console.error(\"Provider not available\");\n        return;\n    }\n\n    try {\n        const eventManager = await getEventManagerContract(true);\n        if (!eventManager) {\n            console.error(\"Could not get EventManager contract\");\n            return;\n        }\n\n        // Get the contract address\n        const address = await eventManager.getAddress();\n        console.log(\"Contract address:\", address);\n\n        // Get all function names\n        const fragments = eventManager.interface.fragments;\n        const functionNames = fragments\n          .filter(frag => frag.type === \"function\" && \"name\" in frag)\n          .map(frag => (frag as any).name);\n        console.log(\"Available functions:\", functionNames);\n\n        return {\n            address,\n            functionNames\n        };\n    } catch (error) {\n        console.error(\"Error debugging contract:\", error);\n        throw error;\n    }\n};\n\n// Update getEventDetails to use the correct function names\nexport const getEventDetails = async (): Promise<EventDetails | null> => {\n    const contract = await getEventManagerContract(true); // true for read-only\n    if (!contract) {\n        toast.error(\"Could not connect to Event Manager contract to fetch details.\");\n        return null;\n    }\n     if (CONTRACT_ADDRESS === '0x0000000000000000000000000000000000000000') {\n        console.warn('Event details fetch skipped: Contract address not configured.');\n        // Optionally, you might want to inform the user or return a specific state\n        return null; \n    }\n\n\n    try {\n        // Call these as functions using ()\n        const isActive = await contract.eventActive();\n        const maxTicketsBigInt = await contract.maxTickets();\n        const currentTicketsBigInt = await contract.ticketCount();\n        const ticketPriceInsiderBigInt = await contract.ticketPriceInsider();\n        const ticketPriceOutsiderBigInt = await contract.ticketPriceOutsider();\n\n        console.log('Raw event details from contract:', {\n            isActive, maxTicketsBigInt, currentTicketsBigInt, ticketPriceInsiderBigInt, ticketPriceOutsiderBigInt\n        });\n\n        // Convert BigInt to string for prices (to be used with formatEther or display)\n        // And BigInt to number for counts (if they are not excessively large)\n        const details: EventDetails = {\n            isActive: !!isActive, // Ensure boolean\n            maxTickets: Number(maxTicketsBigInt),\n            currentTickets: Number(currentTicketsBigInt),\n            name: 'My Awesome Event', // Placeholder: Fetch from contract or config if available\n            description: 'Join us for an amazing experience!', // Placeholder\n            startDate: new Date().toISOString(), // Placeholder\n            endDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(), // Placeholder\n            // Store prices as strings in Ether, converted from Wei BigInt\n            ticketPrice: formatEther(ticketPriceInsiderBigInt), // Default price, can be insider\n            ticketPriceInsider: formatEther(ticketPriceInsiderBigInt),\n            ticketPriceOutsider: formatEther(ticketPriceOutsiderBigInt),\n        };\n        console.log('Processed event details:', details);\n        return details;\n\n    } catch (error: any) {\n        console.error(\"Error getting event details from contract:\", error);\n        // Check if the error is due to the contract not being deployed or methods not existing\n        if (error.code === 'CALL_EXCEPTION') {\n             toast.error(\"Failed to fetch event details: Contract call failed. Ensure contract is deployed and ABI is correct.\");\n        } else {\n             toast.error(`Failed to fetch event details: ${error.message}`);\n        }\n        return null;\n    }\n}\n\n// Corrected getTokenMetadataURI (uses TicketNFT)\nexport const getTokenMetadataURI = async (tokenId: number): Promise<string | null> => {\n    const contract = await getTicketNFTContract(true);\n    if (!contract) return null;\n\n    try {\n        const uri = await contract.tokenURI(tokenId);\n        return uri;\n    } catch (error) {\n        console.error(`Error getting token URI for ${tokenId}:`, error);\n        return null;\n    }\n};\n\n// --- Updated getAvailableTickets (fetches ALL issued IDs) ---\nexport const getAvailableTickets = async (): Promise<number[]> => {\n    const contract = await getEventManagerContract(true);\n    if (!contract) return [];\n\n    try {\n        const countBN = await contract.ticketCount();\n        const count = Number(countBN);\n        if (count === 0) return [];\n\n        console.log(`Total tickets issued: ${count}. Fetching IDs...`);\n        const ids: number[] = [];\n        const promises: Promise<BigNumberish>[] = [];\n\n        for (let i = 0; i < count; i++) {\n            promises.push(contract.issuedTickets(i));\n        }\n\n        const results = await Promise.all(promises) as BigNumberish[];\n        results.forEach((tokenIdBN: BigNumberish) => {\n            ids.push(Number(tokenIdBN));\n        });\n\n        console.log(\"All issued ticket IDs fetched:\", ids);\n        return ids;\n\n    } catch (error) {\n        console.error(\"Error getting available/issued tickets:\", error);\n        toast.error(\"Could not retrieve list of issued tickets.\");\n        return [];\n    }\n};\n\n// Corrected getQRHash (uses TicketNFT)\nexport const getQRHash = async (tokenId: number): Promise<string | null> => {\n    const nftContract = await getTicketNFTContract(true);\n    if (!nftContract) return null;\n    try {\n        // Ensure TICKET_NFT_ABI includes getQRHash\n        const qrHash = await nftContract.getQRHash(tokenId);\n        return qrHash;\n    } catch (error: any) {\n        console.error(`Error getting QR Hash for token ${tokenId}:`, error.message);\n        return null;\n    }\n};\n\nexport const verifyContractSetup = async (): Promise<{ \n    eventManagerAddress: string, \n    ticketNFTAddress: string | null,\n    network: string,\n    isCorrectNetwork: boolean \n}> => {\n    const provider = getProvider();\n    if (!provider) {\n        throw new Error(\"Provider not available\");\n    }\n\n    try {\n        // Get network info\n        const network = await provider.getNetwork();\n        const isCorrectNetwork = Number(network.chainId) === TARGET_NETWORK_ID;\n\n        // Get EventManager contract\n        const eventManager = await getEventManagerContract(true);\n        if (!eventManager) {\n            throw new Error(\"Could not get EventManager contract\");\n        }\n\n        // Get TicketNFT address\n        const ticketNFTAddress = await eventManager.ticketNFT();\n\n        return {\n            eventManagerAddress: await eventManager.getAddress(),\n            ticketNFTAddress,\n            network: network.name,\n            isCorrectNetwork\n        };\n    } catch (error) {\n        console.error(\"Error verifying contract setup:\", error);\n        throw error;\n    }\n};\n\n// Test function to verify contract setup\nexport const testContractSetup = async () => {\n    try {\n        const setup = await verifyContractSetup();\n        console.log(\"Contract Setup:\", setup);\n        return setup;\n    } catch (error) {\n        console.error(\"Setup verification failed:\", error);\n        throw error;\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}