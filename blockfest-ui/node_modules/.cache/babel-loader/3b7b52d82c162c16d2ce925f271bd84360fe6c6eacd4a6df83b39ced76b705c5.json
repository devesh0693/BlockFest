{"ast":null,"code":"// src/utils/blockchain.ts\n\nimport { ethers, parseEther, ethers as ethersUtils } from 'ethers';\nimport { toast } from 'react-hot-toast';\nimport '../types/global';\n\n// Define types\n\n// --- Configuration ---\nconst CONTRACT_ADDRESS = process.env.REACT_APP_CONTRACT_ADDRESS;\nconst TARGET_NETWORK_ID = parseInt(process.env.REACT_APP_TARGET_NETWORK_ID || '11155111', 10);\nconst TARGET_NETWORK_NAME = process.env.REACT_APP_TARGET_NETWORK_NAME || 'Sepolia Testnet';\nif (!CONTRACT_ADDRESS) {\n  throw new Error('REACT_APP_CONTRACT_ADDRESS environment variable is required');\n}\n\n// --- ABIs ---\n// IMPORTANT: Paste your ACTUAL compiled ABIs!\n\nconst EVENT_MANAGER_ABI = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"_ticketNFT\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"_staking\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"_validator\",\n    type: \"address\"\n  }, {\n    internalType: \"address\",\n    name: \"_sybil\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"constructor\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnableInvalidOwner\",\n  \"type\": \"error\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"account\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnableUnauthorizedAccount\",\n  \"type\": \"error\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"previousOwner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnershipTransferred\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"buyer\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"TicketPurchased\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"holder\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"TicketRefunded\",\n  \"type\": \"event\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"tokenURI\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"qrHash\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"bool\",\n    \"name\": \"outsider\",\n    \"type\": \"bool\"\n  }],\n  \"name\": \"buyTicket\",\n  \"outputs\": [],\n  \"stateMutability\": \"payable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"cancelEvent\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"eventActive\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"getStakedAmount\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"getSybilScore\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"hasTicket\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"isOutsider\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"isValidator\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"issuedTickets\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"maxTickets\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"ownedTickets\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"owner\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"refillTickets\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"refunded\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"renounceOwnership\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"sellTicketBack\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"active\",\n    \"type\": \"bool\"\n  }],\n  \"name\": \"setEventActive\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"insiderPrice\",\n    \"type\": \"uint256\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"outsiderPrice\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"setTicketPrices\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"staking\",\n  \"outputs\": [{\n    \"internalType\": \"contract Staking\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"sybil\",\n  \"outputs\": [{\n    \"internalType\": \"contract SybilGuard\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"ticketCount\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"ticketNFT\",\n  \"outputs\": [{\n    \"internalType\": \"contract TicketNFT\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"ticketPriceInsider\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"ticketPriceOutsider\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"transferOwnership\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"validator\",\n  \"outputs\": [{\n    \"internalType\": \"contract ValidatorPoS\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"withdrawFunds\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}];\n\n// --- Updated TicketNFT ABI (based on your TicketNFT.sol and needs) ---\nconst TICKET_NFT_ABI = [{\n  \"type\": \"constructor\",\n  \"inputs\": [{\n    \"name\": \"initialOwner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"approve\",\n  \"inputs\": [{\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"balanceOf\",\n  \"inputs\": [{\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"burn\",\n  \"inputs\": [{\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"eventManager\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"getApproved\",\n  \"inputs\": [{\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"getQRHash\",\n  \"inputs\": [{\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"isApprovedForAll\",\n  \"inputs\": [{\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"operator\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"bool\",\n    \"internalType\": \"bool\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"mintTicket\",\n  \"inputs\": [{\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenURI\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }, {\n    \"name\": \"qrHash\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"name\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"nextTokenId\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"owner\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"ownerOf\",\n  \"inputs\": [{\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"qrHashes\",\n  \"inputs\": [{\n    \"name\": \"\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"renounceOwnership\",\n  \"inputs\": [],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"safeTransferFrom\",\n  \"inputs\": [{\n    \"name\": \"from\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"safeTransferFrom\",\n  \"inputs\": [{\n    \"name\": \"from\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }, {\n    \"name\": \"data\",\n    \"type\": \"bytes\",\n    \"internalType\": \"bytes\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"setApprovalForAll\",\n  \"inputs\": [{\n    \"name\": \"operator\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"approved\",\n    \"type\": \"bool\",\n    \"internalType\": \"bool\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"setEventManager\",\n  \"inputs\": [{\n    \"name\": \"_eventManager\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"supportsInterface\",\n  \"inputs\": [{\n    \"name\": \"interfaceId\",\n    \"type\": \"bytes4\",\n    \"internalType\": \"bytes4\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"bool\",\n    \"internalType\": \"bool\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"symbol\",\n  \"inputs\": [],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"tokenURI\",\n  \"inputs\": [{\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [{\n    \"name\": \"\",\n    \"type\": \"string\",\n    \"internalType\": \"string\"\n  }],\n  \"stateMutability\": \"view\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"transferFrom\",\n  \"inputs\": [{\n    \"name\": \"from\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"function\",\n  \"name\": \"transferOwnership\",\n  \"inputs\": [{\n    \"name\": \"newOwner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }],\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\"\n}, {\n  \"type\": \"event\",\n  \"name\": \"Approval\",\n  \"inputs\": [{\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"approved\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": true,\n    \"internalType\": \"uint256\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"ApprovalForAll\",\n  \"inputs\": [{\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"operator\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"approved\",\n    \"type\": \"bool\",\n    \"indexed\": false,\n    \"internalType\": \"bool\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"BatchMetadataUpdate\",\n  \"inputs\": [{\n    \"name\": \"_fromTokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": false,\n    \"internalType\": \"uint256\"\n  }, {\n    \"name\": \"_toTokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": false,\n    \"internalType\": \"uint256\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"EventManagerSet\",\n  \"inputs\": [{\n    \"name\": \"newManager\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"MetadataUpdate\",\n  \"inputs\": [{\n    \"name\": \"_tokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": false,\n    \"internalType\": \"uint256\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"OwnershipTransferred\",\n  \"inputs\": [{\n    \"name\": \"previousOwner\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"newOwner\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"TicketBurned\",\n  \"inputs\": [{\n    \"name\": \"user\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": true,\n    \"internalType\": \"uint256\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"TicketMinted\",\n  \"inputs\": [{\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": true,\n    \"internalType\": \"uint256\"\n  }, {\n    \"name\": \"tokenURI\",\n    \"type\": \"string\",\n    \"indexed\": false,\n    \"internalType\": \"string\"\n  }, {\n    \"name\": \"qrHash\",\n    \"type\": \"string\",\n    \"indexed\": false,\n    \"internalType\": \"string\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"event\",\n  \"name\": \"Transfer\",\n  \"inputs\": [{\n    \"name\": \"from\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"to\",\n    \"type\": \"address\",\n    \"indexed\": true,\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"indexed\": true,\n    \"internalType\": \"uint256\"\n  }],\n  \"anonymous\": false\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721IncorrectOwner\",\n  \"inputs\": [{\n    \"name\": \"sender\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }, {\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721InsufficientApproval\",\n  \"inputs\": [{\n    \"name\": \"operator\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }, {\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721InvalidApprover\",\n  \"inputs\": [{\n    \"name\": \"approver\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721InvalidOperator\",\n  \"inputs\": [{\n    \"name\": \"operator\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721InvalidOwner\",\n  \"inputs\": [{\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721InvalidReceiver\",\n  \"inputs\": [{\n    \"name\": \"receiver\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721InvalidSender\",\n  \"inputs\": [{\n    \"name\": \"sender\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"ERC721NonexistentToken\",\n  \"inputs\": [{\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\",\n    \"internalType\": \"uint256\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"OwnableInvalidOwner\",\n  \"inputs\": [{\n    \"name\": \"owner\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}, {\n  \"type\": \"error\",\n  \"name\": \"OwnableUnauthorizedAccount\",\n  \"inputs\": [{\n    \"name\": \"account\",\n    \"type\": \"address\",\n    \"internalType\": \"address\"\n  }]\n}];\n// ----------------------------\n\n// Basic validation\nif (!CONTRACT_ADDRESS) {\n  throw new Error('REACT_APP_CONTRACT_ADDRESS environment variable is required');\n}\nif (!TARGET_NETWORK_ID) console.error(\"REACT_APP_TARGET_NETWORK_ID not set.\");\nif (EVENT_MANAGER_ABI.length === 0) console.error(\"EVENT_MANAGER_ABI is empty.\");\nif (TICKET_NFT_ABI.length === 0) console.error(\"TICKET_NFT_ABI is empty.\");\n// --- Helper Functions ---\nconst getProvider = () => {\n  if (typeof window.ethereum === 'undefined') {\n    console.error('MetaMask not detected');\n    return null;\n  }\n  return new ethers.BrowserProvider(window.ethereum);\n};\nconst getSigner = async provider => {\n  try {\n    const accounts = await provider.send('eth_requestAccounts', []);\n    if (accounts.length === 0) return null;\n    return provider.getSigner(accounts[0]);\n  } catch (error) {\n    console.error('Failed to get signer:', error);\n    return null;\n  }\n};\nconst getEventManagerContract = async (readOnly = false) => {\n  const provider = getProvider();\n  if (!provider) return null;\n  const signer = readOnly ? provider : await getSigner(provider);\n  if (!signer) return null;\n  return new ethers.Contract(CONTRACT_ADDRESS, EVENT_MANAGER_ABI, signer);\n};\nconst getTicketNFTContract = async (readOnly = false) => {\n  const provider = getProvider();\n  if (!provider) return null;\n  const signer = readOnly ? provider : await getSigner(provider);\n  if (!signer) return null;\n  const eventManager = await getEventManagerContract(true);\n  if (!eventManager) return null;\n  try {\n    const ticketNFTAddress = await eventManager.ticketNFT();\n    return new ethers.Contract(ticketNFTAddress, TICKET_NFT_ABI, signer);\n  } catch (error) {\n    console.error('Failed to get TicketNFT contract:', error);\n    return null;\n  }\n};\n\n// --- Core Blockchain Functions ---\nexport const connectWallet = async () => {\n  const provider = getProvider();\n  if (!provider) return null;\n  const signer = await getSigner(provider);\n  if (!signer) return null;\n  const address = await signer.getAddress();\n  return address;\n};\nexport const checkNetwork = async () => {\n  const provider = getProvider();\n  if (!provider) return {\n    isCorrect: false,\n    currentNetwork: null\n  };\n  try {\n    const network = await provider.getNetwork();\n    const currentNetwork = {\n      chainId: Number(network.chainId),\n      name: network.name\n    };\n    return {\n      isCorrect: Number(network.chainId) === TARGET_NETWORK_ID,\n      currentNetwork\n    };\n  } catch (error) {\n    console.error('Error checking network:', error);\n    return {\n      isCorrect: false,\n      currentNetwork: null\n    };\n  }\n};\nexport const switchNetwork = async () => {\n  if (typeof window.ethereum === 'undefined') {\n    console.error('MetaMask not detected');\n    return false;\n  }\n  try {\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId: ethersUtils.hexlify(TARGET_NETWORK_ID.toString())\n      }]\n    });\n    return true;\n  } catch (error) {\n    if (error.code === 4902) {\n      try {\n        await window.ethereum.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: ethersUtils.hexlify(TARGET_NETWORK_ID.toString()),\n            chainName: TARGET_NETWORK_NAME,\n            nativeCurrency: {\n              name: 'ETH',\n              symbol: 'ETH',\n              decimals: 18\n            },\n            rpcUrls: [process.env.REACT_APP_RPC_URL || '']\n          }]\n        });\n        return true;\n      } catch (addError) {\n        console.error('Error adding network:', addError);\n        return false;\n      }\n    }\n    console.error('Error switching network:', error);\n    return false;\n  }\n};\n\n// Corrected buyTicket\nexport const buyTicket = async (tokenURI, qrHash, outsider, priceInEther) => {\n  const contract = await getEventManagerContract(false); // EventManager handles buying\n  if (!contract) throw new Error(\"EventManager Contract not available.\");\n  if (!priceInEther) throw new Error(\"Price is required to buy ticket.\");\n  try {\n    var _receipt$transactionH;\n    const value = parseEther(priceInEther);\n    console.log(`Calling contract.buyTicket with URI: ${tokenURI}, QR: ${qrHash}, Outsider: ${outsider}, Value: ${value.toString()}`);\n    const tx = await contract.buyTicket(tokenURI, qrHash, outsider, {\n      value\n    });\n    const receipt = await tx.wait();\n    console.log(`Transaction Confirmed: ${receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash}`);\n    return (_receipt$transactionH = receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash) !== null && _receipt$transactionH !== void 0 ? _receipt$transactionH : null;\n  } catch (error) {\n    var _error$data;\n    console.error(\"Buy Ticket Error:\", error);\n    const reason = error.reason || (error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.message) || error.message || 'Unknown error';\n    if (error.code === 4001) throw new Error('Transaction rejected.');\n    throw new Error(`Purchase Failed: ${reason}`);\n  }\n};\n\n// --- *** CORRECTED getMyTickets using Event Querying *** ---\nexport const getMyTickets = async userAddress => {\n  if (!userAddress) return [];\n  const provider = getProvider();\n  const nftContract = await getTicketNFTContract(true); // Get read-only NFT contract\n\n  if (!provider || !nftContract) {\n    console.error(\"getMyTickets: Could not get Provider or TicketNFT contract instance.\");\n    throw new Error(\"Failed to connect to NFT contract.\");\n  }\n  try {\n    console.log(`Querying Transfer events for recipient ${userAddress} on contract ${await nftContract.getAddress()}`);\n\n    // Define the Transfer event filter - transfers TO the userAddress\n    const filterTo = nftContract.filters.Transfer(null, userAddress);\n    // Define the Transfer event filter - transfers FROM the userAddress\n    const filterFrom = nftContract.filters.Transfer(userAddress);\n\n    // Query events (adjust block range as needed for performance - 'earliest' can be slow)\n    // Consider storing the last queried block number locally and starting from there.\n    const transferEventsTo = await nftContract.queryFilter(filterTo, 'earliest', 'latest');\n    const transferEventsFrom = await nftContract.queryFilter(filterFrom, 'earliest', 'latest');\n    console.log(`Found ${transferEventsTo.length} Transfer(to) events`);\n    console.log(`Found ${transferEventsFrom.length} Transfer(from) events`);\n\n    // Process events to determine current ownership\n    const ownedTokenIds = new Map();\n\n    // Add tokens transferred TO the user\n    transferEventsTo.forEach(event => {\n      if (event.args && event.args.tokenId) {\n        ownedTokenIds.set(Number(event.args.tokenId), true); // Mark as potentially owned\n      }\n    });\n\n    // Remove tokens transferred FROM the user\n    transferEventsFrom.forEach(event => {\n      if (event.args && event.args.tokenId) {\n        ownedTokenIds.delete(Number(event.args.tokenId)); // Remove if transferred away\n      }\n    });\n    const finalOwnedIds = Array.from(ownedTokenIds.keys());\n    console.log(\"Final calculated owned ticket IDs:\", finalOwnedIds);\n    return finalOwnedIds;\n  } catch (error) {\n    console.error(\"Error querying Transfer events in getMyTickets:\", error);\n    throw new Error(\"Failed to fetch owned tickets via event query.\");\n  }\n};\n\n// Corrected resellTicket (uses EventManager)\nexport const resellTicket = async tokenId => {\n  const contract = await getEventManagerContract(false);\n  if (!contract) throw new Error(\"EventManager Contract not available.\");\n  try {\n    var _receipt$transactionH2;\n    const tx = await contract.sellTicketBack(tokenId);\n    const receipt = await tx.wait();\n    return (_receipt$transactionH2 = receipt === null || receipt === void 0 ? void 0 : receipt.transactionHash) !== null && _receipt$transactionH2 !== void 0 ? _receipt$transactionH2 : null;\n  } catch (error) {\n    console.error(\"Error reselling ticket:\", error);\n    throw new Error(error.message);\n  }\n};\n\n// Corrected getEventDetails (uses EventManager)\nexport const getEventDetails = async () => {\n  const contract = await getEventManagerContract(true);\n  if (!contract) return null;\n  try {\n    const [active, maxTickets, currentTickets] = await Promise.all([contract.eventActive(), contract.maxTickets(), contract.ticketCount()]);\n    return {\n      isActive: active,\n      maxTickets: Number(maxTickets),\n      currentTickets: Number(currentTickets)\n    };\n  } catch (error) {\n    console.error(\"Error getting event details:\", error);\n    return null;\n  }\n};\n\n// Corrected getTokenMetadataURI (uses TicketNFT)\nexport const getTokenMetadataURI = async tokenId => {\n  const contract = await getTicketNFTContract(true);\n  if (!contract) return null;\n  try {\n    const uri = await contract.tokenURI(tokenId);\n    return uri;\n  } catch (error) {\n    console.error(`Error getting token URI for ${tokenId}:`, error);\n    return null;\n  }\n};\n\n// --- Updated getAvailableTickets (fetches ALL issued IDs) ---\nexport const getAvailableTickets = async () => {\n  const contract = await getEventManagerContract(true);\n  if (!contract) return [];\n  try {\n    const countBN = await contract.ticketCount();\n    const count = Number(countBN);\n    if (count === 0) return [];\n    console.log(`Total tickets issued: ${count}. Fetching IDs...`);\n    const ids = [];\n    const promises = [];\n    for (let i = 0; i < count; i++) {\n      promises.push(contract.issuedTickets(i));\n    }\n    const results = await Promise.all(promises);\n    results.forEach(tokenIdBN => {\n      ids.push(Number(tokenIdBN));\n    });\n    console.log(\"All issued ticket IDs fetched:\", ids);\n    return ids;\n  } catch (error) {\n    console.error(\"Error getting available/issued tickets:\", error);\n    toast.error(\"Could not retrieve list of issued tickets.\");\n    return [];\n  }\n};\n\n// Corrected getQRHash (uses TicketNFT)\nexport const getQRHash = async tokenId => {\n  const nftContract = await getTicketNFTContract(true);\n  if (!nftContract) return null;\n  try {\n    // Ensure TICKET_NFT_ABI includes getQRHash\n    const qrHash = await nftContract.getQRHash(tokenId);\n    return qrHash;\n  } catch (error) {\n    console.error(`Error getting QR Hash for token ${tokenId}:`, error.message);\n    return null;\n  }\n};","map":{"version":3,"names":["ethers","parseEther","ethersUtils","toast","CONTRACT_ADDRESS","process","env","REACT_APP_CONTRACT_ADDRESS","TARGET_NETWORK_ID","parseInt","REACT_APP_TARGET_NETWORK_ID","TARGET_NETWORK_NAME","REACT_APP_TARGET_NETWORK_NAME","Error","EVENT_MANAGER_ABI","inputs","internalType","name","type","stateMutability","TICKET_NFT_ABI","console","error","length","getProvider","window","ethereum","BrowserProvider","getSigner","provider","accounts","send","getEventManagerContract","readOnly","signer","Contract","getTicketNFTContract","eventManager","ticketNFTAddress","ticketNFT","connectWallet","address","getAddress","checkNetwork","isCorrect","currentNetwork","network","getNetwork","chainId","Number","switchNetwork","request","method","params","hexlify","toString","code","chainName","nativeCurrency","symbol","decimals","rpcUrls","REACT_APP_RPC_URL","addError","buyTicket","tokenURI","qrHash","outsider","priceInEther","contract","_receipt$transactionH","value","log","tx","receipt","wait","transactionHash","_error$data","reason","data","message","getMyTickets","userAddress","nftContract","filterTo","filters","Transfer","filterFrom","transferEventsTo","queryFilter","transferEventsFrom","ownedTokenIds","Map","forEach","event","args","tokenId","set","delete","finalOwnedIds","Array","from","keys","resellTicket","_receipt$transactionH2","sellTicketBack","getEventDetails","active","maxTickets","currentTickets","Promise","all","eventActive","ticketCount","isActive","getTokenMetadataURI","uri","getAvailableTickets","countBN","count","ids","promises","i","push","issuedTickets","results","tokenIdBN","getQRHash"],"sources":["C:/Users/negis/OneDrive/Desktop/new project/blockfest-ui/src/utils/blockchain.ts"],"sourcesContent":["// src/utils/blockchain.ts\n\nimport { ethers, parseEther, formatEther, ethers as ethersUtils } from 'ethers';\nimport { ethers as ethersTypes } from 'ethers';\nimport { BigNumberish } from 'ethers';\nimport { EventLog, Log } from 'ethers';\nimport { toast } from 'react-hot-toast';\nimport { EventDetails } from '../types/global';\nimport '../types/global';\n\n// Define types\ninterface TicketData {\n    tokenId: number;\n    tokenURI: string;\n    qrHash: string;\n    owner: string;\n}\n\n// --- Configuration ---\nconst CONTRACT_ADDRESS = process.env.REACT_APP_CONTRACT_ADDRESS;\nconst TARGET_NETWORK_ID = parseInt(process.env.REACT_APP_TARGET_NETWORK_ID || '11155111', 10);\nconst TARGET_NETWORK_NAME = process.env.REACT_APP_TARGET_NETWORK_NAME || 'Sepolia Testnet';\n\nif (!CONTRACT_ADDRESS) {\n    throw new Error('REACT_APP_CONTRACT_ADDRESS environment variable is required');\n}\n\n// --- ABIs ---\n// IMPORTANT: Paste your ACTUAL compiled ABIs!\n\nconst EVENT_MANAGER_ABI = [\n  {\n    inputs: [\n      { internalType: \"address\", name: \"_ticketNFT\", type: \"address\" },\n      { internalType: \"address\", name: \"_staking\", type: \"address\" },\n      { internalType: \"address\", name: \"_validator\", type: \"address\" },\n      { internalType: \"address\", name: \"_sybil\", type: \"address\" }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\n    \"name\":\"OwnableInvalidOwner\",\n    \"type\":\"error\"\n  },\n  {\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\n    \"name\":\"OwnableUnauthorizedAccount\",\n    \"type\":\"error\"\n  },\n  {\n    \"anonymous\":false,\n    \"inputs\":[\n      {\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},\n      {\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}\n    ],\n    \"name\":\"OwnershipTransferred\",\n    \"type\":\"event\"\n  },\n  {\n    \"anonymous\":false,\n    \"inputs\":[\n      {\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},\n      {\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}\n    ],\n    \"name\":\"TicketPurchased\",\n    \"type\":\"event\"\n  },\n  {\n    \"anonymous\":false,\n    \"inputs\":[\n      {\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},\n      {\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}\n    ],\n    \"name\":\"TicketRefunded\",\n    \"type\":\"event\"\n  },\n  {\n    \"inputs\":[\n      {\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},\n      {\"internalType\":\"string\",\"name\":\"qrHash\",\"type\":\"string\"},\n      {\"internalType\":\"bool\",\"name\":\"outsider\",\"type\":\"bool\"}\n    ],\n    \"name\":\"buyTicket\",\n    \"outputs\":[],\n    \"stateMutability\":\"payable\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[],\n    \"name\":\"cancelEvent\",\n    \"outputs\":[],\n    \"stateMutability\":\"nonpayable\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[],\n    \"name\":\"eventActive\",\n    \"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\n    \"name\":\"getStakedAmount\",\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\n    \"name\":\"getSybilScore\",\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\n    \"name\":\"hasTicket\",\n    \"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\n    \"name\":\"isOutsider\",\n    \"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\n    \"name\":\"isValidator\",\n    \"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\n    \"name\":\"issuedTickets\",\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[],\n    \"name\":\"maxTickets\",\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[\n      {\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},\n      {\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}\n    ],\n    \"name\":\"ownedTickets\",\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[],\n    \"name\":\"owner\",\n    \"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\n    \"name\":\"refillTickets\",\n    \"outputs\":[],\n    \"stateMutability\":\"nonpayable\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\n    \"name\":\"refunded\",\n    \"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[],\n    \"name\":\"renounceOwnership\",\n    \"outputs\":[],\n    \"stateMutability\":\"nonpayable\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\n    \"name\":\"sellTicketBack\",\n    \"outputs\":[],\n    \"stateMutability\":\"nonpayable\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\n    \"name\":\"setEventActive\",\n    \"outputs\":[],\n    \"stateMutability\":\"nonpayable\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[\n      {\"internalType\":\"uint256\",\"name\":\"insiderPrice\",\"type\":\"uint256\"},\n      {\"internalType\":\"uint256\",\"name\":\"outsiderPrice\",\"type\":\"uint256\"}\n    ],\n    \"name\":\"setTicketPrices\",\n    \"outputs\":[],\n    \"stateMutability\":\"nonpayable\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[],\n    \"name\":\"staking\",\n    \"outputs\":[{\"internalType\":\"contract Staking\",\"name\":\"\",\"type\":\"address\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[],\n    \"name\":\"sybil\",\n    \"outputs\":[{\"internalType\":\"contract SybilGuard\",\"name\":\"\",\"type\":\"address\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[],\n    \"name\":\"ticketCount\",\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[],\n    \"name\":\"ticketNFT\",\n    \"outputs\":[{\"internalType\":\"contract TicketNFT\",\"name\":\"\",\"type\":\"address\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[],\n    \"name\":\"ticketPriceInsider\",\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[],\n    \"name\":\"ticketPriceOutsider\",\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\n    \"name\":\"transferOwnership\",\n    \"outputs\":[],\n    \"stateMutability\":\"nonpayable\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[],\n    \"name\":\"validator\",\n    \"outputs\":[{\"internalType\":\"contract ValidatorPoS\",\"name\":\"\",\"type\":\"address\"}],\n    \"stateMutability\":\"view\",\n    \"type\":\"function\"\n  },\n  {\n    \"inputs\":[],\n    \"name\":\"withdrawFunds\",\n    \"outputs\":[],\n    \"stateMutability\":\"nonpayable\",\n    \"type\":\"function\"\n  }\n];\n\n// --- Updated TicketNFT ABI (based on your TicketNFT.sol and needs) ---\nconst TICKET_NFT_ABI = [\n  {\n    \"type\": \"constructor\",\n    \"inputs\": [\n      {\n        \"name\": \"initialOwner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"approve\",\n    \"inputs\": [\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"balanceOf\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"burn\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"eventManager\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getApproved\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"getQRHash\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"isApprovedForAll\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"mintTicket\",\n    \"inputs\": [\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenURI\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"qrHash\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"name\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"nextTokenId\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"owner\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"ownerOf\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"qrHashes\",\n    \"inputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"renounceOwnership\",\n    \"inputs\": [],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"safeTransferFrom\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"safeTransferFrom\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"data\",\n        \"type\": \"bytes\",\n        \"internalType\": \"bytes\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"setApprovalForAll\",\n    \"inputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"approved\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"setEventManager\",\n    \"inputs\": [\n      {\n        \"name\": \"_eventManager\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"supportsInterface\",\n    \"inputs\": [\n      {\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\",\n        \"internalType\": \"bytes4\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\",\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"symbol\",\n    \"inputs\": [],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"tokenURI\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\",\n        \"internalType\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferFrom\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"function\",\n    \"name\": \"transferOwnership\",\n    \"inputs\": [\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ],\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\"\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Approval\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"approved\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": true,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"ApprovalForAll\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"approved\",\n        \"type\": \"bool\",\n        \"indexed\": false,\n        \"internalType\": \"bool\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"BatchMetadataUpdate\",\n    \"inputs\": [\n      {\n        \"name\": \"_fromTokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"_toTokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"EventManagerSet\",\n    \"inputs\": [\n      {\n        \"name\": \"newManager\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"MetadataUpdate\",\n    \"inputs\": [\n      {\n        \"name\": \"_tokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": false,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"OwnershipTransferred\",\n    \"inputs\": [\n      {\n        \"name\": \"previousOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"newOwner\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TicketBurned\",\n    \"inputs\": [\n      {\n        \"name\": \"user\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": true,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"TicketMinted\",\n    \"inputs\": [\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": true,\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"tokenURI\",\n        \"type\": \"string\",\n        \"indexed\": false,\n        \"internalType\": \"string\"\n      },\n      {\n        \"name\": \"qrHash\",\n        \"type\": \"string\",\n        \"indexed\": false,\n        \"internalType\": \"string\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"event\",\n    \"name\": \"Transfer\",\n    \"inputs\": [\n      {\n        \"name\": \"from\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"to\",\n        \"type\": \"address\",\n        \"indexed\": true,\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"indexed\": true,\n        \"internalType\": \"uint256\"\n      }\n    ],\n    \"anonymous\": false\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721IncorrectOwner\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      },\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721InsufficientApproval\",\n    \"inputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      },\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721InvalidApprover\",\n    \"inputs\": [\n      {\n        \"name\": \"approver\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721InvalidOperator\",\n    \"inputs\": [\n      {\n        \"name\": \"operator\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721InvalidOwner\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721InvalidReceiver\",\n    \"inputs\": [\n      {\n        \"name\": \"receiver\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721InvalidSender\",\n    \"inputs\": [\n      {\n        \"name\": \"sender\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"ERC721NonexistentToken\",\n    \"inputs\": [\n      {\n        \"name\": \"tokenId\",\n        \"type\": \"uint256\",\n        \"internalType\": \"uint256\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"OwnableInvalidOwner\",\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  },\n  {\n    \"type\": \"error\",\n    \"name\": \"OwnableUnauthorizedAccount\",\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\",\n        \"internalType\": \"address\"\n      }\n    ]\n  }\n]\n// ----------------------------\n\n// Basic validation\nif (!CONTRACT_ADDRESS) {\n    throw new Error('REACT_APP_CONTRACT_ADDRESS environment variable is required');\n}\nif (!TARGET_NETWORK_ID) console.error(\"REACT_APP_TARGET_NETWORK_ID not set.\");\nif (EVENT_MANAGER_ABI.length === 0) console.error(\"EVENT_MANAGER_ABI is empty.\");\nif (TICKET_NFT_ABI.length === 0) console.error(\"TICKET_NFT_ABI is empty.\");\n\ninterface NetworkInfo { chainId: number; name: string; }\n\n// --- Helper Functions ---\nconst getProvider = (): ethers.BrowserProvider | null => {\n    if (typeof window.ethereum === 'undefined') {\n        console.error('MetaMask not detected');\n        return null;\n    }\n    return new ethers.BrowserProvider(window.ethereum);\n};\n\nconst getSigner = async (provider: ethers.BrowserProvider): Promise<ethers.Signer | null> => {\n    try {\n        const accounts = await provider.send('eth_requestAccounts', []);\n        if (accounts.length === 0) return null;\n        return provider.getSigner(accounts[0]);\n    } catch (error) {\n        console.error('Failed to get signer:', error);\n        return null;\n    }\n};\n\nconst getEventManagerContract = async (readOnly = false): Promise<ethers.Contract | null> => {\n    const provider = getProvider();\n    if (!provider) return null;\n\n    const signer = readOnly ? provider : await getSigner(provider);\n    if (!signer) return null;\n\n    return new ethers.Contract(CONTRACT_ADDRESS, EVENT_MANAGER_ABI, signer);\n};\n\nconst getTicketNFTContract = async (readOnly = false): Promise<ethers.Contract | null> => {\n    const provider = getProvider();\n    if (!provider) return null;\n\n    const signer = readOnly ? provider : await getSigner(provider);\n    if (!signer) return null;\n\n    const eventManager = await getEventManagerContract(true);\n    if (!eventManager) return null;\n\n    try {\n        const ticketNFTAddress = await eventManager.ticketNFT();\n        return new ethers.Contract(ticketNFTAddress, TICKET_NFT_ABI, signer);\n    } catch (error) {\n        console.error('Failed to get TicketNFT contract:', error);\n        return null;\n    }\n};\n\n// --- Core Blockchain Functions ---\nexport const connectWallet = async (): Promise<string | null> => {\n    const provider = getProvider();\n    if (!provider) return null;\n    \n    const signer = await getSigner(provider);\n    if (!signer) return null;\n\n    const address = await signer.getAddress();\n    return address;\n};\nexport const checkNetwork = async (): Promise<{ isCorrect: boolean; currentNetwork: NetworkInfo | null }> => {\n    const provider = getProvider();\n    if (!provider) return { isCorrect: false, currentNetwork: null };\n\n    try {\n        const network = await provider.getNetwork();\n        const currentNetwork: NetworkInfo = {\n            chainId: Number(network.chainId),\n            name: network.name\n        };\n\n        return {\n            isCorrect: Number(network.chainId) === TARGET_NETWORK_ID,\n            currentNetwork\n        };\n    } catch (error) {\n        console.error('Error checking network:', error);\n        return { isCorrect: false, currentNetwork: null };\n    }\n};\nexport const switchNetwork = async (): Promise<boolean> => {\n    if (typeof window.ethereum === 'undefined') {\n        console.error('MetaMask not detected');\n        return false;\n    }\n\n    try {\n        await window.ethereum.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{ chainId: ethersUtils.hexlify(TARGET_NETWORK_ID.toString()) }]\n        });\n        return true;\n    } catch (error: any) {\n        if (error.code === 4902) {\n            try {\n                await window.ethereum.request({\n                    method: 'wallet_addEthereumChain',\n                    params: [{\n                        chainId: ethersUtils.hexlify(TARGET_NETWORK_ID.toString()),\n                        chainName: TARGET_NETWORK_NAME,\n                        nativeCurrency: {\n                            name: 'ETH',\n                            symbol: 'ETH',\n                            decimals: 18\n                        },\n                        rpcUrls: [process.env.REACT_APP_RPC_URL || '']\n                    }]\n                });\n                return true;\n            } catch (addError) {\n                console.error('Error adding network:', addError);\n                return false;\n            }\n        }\n        console.error('Error switching network:', error);\n        return false;\n    }\n};\n\n// Corrected buyTicket\nexport const buyTicket = async (\n    tokenURI: string,\n    qrHash: string,\n    outsider: boolean,\n    priceInEther: string\n): Promise<string | null> => {\n    const contract = await getEventManagerContract(false); // EventManager handles buying\n    if (!contract) throw new Error(\"EventManager Contract not available.\");\n    if (!priceInEther) throw new Error(\"Price is required to buy ticket.\");\n\n    try {\n        const value = parseEther(priceInEther);\n        console.log(`Calling contract.buyTicket with URI: ${tokenURI}, QR: ${qrHash}, Outsider: ${outsider}, Value: ${value.toString()}`);\n        const tx = await contract.buyTicket(tokenURI, qrHash, outsider, { value });\n        const receipt = await tx.wait();\n        console.log(`Transaction Confirmed: ${receipt?.transactionHash}`);\n        return receipt?.transactionHash ?? null;\n    } catch (error: any) {\n        console.error(\"Buy Ticket Error:\", error);\n        const reason = error.reason || error?.data?.message || error.message || 'Unknown error';\n        if (error.code === 4001) throw new Error('Transaction rejected.');\n        throw new Error(`Purchase Failed: ${reason}`);\n    }\n};\n\n// --- *** CORRECTED getMyTickets using Event Querying *** ---\nexport const getMyTickets = async (userAddress: string): Promise<number[]> => {\n    if (!userAddress) return [];\n\n    const provider = getProvider();\n    const nftContract = await getTicketNFTContract(true); // Get read-only NFT contract\n\n    if (!provider || !nftContract) {\n        console.error(\"getMyTickets: Could not get Provider or TicketNFT contract instance.\");\n        throw new Error(\"Failed to connect to NFT contract.\");\n    }\n\n    try {\n        console.log(`Querying Transfer events for recipient ${userAddress} on contract ${await nftContract.getAddress()}`);\n\n        // Define the Transfer event filter - transfers TO the userAddress\n        const filterTo = nftContract.filters.Transfer(null, userAddress);\n        // Define the Transfer event filter - transfers FROM the userAddress\n        const filterFrom = nftContract.filters.Transfer(userAddress);\n\n        // Query events (adjust block range as needed for performance - 'earliest' can be slow)\n        // Consider storing the last queried block number locally and starting from there.\n        const transferEventsTo = await nftContract.queryFilter(filterTo, 'earliest', 'latest');\n        const transferEventsFrom = await nftContract.queryFilter(filterFrom, 'earliest', 'latest');\n\n        console.log(`Found ${transferEventsTo.length} Transfer(to) events`);\n        console.log(`Found ${transferEventsFrom.length} Transfer(from) events`);\n\n        // Process events to determine current ownership\n        const ownedTokenIds = new Map<number, boolean>();\n\n        // Add tokens transferred TO the user\n        transferEventsTo.forEach((event: any) => {\n            if (event.args && event.args.tokenId) {\n                ownedTokenIds.set(Number(event.args.tokenId), true); // Mark as potentially owned\n            }\n        });\n\n        // Remove tokens transferred FROM the user\n        transferEventsFrom.forEach((event: any) => {\n            if (event.args && event.args.tokenId) {\n                ownedTokenIds.delete(Number(event.args.tokenId)); // Remove if transferred away\n            }\n        });\n\n        const finalOwnedIds = Array.from(ownedTokenIds.keys());\n        console.log(\"Final calculated owned ticket IDs:\", finalOwnedIds);\n        return finalOwnedIds;\n\n    } catch (error: any) {\n        console.error(\"Error querying Transfer events in getMyTickets:\", error);\n        throw new Error(\"Failed to fetch owned tickets via event query.\");\n    }\n};\n\n// Corrected resellTicket (uses EventManager)\nexport const resellTicket = async (tokenId: number): Promise<string | null> => {\n    const contract = await getEventManagerContract(false);\n    if (!contract) throw new Error(\"EventManager Contract not available.\");\n\n    try {\n        const tx = await contract.sellTicketBack(tokenId);\n        const receipt = await tx.wait();\n        return receipt?.transactionHash ?? null;\n    } catch (error: any) {\n        console.error(\"Error reselling ticket:\", error);\n        throw new Error(error.message);\n    }\n};\n\n// Corrected getEventDetails (uses EventManager)\nexport const getEventDetails = async (): Promise<EventDetails | null> => {\n    const contract = await getEventManagerContract(true);\n    if (!contract) return null;\n\n    try {\n        const [active, maxTickets, currentTickets] = await Promise.all([\n            contract.eventActive(),\n            contract.maxTickets(),\n            contract.ticketCount()\n        ]);\n\n        return {\n            isActive: active,\n            maxTickets: Number(maxTickets),\n            currentTickets: Number(currentTickets)\n        };\n    } catch (error) {\n        console.error(\"Error getting event details:\", error);\n        return null;\n    }\n};\n\n// Corrected getTokenMetadataURI (uses TicketNFT)\nexport const getTokenMetadataURI = async (tokenId: number): Promise<string | null> => {\n    const contract = await getTicketNFTContract(true);\n    if (!contract) return null;\n\n    try {\n        const uri = await contract.tokenURI(tokenId);\n        return uri;\n    } catch (error) {\n        console.error(`Error getting token URI for ${tokenId}:`, error);\n        return null;\n    }\n};\n\n// --- Updated getAvailableTickets (fetches ALL issued IDs) ---\nexport const getAvailableTickets = async (): Promise<number[]> => {\n    const contract = await getEventManagerContract(true);\n    if (!contract) return [];\n\n    try {\n        const countBN = await contract.ticketCount();\n        const count = Number(countBN);\n        if (count === 0) return [];\n\n        console.log(`Total tickets issued: ${count}. Fetching IDs...`);\n        const ids: number[] = [];\n        const promises: Promise<BigNumberish>[] = [];\n\n        for (let i = 0; i < count; i++) {\n            promises.push(contract.issuedTickets(i));\n        }\n\n        const results = await Promise.all(promises) as BigNumberish[];\n        results.forEach((tokenIdBN: BigNumberish) => {\n            ids.push(Number(tokenIdBN));\n        });\n\n        console.log(\"All issued ticket IDs fetched:\", ids);\n        return ids;\n\n    } catch (error) {\n        console.error(\"Error getting available/issued tickets:\", error);\n        toast.error(\"Could not retrieve list of issued tickets.\");\n        return [];\n    }\n};\n\n// Corrected getQRHash (uses TicketNFT)\nexport const getQRHash = async (tokenId: number): Promise<string | null> => {\n    const nftContract = await getTicketNFTContract(true);\n    if (!nftContract) return null;\n    try {\n        // Ensure TICKET_NFT_ABI includes getQRHash\n        const qrHash = await nftContract.getQRHash(tokenId);\n        return qrHash;\n    } catch (error: any) {\n        console.error(`Error getting QR Hash for token ${tokenId}:`, error.message);\n        return null;\n    }\n};"],"mappings":"AAAA;;AAEA,SAASA,MAAM,EAAEC,UAAU,EAAeD,MAAM,IAAIE,WAAW,QAAQ,QAAQ;AAI/E,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,OAAO,iBAAiB;;AAExB;;AAQA;AACA,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;AAC/D,MAAMC,iBAAiB,GAAGC,QAAQ,CAACJ,OAAO,CAACC,GAAG,CAACI,2BAA2B,IAAI,UAAU,EAAE,EAAE,CAAC;AAC7F,MAAMC,mBAAmB,GAAGN,OAAO,CAACC,GAAG,CAACM,6BAA6B,IAAI,iBAAiB;AAE1F,IAAI,CAACR,gBAAgB,EAAE;EACnB,MAAM,IAAIS,KAAK,CAAC,6DAA6D,CAAC;AAClF;;AAEA;AACA;;AAEA,MAAMC,iBAAiB,GAAG,CACxB;EACEC,MAAM,EAAE,CACN;IAAEC,YAAY,EAAE,SAAS;IAAEC,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAU,CAAC,EAChE;IAAEF,YAAY,EAAE,SAAS;IAAEC,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAU,CAAC,EAC9D;IAAEF,YAAY,EAAE,SAAS;IAAEC,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAU,CAAC,EAChE;IAAEF,YAAY,EAAE,SAAS;IAAEC,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAU,CAAC,CAC7D;EACDC,eAAe,EAAE,YAAY;EAC7BD,IAAI,EAAE;AACR,CAAC,EACD;EACE,QAAQ,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,OAAO;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACrE,MAAM,EAAC,qBAAqB;EAC5B,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,SAAS;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACvE,MAAM,EAAC,4BAA4B;EACnC,MAAM,EAAC;AACT,CAAC,EACD;EACE,WAAW,EAAC,KAAK;EACjB,QAAQ,EAAC,CACP;IAAC,SAAS,EAAC,IAAI;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,eAAe;IAAC,MAAM,EAAC;EAAS,CAAC,EACjF;IAAC,SAAS,EAAC,IAAI;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,UAAU;IAAC,MAAM,EAAC;EAAS,CAAC,CAC7E;EACD,MAAM,EAAC,sBAAsB;EAC7B,MAAM,EAAC;AACT,CAAC,EACD;EACE,WAAW,EAAC,KAAK;EACjB,QAAQ,EAAC,CACP;IAAC,SAAS,EAAC,IAAI;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,OAAO;IAAC,MAAM,EAAC;EAAS,CAAC,EACzE;IAAC,SAAS,EAAC,KAAK;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,SAAS;IAAC,MAAM,EAAC;EAAS,CAAC,CAC7E;EACD,MAAM,EAAC,iBAAiB;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,WAAW,EAAC,KAAK;EACjB,QAAQ,EAAC,CACP;IAAC,SAAS,EAAC,IAAI;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,QAAQ;IAAC,MAAM,EAAC;EAAS,CAAC,EAC1E;IAAC,SAAS,EAAC,KAAK;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,SAAS;IAAC,MAAM,EAAC;EAAS,CAAC,CAC7E;EACD,MAAM,EAAC,gBAAgB;EACvB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CACP;IAAC,cAAc,EAAC,QAAQ;IAAC,MAAM,EAAC,UAAU;IAAC,MAAM,EAAC;EAAQ,CAAC,EAC3D;IAAC,cAAc,EAAC,QAAQ;IAAC,MAAM,EAAC,QAAQ;IAAC,MAAM,EAAC;EAAQ,CAAC,EACzD;IAAC,cAAc,EAAC,MAAM;IAAC,MAAM,EAAC,UAAU;IAAC,MAAM,EAAC;EAAM,CAAC,CACxD;EACD,MAAM,EAAC,WAAW;EAClB,SAAS,EAAC,EAAE;EACZ,iBAAiB,EAAC,SAAS;EAC3B,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,EAAE;EACX,MAAM,EAAC,aAAa;EACpB,SAAS,EAAC,EAAE;EACZ,iBAAiB,EAAC,YAAY;EAC9B,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,EAAE;EACX,MAAM,EAAC,aAAa;EACpB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,MAAM;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAM,CAAC,CAAC;EAC3D,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,MAAM;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACpE,MAAM,EAAC,iBAAiB;EACxB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACjE,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,MAAM;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACpE,MAAM,EAAC,eAAe;EACtB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACjE,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EAChE,MAAM,EAAC,WAAW;EAClB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,MAAM;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAM,CAAC,CAAC;EAC3D,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EAChE,MAAM,EAAC,YAAY;EACnB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,MAAM;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAM,CAAC,CAAC;EAC3D,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,MAAM;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACpE,MAAM,EAAC,aAAa;EACpB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,MAAM;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAM,CAAC,CAAC;EAC3D,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EAChE,MAAM,EAAC,eAAe;EACtB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACjE,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,EAAE;EACX,MAAM,EAAC,YAAY;EACnB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACjE,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CACP;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,EACrD;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CACtD;EACD,MAAM,EAAC,cAAc;EACrB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACjE,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,EAAE;EACX,MAAM,EAAC,OAAO;EACd,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACjE,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,QAAQ;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACtE,MAAM,EAAC,eAAe;EACtB,SAAS,EAAC,EAAE;EACZ,iBAAiB,EAAC,YAAY;EAC9B,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EAChE,MAAM,EAAC,UAAU;EACjB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,MAAM;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAM,CAAC,CAAC;EAC3D,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,EAAE;EACX,MAAM,EAAC,mBAAmB;EAC1B,SAAS,EAAC,EAAE;EACZ,iBAAiB,EAAC,YAAY;EAC9B,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,SAAS;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACvE,MAAM,EAAC,gBAAgB;EACvB,SAAS,EAAC,EAAE;EACZ,iBAAiB,EAAC,YAAY;EAC9B,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CAAC;IAAC,cAAc,EAAC,MAAM;IAAC,MAAM,EAAC,QAAQ;IAAC,MAAM,EAAC;EAAM,CAAC,CAAC;EAChE,MAAM,EAAC,gBAAgB;EACvB,SAAS,EAAC,EAAE;EACZ,iBAAiB,EAAC,YAAY;EAC9B,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CACP;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,cAAc;IAAC,MAAM,EAAC;EAAS,CAAC,EACjE;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,eAAe;IAAC,MAAM,EAAC;EAAS,CAAC,CACnE;EACD,MAAM,EAAC,iBAAiB;EACxB,SAAS,EAAC,EAAE;EACZ,iBAAiB,EAAC,YAAY;EAC9B,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,EAAE;EACX,MAAM,EAAC,SAAS;EAChB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,kBAAkB;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EAC1E,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,EAAE;EACX,MAAM,EAAC,OAAO;EACd,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,qBAAqB;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EAC7E,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,EAAE;EACX,MAAM,EAAC,aAAa;EACpB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACjE,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,EAAE;EACX,MAAM,EAAC,WAAW;EAClB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,oBAAoB;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EAC5E,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,EAAE;EACX,MAAM,EAAC,oBAAoB;EAC3B,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACjE,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,EAAE;EACX,MAAM,EAAC,qBAAqB;EAC5B,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACjE,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,CAAC;IAAC,cAAc,EAAC,SAAS;IAAC,MAAM,EAAC,UAAU;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EACxE,MAAM,EAAC,mBAAmB;EAC1B,SAAS,EAAC,EAAE;EACZ,iBAAiB,EAAC,YAAY;EAC9B,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,EAAE;EACX,MAAM,EAAC,WAAW;EAClB,SAAS,EAAC,CAAC;IAAC,cAAc,EAAC,uBAAuB;IAAC,MAAM,EAAC,EAAE;IAAC,MAAM,EAAC;EAAS,CAAC,CAAC;EAC/E,iBAAiB,EAAC,MAAM;EACxB,MAAM,EAAC;AACT,CAAC,EACD;EACE,QAAQ,EAAC,EAAE;EACX,MAAM,EAAC,eAAe;EACtB,SAAS,EAAC,EAAE;EACZ,iBAAiB,EAAC,YAAY;EAC9B,MAAM,EAAC;AACT,CAAC,CACF;;AAED;AACA,MAAME,cAAc,GAAG,CACrB;EACE,MAAM,EAAE,aAAa;EACrB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,cAAc;IACtB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,SAAS;EACjB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,WAAW;EACnB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,MAAM;EACd,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,cAAc;EACtB,QAAQ,EAAE,EAAE;EACZ,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,aAAa;EACrB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,WAAW;EACnB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,QAAQ;IAChB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,kBAAkB;EAC1B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,MAAM;IACd,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,YAAY;EACpB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,QAAQ;IAChB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,QAAQ;IAChB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,MAAM;EACd,QAAQ,EAAE,EAAE;EACZ,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,QAAQ;IAChB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,aAAa;EACrB,QAAQ,EAAE,EAAE;EACZ,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,OAAO;EACf,QAAQ,EAAE,EAAE;EACZ,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,SAAS;EACjB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,UAAU;EAClB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,QAAQ;IAChB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,mBAAmB;EAC3B,QAAQ,EAAE,EAAE;EACZ,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,kBAAkB;EAC1B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,MAAM;IACd,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,kBAAkB;EAC1B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,MAAM;IACd,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,MAAM;IACd,MAAM,EAAE,OAAO;IACf,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,mBAAmB;EAC3B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,MAAM;IACd,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,iBAAiB;EACzB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,eAAe;IACvB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,mBAAmB;EAC3B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,aAAa;IACrB,MAAM,EAAE,QAAQ;IAChB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,MAAM;IACd,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,QAAQ;EAChB,QAAQ,EAAE,EAAE;EACZ,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,QAAQ;IAChB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,UAAU;EAClB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,CACT;IACE,MAAM,EAAE,EAAE;IACV,MAAM,EAAE,QAAQ;IAChB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,cAAc;EACtB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,MAAM;IACd,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,UAAU;EAClB,MAAM,EAAE,mBAAmB;EAC3B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,SAAS,EAAE,EAAE;EACb,iBAAiB,EAAE;AACrB,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,UAAU;EAClB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,CACF;EACD,WAAW,EAAE;AACf,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,gBAAgB;EACxB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,MAAM;IACd,SAAS,EAAE,KAAK;IAChB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,WAAW,EAAE;AACf,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,qBAAqB;EAC7B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,cAAc;IACtB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,KAAK;IAChB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,YAAY;IACpB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,KAAK;IAChB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,WAAW,EAAE;AACf,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,iBAAiB;EACzB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,YAAY;IACpB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,CACF;EACD,WAAW,EAAE;AACf,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,gBAAgB;EACxB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,KAAK;IAChB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,WAAW,EAAE;AACf,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,sBAAsB;EAC9B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,eAAe;IACvB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,CACF;EACD,WAAW,EAAE;AACf,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,cAAc;EACtB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,MAAM;IACd,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,CACF;EACD,WAAW,EAAE;AACf,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,cAAc;EACtB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,QAAQ;IAChB,SAAS,EAAE,KAAK;IAChB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,QAAQ;IAChB,SAAS,EAAE,KAAK;IAChB,cAAc,EAAE;EAClB,CAAC,CACF;EACD,WAAW,EAAE;AACf,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,UAAU;EAClB,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,MAAM;IACd,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,IAAI;IACZ,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,IAAI;IACf,cAAc,EAAE;EAClB,CAAC,CACF;EACD,WAAW,EAAE;AACf,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,sBAAsB;EAC9B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC;AAEL,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,4BAA4B;EACpC,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC,EACD;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC;AAEL,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,uBAAuB;EAC/B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC;AAEL,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,uBAAuB;EAC/B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC;AAEL,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,oBAAoB;EAC5B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC;AAEL,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,uBAAuB;EAC/B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC;AAEL,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,qBAAqB;EAC7B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC;AAEL,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,wBAAwB;EAChC,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC;AAEL,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,qBAAqB;EAC7B,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC;AAEL,CAAC,EACD;EACE,MAAM,EAAE,OAAO;EACf,MAAM,EAAE,4BAA4B;EACpC,QAAQ,EAAE,CACR;IACE,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,cAAc,EAAE;EAClB,CAAC;AAEL,CAAC,CACF;AACD;;AAEA;AACA,IAAI,CAAChB,gBAAgB,EAAE;EACnB,MAAM,IAAIS,KAAK,CAAC,6DAA6D,CAAC;AAClF;AACA,IAAI,CAACL,iBAAiB,EAAEa,OAAO,CAACC,KAAK,CAAC,sCAAsC,CAAC;AAC7E,IAAIR,iBAAiB,CAACS,MAAM,KAAK,CAAC,EAAEF,OAAO,CAACC,KAAK,CAAC,6BAA6B,CAAC;AAChF,IAAIF,cAAc,CAACG,MAAM,KAAK,CAAC,EAAEF,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;AAI1E;AACA,MAAME,WAAW,GAAGA,CAAA,KAAqC;EACrD,IAAI,OAAOC,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;IACxCL,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;IACtC,OAAO,IAAI;EACf;EACA,OAAO,IAAItB,MAAM,CAAC2B,eAAe,CAACF,MAAM,CAACC,QAAQ,CAAC;AACtD,CAAC;AAED,MAAME,SAAS,GAAG,MAAOC,QAAgC,IAAoC;EACzF,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;IAC/D,IAAID,QAAQ,CAACP,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IACtC,OAAOM,QAAQ,CAACD,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC,CAAC,OAAOR,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,IAAI;EACf;AACJ,CAAC;AAED,MAAMU,uBAAuB,GAAG,MAAAA,CAAOC,QAAQ,GAAG,KAAK,KAAsC;EACzF,MAAMJ,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,IAAI,CAACK,QAAQ,EAAE,OAAO,IAAI;EAE1B,MAAMK,MAAM,GAAGD,QAAQ,GAAGJ,QAAQ,GAAG,MAAMD,SAAS,CAACC,QAAQ,CAAC;EAC9D,IAAI,CAACK,MAAM,EAAE,OAAO,IAAI;EAExB,OAAO,IAAIlC,MAAM,CAACmC,QAAQ,CAAC/B,gBAAgB,EAAEU,iBAAiB,EAAEoB,MAAM,CAAC;AAC3E,CAAC;AAED,MAAME,oBAAoB,GAAG,MAAAA,CAAOH,QAAQ,GAAG,KAAK,KAAsC;EACtF,MAAMJ,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,IAAI,CAACK,QAAQ,EAAE,OAAO,IAAI;EAE1B,MAAMK,MAAM,GAAGD,QAAQ,GAAGJ,QAAQ,GAAG,MAAMD,SAAS,CAACC,QAAQ,CAAC;EAC9D,IAAI,CAACK,MAAM,EAAE,OAAO,IAAI;EAExB,MAAMG,YAAY,GAAG,MAAML,uBAAuB,CAAC,IAAI,CAAC;EACxD,IAAI,CAACK,YAAY,EAAE,OAAO,IAAI;EAE9B,IAAI;IACA,MAAMC,gBAAgB,GAAG,MAAMD,YAAY,CAACE,SAAS,CAAC,CAAC;IACvD,OAAO,IAAIvC,MAAM,CAACmC,QAAQ,CAACG,gBAAgB,EAAElB,cAAc,EAAEc,MAAM,CAAC;EACxE,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAoC;EAC7D,MAAMX,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,IAAI,CAACK,QAAQ,EAAE,OAAO,IAAI;EAE1B,MAAMK,MAAM,GAAG,MAAMN,SAAS,CAACC,QAAQ,CAAC;EACxC,IAAI,CAACK,MAAM,EAAE,OAAO,IAAI;EAExB,MAAMO,OAAO,GAAG,MAAMP,MAAM,CAACQ,UAAU,CAAC,CAAC;EACzC,OAAOD,OAAO;AAClB,CAAC;AACD,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAiF;EACzG,MAAMd,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,IAAI,CAACK,QAAQ,EAAE,OAAO;IAAEe,SAAS,EAAE,KAAK;IAAEC,cAAc,EAAE;EAAK,CAAC;EAEhE,IAAI;IACA,MAAMC,OAAO,GAAG,MAAMjB,QAAQ,CAACkB,UAAU,CAAC,CAAC;IAC3C,MAAMF,cAA2B,GAAG;MAChCG,OAAO,EAAEC,MAAM,CAACH,OAAO,CAACE,OAAO,CAAC;MAChC/B,IAAI,EAAE6B,OAAO,CAAC7B;IAClB,CAAC;IAED,OAAO;MACH2B,SAAS,EAAEK,MAAM,CAACH,OAAO,CAACE,OAAO,CAAC,KAAKxC,iBAAiB;MACxDqC;IACJ,CAAC;EACL,CAAC,CAAC,OAAOvB,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO;MAAEsB,SAAS,EAAE,KAAK;MAAEC,cAAc,EAAE;IAAK,CAAC;EACrD;AACJ,CAAC;AACD,OAAO,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAA8B;EACvD,IAAI,OAAOzB,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;IACxCL,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;IACtC,OAAO,KAAK;EAChB;EAEA,IAAI;IACA,MAAMG,MAAM,CAACC,QAAQ,CAACyB,OAAO,CAAC;MAC1BC,MAAM,EAAE,4BAA4B;MACpCC,MAAM,EAAE,CAAC;QAAEL,OAAO,EAAE9C,WAAW,CAACoD,OAAO,CAAC9C,iBAAiB,CAAC+C,QAAQ,CAAC,CAAC;MAAE,CAAC;IAC3E,CAAC,CAAC;IACF,OAAO,IAAI;EACf,CAAC,CAAC,OAAOjC,KAAU,EAAE;IACjB,IAAIA,KAAK,CAACkC,IAAI,KAAK,IAAI,EAAE;MACrB,IAAI;QACA,MAAM/B,MAAM,CAACC,QAAQ,CAACyB,OAAO,CAAC;UAC1BC,MAAM,EAAE,yBAAyB;UACjCC,MAAM,EAAE,CAAC;YACLL,OAAO,EAAE9C,WAAW,CAACoD,OAAO,CAAC9C,iBAAiB,CAAC+C,QAAQ,CAAC,CAAC,CAAC;YAC1DE,SAAS,EAAE9C,mBAAmB;YAC9B+C,cAAc,EAAE;cACZzC,IAAI,EAAE,KAAK;cACX0C,MAAM,EAAE,KAAK;cACbC,QAAQ,EAAE;YACd,CAAC;YACDC,OAAO,EAAE,CAACxD,OAAO,CAACC,GAAG,CAACwD,iBAAiB,IAAI,EAAE;UACjD,CAAC;QACL,CAAC,CAAC;QACF,OAAO,IAAI;MACf,CAAC,CAAC,OAAOC,QAAQ,EAAE;QACf1C,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEyC,QAAQ,CAAC;QAChD,OAAO,KAAK;MAChB;IACJ;IACA1C,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,KAAK;EAChB;AACJ,CAAC;;AAED;AACA,OAAO,MAAM0C,SAAS,GAAG,MAAAA,CACrBC,QAAgB,EAChBC,MAAc,EACdC,QAAiB,EACjBC,YAAoB,KACK;EACzB,MAAMC,QAAQ,GAAG,MAAMrC,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC;EACvD,IAAI,CAACqC,QAAQ,EAAE,MAAM,IAAIxD,KAAK,CAAC,sCAAsC,CAAC;EACtE,IAAI,CAACuD,YAAY,EAAE,MAAM,IAAIvD,KAAK,CAAC,kCAAkC,CAAC;EAEtE,IAAI;IAAA,IAAAyD,qBAAA;IACA,MAAMC,KAAK,GAAGtE,UAAU,CAACmE,YAAY,CAAC;IACtC/C,OAAO,CAACmD,GAAG,CAAC,wCAAwCP,QAAQ,SAASC,MAAM,eAAeC,QAAQ,YAAYI,KAAK,CAAChB,QAAQ,CAAC,CAAC,EAAE,CAAC;IACjI,MAAMkB,EAAE,GAAG,MAAMJ,QAAQ,CAACL,SAAS,CAACC,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,EAAE;MAAEI;IAAM,CAAC,CAAC;IAC1E,MAAMG,OAAO,GAAG,MAAMD,EAAE,CAACE,IAAI,CAAC,CAAC;IAC/BtD,OAAO,CAACmD,GAAG,CAAC,0BAA0BE,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,eAAe,EAAE,CAAC;IACjE,QAAAN,qBAAA,GAAOI,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,eAAe,cAAAN,qBAAA,cAAAA,qBAAA,GAAI,IAAI;EAC3C,CAAC,CAAC,OAAOhD,KAAU,EAAE;IAAA,IAAAuD,WAAA;IACjBxD,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMwD,MAAM,GAAGxD,KAAK,CAACwD,MAAM,KAAIxD,KAAK,aAALA,KAAK,wBAAAuD,WAAA,GAALvD,KAAK,CAAEyD,IAAI,cAAAF,WAAA,uBAAXA,WAAA,CAAaG,OAAO,KAAI1D,KAAK,CAAC0D,OAAO,IAAI,eAAe;IACvF,IAAI1D,KAAK,CAACkC,IAAI,KAAK,IAAI,EAAE,MAAM,IAAI3C,KAAK,CAAC,uBAAuB,CAAC;IACjE,MAAM,IAAIA,KAAK,CAAC,oBAAoBiE,MAAM,EAAE,CAAC;EACjD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAG,MAAOC,WAAmB,IAAwB;EAC1E,IAAI,CAACA,WAAW,EAAE,OAAO,EAAE;EAE3B,MAAMrD,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM2D,WAAW,GAAG,MAAM/C,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtD,IAAI,CAACP,QAAQ,IAAI,CAACsD,WAAW,EAAE;IAC3B9D,OAAO,CAACC,KAAK,CAAC,sEAAsE,CAAC;IACrF,MAAM,IAAIT,KAAK,CAAC,oCAAoC,CAAC;EACzD;EAEA,IAAI;IACAQ,OAAO,CAACmD,GAAG,CAAC,0CAA0CU,WAAW,gBAAgB,MAAMC,WAAW,CAACzC,UAAU,CAAC,CAAC,EAAE,CAAC;;IAElH;IACA,MAAM0C,QAAQ,GAAGD,WAAW,CAACE,OAAO,CAACC,QAAQ,CAAC,IAAI,EAAEJ,WAAW,CAAC;IAChE;IACA,MAAMK,UAAU,GAAGJ,WAAW,CAACE,OAAO,CAACC,QAAQ,CAACJ,WAAW,CAAC;;IAE5D;IACA;IACA,MAAMM,gBAAgB,GAAG,MAAML,WAAW,CAACM,WAAW,CAACL,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC;IACtF,MAAMM,kBAAkB,GAAG,MAAMP,WAAW,CAACM,WAAW,CAACF,UAAU,EAAE,UAAU,EAAE,QAAQ,CAAC;IAE1FlE,OAAO,CAACmD,GAAG,CAAC,SAASgB,gBAAgB,CAACjE,MAAM,sBAAsB,CAAC;IACnEF,OAAO,CAACmD,GAAG,CAAC,SAASkB,kBAAkB,CAACnE,MAAM,wBAAwB,CAAC;;IAEvE;IACA,MAAMoE,aAAa,GAAG,IAAIC,GAAG,CAAkB,CAAC;;IAEhD;IACAJ,gBAAgB,CAACK,OAAO,CAAEC,KAAU,IAAK;MACrC,IAAIA,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACC,OAAO,EAAE;QAClCL,aAAa,CAACM,GAAG,CAAChD,MAAM,CAAC6C,KAAK,CAACC,IAAI,CAACC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACzD;IACJ,CAAC,CAAC;;IAEF;IACAN,kBAAkB,CAACG,OAAO,CAAEC,KAAU,IAAK;MACvC,IAAIA,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACC,OAAO,EAAE;QAClCL,aAAa,CAACO,MAAM,CAACjD,MAAM,CAAC6C,KAAK,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MACtD;IACJ,CAAC,CAAC;IAEF,MAAMG,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACV,aAAa,CAACW,IAAI,CAAC,CAAC,CAAC;IACtDjF,OAAO,CAACmD,GAAG,CAAC,oCAAoC,EAAE2B,aAAa,CAAC;IAChE,OAAOA,aAAa;EAExB,CAAC,CAAC,OAAO7E,KAAU,EAAE;IACjBD,OAAO,CAACC,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;IACvE,MAAM,IAAIT,KAAK,CAAC,gDAAgD,CAAC;EACrE;AACJ,CAAC;;AAED;AACA,OAAO,MAAM0F,YAAY,GAAG,MAAOP,OAAe,IAA6B;EAC3E,MAAM3B,QAAQ,GAAG,MAAMrC,uBAAuB,CAAC,KAAK,CAAC;EACrD,IAAI,CAACqC,QAAQ,EAAE,MAAM,IAAIxD,KAAK,CAAC,sCAAsC,CAAC;EAEtE,IAAI;IAAA,IAAA2F,sBAAA;IACA,MAAM/B,EAAE,GAAG,MAAMJ,QAAQ,CAACoC,cAAc,CAACT,OAAO,CAAC;IACjD,MAAMtB,OAAO,GAAG,MAAMD,EAAE,CAACE,IAAI,CAAC,CAAC;IAC/B,QAAA6B,sBAAA,GAAO9B,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,eAAe,cAAA4B,sBAAA,cAAAA,sBAAA,GAAI,IAAI;EAC3C,CAAC,CAAC,OAAOlF,KAAU,EAAE;IACjBD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAM,IAAIT,KAAK,CAACS,KAAK,CAAC0D,OAAO,CAAC;EAClC;AACJ,CAAC;;AAED;AACA,OAAO,MAAM0B,eAAe,GAAG,MAAAA,CAAA,KAA0C;EACrE,MAAMrC,QAAQ,GAAG,MAAMrC,uBAAuB,CAAC,IAAI,CAAC;EACpD,IAAI,CAACqC,QAAQ,EAAE,OAAO,IAAI;EAE1B,IAAI;IACA,MAAM,CAACsC,MAAM,EAAEC,UAAU,EAAEC,cAAc,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC3D1C,QAAQ,CAAC2C,WAAW,CAAC,CAAC,EACtB3C,QAAQ,CAACuC,UAAU,CAAC,CAAC,EACrBvC,QAAQ,CAAC4C,WAAW,CAAC,CAAC,CACzB,CAAC;IAEF,OAAO;MACHC,QAAQ,EAAEP,MAAM;MAChBC,UAAU,EAAE3D,MAAM,CAAC2D,UAAU,CAAC;MAC9BC,cAAc,EAAE5D,MAAM,CAAC4D,cAAc;IACzC,CAAC;EACL,CAAC,CAAC,OAAOvF,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAM6F,mBAAmB,GAAG,MAAOnB,OAAe,IAA6B;EAClF,MAAM3B,QAAQ,GAAG,MAAMjC,oBAAoB,CAAC,IAAI,CAAC;EACjD,IAAI,CAACiC,QAAQ,EAAE,OAAO,IAAI;EAE1B,IAAI;IACA,MAAM+C,GAAG,GAAG,MAAM/C,QAAQ,CAACJ,QAAQ,CAAC+B,OAAO,CAAC;IAC5C,OAAOoB,GAAG;EACd,CAAC,CAAC,OAAO9F,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,+BAA+B0E,OAAO,GAAG,EAAE1E,KAAK,CAAC;IAC/D,OAAO,IAAI;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAM+F,mBAAmB,GAAG,MAAAA,CAAA,KAA+B;EAC9D,MAAMhD,QAAQ,GAAG,MAAMrC,uBAAuB,CAAC,IAAI,CAAC;EACpD,IAAI,CAACqC,QAAQ,EAAE,OAAO,EAAE;EAExB,IAAI;IACA,MAAMiD,OAAO,GAAG,MAAMjD,QAAQ,CAAC4C,WAAW,CAAC,CAAC;IAC5C,MAAMM,KAAK,GAAGtE,MAAM,CAACqE,OAAO,CAAC;IAC7B,IAAIC,KAAK,KAAK,CAAC,EAAE,OAAO,EAAE;IAE1BlG,OAAO,CAACmD,GAAG,CAAC,yBAAyB+C,KAAK,mBAAmB,CAAC;IAC9D,MAAMC,GAAa,GAAG,EAAE;IACxB,MAAMC,QAAiC,GAAG,EAAE;IAE5C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,EAAEG,CAAC,EAAE,EAAE;MAC5BD,QAAQ,CAACE,IAAI,CAACtD,QAAQ,CAACuD,aAAa,CAACF,CAAC,CAAC,CAAC;IAC5C;IAEA,MAAMG,OAAO,GAAG,MAAMf,OAAO,CAACC,GAAG,CAACU,QAAQ,CAAmB;IAC7DI,OAAO,CAAChC,OAAO,CAAEiC,SAAuB,IAAK;MACzCN,GAAG,CAACG,IAAI,CAAC1E,MAAM,CAAC6E,SAAS,CAAC,CAAC;IAC/B,CAAC,CAAC;IAEFzG,OAAO,CAACmD,GAAG,CAAC,gCAAgC,EAAEgD,GAAG,CAAC;IAClD,OAAOA,GAAG;EAEd,CAAC,CAAC,OAAOlG,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/DnB,KAAK,CAACmB,KAAK,CAAC,4CAA4C,CAAC;IACzD,OAAO,EAAE;EACb;AACJ,CAAC;;AAED;AACA,OAAO,MAAMyG,SAAS,GAAG,MAAO/B,OAAe,IAA6B;EACxE,MAAMb,WAAW,GAAG,MAAM/C,oBAAoB,CAAC,IAAI,CAAC;EACpD,IAAI,CAAC+C,WAAW,EAAE,OAAO,IAAI;EAC7B,IAAI;IACA;IACA,MAAMjB,MAAM,GAAG,MAAMiB,WAAW,CAAC4C,SAAS,CAAC/B,OAAO,CAAC;IACnD,OAAO9B,MAAM;EACjB,CAAC,CAAC,OAAO5C,KAAU,EAAE;IACjBD,OAAO,CAACC,KAAK,CAAC,mCAAmC0E,OAAO,GAAG,EAAE1E,KAAK,CAAC0D,OAAO,CAAC;IAC3E,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}