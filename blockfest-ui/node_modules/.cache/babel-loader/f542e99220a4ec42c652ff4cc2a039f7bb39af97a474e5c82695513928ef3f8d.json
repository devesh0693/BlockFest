{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\negis\\\\Downloads\\\\Archive\\\\src\\\\contexts\\\\VIPContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { checkVIPApi } from '../firebase/index';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VIPContext = /*#__PURE__*/createContext(undefined);\nexport const VIPProvider = ({\n  children\n}) => {\n  _s();\n  const [isVIP, setIsVIP] = useState(null);\n  const [checkingVIP, setCheckingVIP] = useState(false);\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    if (!user) {\n      setIsVIP(null);\n    }\n  }, [user]);\n  const checkVIPStatus = async (name, rollNumber) => {\n    if (!user) {\n      toast.error(\"Please log in before checking VIP status.\");\n      return false;\n    }\n    setCheckingVIP(true);\n    toast.loading('Verifying VIP Status...', {\n      id: 'vip-check'\n    });\n    try {\n      const response = await checkVIPApi(name, rollNumber);\n      setIsVIP(response.isVIP);\n      toast.dismiss('vip-check');\n      if (response.isVIP) {\n        toast.success('✅ You are a VIP!');\n      } else {\n        toast.error('❌ Access Denied. Not on VIP list.');\n      }\n      setCheckingVIP(false);\n      return response.isVIP;\n    } catch (error) {\n      console.error(\"VIP Check API Error:\", error);\n      toast.dismiss('vip-check');\n      toast.error(error.message || 'Error checking VIP status.');\n      setIsVIP(false);\n      setCheckingVIP(false);\n      return false;\n    }\n  };\n  const resetVIP = () => {\n    setIsVIP(null);\n  };\n  const value = {\n    isVIP,\n    checkingVIP,\n    checkVIPStatus,\n    resetVIP\n  };\n  return /*#__PURE__*/_jsxDEV(VIPContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(VIPProvider, \"v54ioXSJpxG6BDCTPDgrcJpmvkU=\", false, function () {\n  return [useAuth];\n});\n_c = VIPProvider;\nexport const useVIP = () => {\n  _s2();\n  const context = useContext(VIPContext);\n  if (!context) {\n    throw new Error('useVIP must be used within a VIPProvider');\n  }\n  return context;\n};\n_s2(useVIP, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"VIPProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useAuth","checkVIPApi","toast","jsxDEV","_jsxDEV","VIPContext","undefined","VIPProvider","children","_s","isVIP","setIsVIP","checkingVIP","setCheckingVIP","user","checkVIPStatus","name","rollNumber","error","loading","id","response","dismiss","success","console","message","resetVIP","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useVIP","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/negis/Downloads/Archive/src/contexts/VIPContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { checkVIPApi } from '../firebase/index';\nimport { toast } from 'react-hot-toast';\n\ninterface VIPContextType {\n    isVIP: boolean | null;\n    checkingVIP: boolean;\n    checkVIPStatus: (name: string, rollNumber: string) => Promise<boolean>;\n    resetVIP: () => void;\n}\n\nconst VIPContext = createContext<VIPContextType | undefined>(undefined);\n\nexport const VIPProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n    const [isVIP, setIsVIP] = useState<boolean | null>(null);\n    const [checkingVIP, setCheckingVIP] = useState<boolean>(false);\n    const { user } = useAuth();\n\n    useEffect(() => {\n        if (!user) {\n            setIsVIP(null);\n        }\n    }, [user]);\n\n    const checkVIPStatus = async (name: string, rollNumber: string): Promise<boolean> => {\n        if (!user) {\n            toast.error(\"Please log in before checking VIP status.\");\n            return false;\n        }\n        setCheckingVIP(true);\n        toast.loading('Verifying VIP Status...', { id: 'vip-check' });\n        try {\n            const response = await checkVIPApi(name, rollNumber);\n            setIsVIP(response.isVIP);\n            toast.dismiss('vip-check');\n            if (response.isVIP) {\n                toast.success('✅ You are a VIP!');\n            } else {\n                toast.error('❌ Access Denied. Not on VIP list.');\n            }\n            setCheckingVIP(false);\n            return response.isVIP;\n        } catch (error: any) {\n            console.error(\"VIP Check API Error:\", error);\n            toast.dismiss('vip-check');\n            toast.error(error.message || 'Error checking VIP status.');\n            setIsVIP(false);\n            setCheckingVIP(false);\n            return false;\n        }\n    };\n\n    const resetVIP = () => {\n        setIsVIP(null);\n    };\n\n    const value = { isVIP, checkingVIP, checkVIPStatus, resetVIP };\n\n    return (\n        <VIPContext.Provider value={value}>\n            {children}\n        </VIPContext.Provider>\n    );\n};\n\nexport const useVIP = (): VIPContextType => {\n    const context = useContext(VIPContext);\n    if (!context) {\n        throw new Error('useVIP must be used within a VIPProvider');\n    }\n    return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}