{"ast":null,"code":"// blockchain.ts\nimport { ethers, parseEther } from 'ethers';\nconst CONTRACT_ADDRESS = '0x6371647dc719E2482223c32880e2f2c9F44c9953';\nconst TARGET_NETWORK_ID = 11155111; // Sepolia Testnet Chain ID\nconst TARGET_NETWORK_NAME = 'Sepolia Testnet';\n\n// Contract ABI\nconst EVENT_MANAGER_ABI = [{\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"_ticketNFT\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"_staking\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"_validator\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"address\",\n    \"name\": \"_sybil\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnableInvalidOwner\",\n  \"type\": \"error\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"account\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnableUnauthorizedAccount\",\n  \"type\": \"error\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"previousOwner\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"OwnershipTransferred\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"buyer\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"TicketPurchased\",\n  \"type\": \"event\"\n}, {\n  \"anonymous\": false,\n  \"inputs\": [{\n    \"indexed\": true,\n    \"internalType\": \"address\",\n    \"name\": \"holder\",\n    \"type\": \"address\"\n  }, {\n    \"indexed\": false,\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"TicketRefunded\",\n  \"type\": \"event\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"tokenURI\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"string\",\n    \"name\": \"qrHash\",\n    \"type\": \"string\"\n  }, {\n    \"internalType\": \"bool\",\n    \"name\": \"outsider\",\n    \"type\": \"bool\"\n  }],\n  \"name\": \"buyTicket\",\n  \"outputs\": [],\n  \"stateMutability\": \"payable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"cancelEvent\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"eventActive\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"getStakedAmount\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"getSybilScore\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"hasTicket\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"isOutsider\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"user\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"isValidator\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"issuedTickets\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"maxTickets\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"ownedTickets\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"owner\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"amount\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"refillTickets\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"refunded\",\n  \"outputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"\",\n    \"type\": \"bool\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"renounceOwnership\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"sellTicketBack\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"bool\",\n    \"name\": \"active\",\n    \"type\": \"bool\"\n  }],\n  \"name\": \"setEventActive\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"insiderPrice\",\n    \"type\": \"uint256\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"outsiderPrice\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"setTicketPrices\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"staking\",\n  \"outputs\": [{\n    \"internalType\": \"contract Staking\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"sybil\",\n  \"outputs\": [{\n    \"internalType\": \"contract SybilGuard\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"ticketCount\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"ticketNFT\",\n  \"outputs\": [{\n    \"internalType\": \"contract TicketNFT\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"ticketPriceInsider\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"ticketPriceOutsider\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"newOwner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"transferOwnership\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"validator\",\n  \"outputs\": [{\n    \"internalType\": \"contract ValidatorPoS\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"withdrawFunds\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}]; // Assuming ABI is moved to a separate file for cleanliness\nconst TICKET_NFT_ABI = [{\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"tokenId\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"tokenURI\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"balanceOf\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"owner\",\n    \"type\": \"address\"\n  }, {\n    \"internalType\": \"uint256\",\n    \"name\": \"index\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"tokenOfOwnerByIndex\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nconst getProvider = () => {\n  if (!window.ethereum) {\n    throw new Error('MetaMask not detected. Please install MetaMask.');\n  }\n  return new ethers.BrowserProvider(window.ethereum);\n};\nconst getSigner = async provider => {\n  await provider.send('eth_requestAccounts', []);\n  return await provider.getSigner();\n};\nconst getContract = async (readOnly = false) => {\n  const provider = getProvider();\n  if (readOnly) {\n    return new ethers.Contract(CONTRACT_ADDRESS, EVENT_MANAGER_ABI, provider);\n  } else {\n    const signer = await getSigner(provider);\n    return new ethers.Contract(CONTRACT_ADDRESS, EVENT_MANAGER_ABI, signer);\n  }\n};\nexport const connectWallet = async () => {\n  try {\n    const provider = getProvider();\n    const accounts = await provider.send('eth_requestAccounts', []);\n    if (accounts && accounts.length > 0) {\n      const networkCorrect = await checkNetwork();\n      if (!networkCorrect.isCorrect) {\n        var _networkCorrect$curre;\n        console.warn(`Wallet connected, but on wrong network (${(_networkCorrect$curre = networkCorrect.currentNetwork) === null || _networkCorrect$curre === void 0 ? void 0 : _networkCorrect$curre.name}). Target: ${TARGET_NETWORK_NAME}`);\n      }\n      return accounts[0];\n    }\n    return null;\n  } catch (error) {\n    console.error(\"Wallet connection failed:\", error);\n    return null;\n  }\n};\nexport const checkNetwork = async () => {\n  try {\n    const provider = getProvider();\n    const network = await provider.getNetwork();\n    const currentNetwork = {\n      chainId: Number(network.chainId),\n      name: network.name\n    };\n    const isCorrect = Number(network.chainId) === TARGET_NETWORK_ID;\n    return {\n      isCorrect,\n      currentNetwork\n    };\n  } catch (error) {\n    console.error(\"Failed to check network:\", error);\n    return {\n      isCorrect: false,\n      currentNetwork: null\n    };\n  }\n};\nexport const switchNetwork = async chainId => {\n  try {\n    await window.ethereum.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId: chainId\n      }]\n    });\n    return true;\n  } catch (error) {\n    console.error('Network switch failed:', error);\n    return false;\n  }\n};\n\n// Stub implementations of the missing exports (must be implemented to avoid import errors)\n// src/utils/blockchain.ts\n\n// ... (other imports, constants, helpers) ...\n\n// --- CORRECTED buyTicket function ---\nexport const buyTicket = async (tokenId, priceInEther, quantity, isOutsider) => {\n  try {\n    const contract = await getContract(false); // Get contract with signer\n\n    // Generate a unique token URI and QR hash for the ticket\n    const tokenURI = `ipfs://${tokenId}`;\n    const qrHash = `qr-${tokenId}-${Date.now()}`;\n\n    // Convert price string to Wei\n    const value = parseEther(priceInEther);\n    console.log(`Attempting to buy ticket with parameters:`, {\n      tokenURI,\n      qrHash,\n      isOutsider: isOutsider === 'true',\n      value: value.toString()\n    });\n\n    // Call the contract function with correct arguments and transaction value\n    const tx = await contract.buyTicket(tokenURI, qrHash, isOutsider === 'true', {\n      value\n    });\n    console.log(`Transaction Sent: ${tx.hash}`);\n    const receipt = await tx.wait();\n    console.log(`Transaction Confirmed: ${receipt.transactionHash}`);\n    return receipt.transactionHash;\n  } catch (error) {\n    console.error(\"Buy Ticket Error:\", error);\n    if (error.code === 'INSUFFICIENT_FUNDS') {\n      throw new Error('Insufficient funds for transaction.');\n    } else if (error.code === 4001) {\n      throw new Error('Transaction rejected by user.');\n    } else if (error.reason) {\n      throw new Error(`Transaction failed: ${error.reason}`);\n    }\n    throw new Error('Failed to buy ticket. See console for details.');\n  }\n};\n\n// ... (rest of blockchain.ts functions like getMyTickets, resellTicket etc.)\n\nexport const getMyTickets = async userAddress => {\n  try {\n    console.log(\"Starting getMyTickets for address:\", userAddress);\n    const contract = await getContract(true);\n\n    // Check if user has a ticket\n    const hasTicket = await contract.hasTicket(userAddress);\n    console.log(\"Has ticket:\", hasTicket);\n    if (!hasTicket) {\n      console.log(\"User has no tickets\");\n      return [];\n    }\n\n    // Get NFT contract\n    const nftAddress = await contract.ticketNFT();\n    console.log(\"NFT contract address:\", nftAddress);\n    const nftContract = new ethers.Contract(nftAddress, TICKET_NFT_ABI, getProvider());\n\n    // Get user's token balance\n    const balance = await nftContract.balanceOf(userAddress);\n    console.log(\"User NFT balance:\", balance.toString());\n    const ownedTickets = [];\n\n    // Get all tokens owned by user\n    for (let i = 0; i < balance; i++) {\n      try {\n        const tokenId = await nftContract.tokenOfOwnerByIndex(userAddress, i);\n        console.log(`Found token ID ${tokenId.toString()} at index ${i}`);\n        ownedTickets.push(Number(tokenId));\n      } catch (error) {\n        console.error(`Error getting token at index ${i}:`, error);\n      }\n    }\n\n    // If no tokens found through NFT contract but hasTicket is true,\n    // try the direct mapping as fallback\n    if (ownedTickets.length === 0) {\n      console.log(\"No tokens found through NFT contract, trying direct mapping\");\n      try {\n        const ticketId = await contract.ownedTickets(userAddress, 0);\n        if (ticketId.toString() !== '0') {\n          console.log(\"Found ticket ID from mapping:\", ticketId.toString());\n          ownedTickets.push(Number(ticketId));\n        }\n      } catch (error) {\n        console.error(\"Error checking direct mapping:\", error);\n      }\n    }\n    console.log(`Found ${ownedTickets.length} tickets owned by ${userAddress}:`, ownedTickets);\n    return ownedTickets;\n  } catch (error) {\n    console.error(\"Error in getMyTickets:\", error);\n    throw new Error(\"Failed to fetch owned tickets. Please try again.\");\n  }\n};\nexport const resellTicket = async tokenId => {\n  const contract = await getContract();\n  const tx = await contract.sellTicketBack(tokenId);\n  await tx.wait();\n};\nexport const getEventDetails = async () => {\n  const contract = await getContract(true);\n  return {\n    active: await contract.eventActive(),\n    ticketPriceInsider: await contract.ticketPriceInsider(),\n    ticketPriceOutsider: await contract.ticketPriceOutsider(),\n    ticketCount: await contract.ticketCount()\n  };\n};\nexport const getTokenMetadataURI = async tokenId => {\n  try {\n    // First get the NFT contract address from the event manager\n    const eventManagerContract = await getContract(true);\n    const nftContractAddress = await eventManagerContract.ticketNFT();\n\n    // Now create a contract instance for the NFT\n    const provider = getProvider();\n    const nftContract = new ethers.Contract(nftContractAddress, TICKET_NFT_ABI, provider);\n\n    // Call tokenURI function to get the metadata URI\n    const uri = await nftContract.tokenURI(tokenId);\n    return uri;\n  } catch (error) {\n    console.error(\"Error getting token metadata URI:\", error);\n    return '';\n  }\n};\nexport const getAvailableTickets = async () => {\n  try {\n    const contract = await getContract(true);\n    const maxTickets = await contract.maxTickets();\n    const ticketCount = await contract.ticketCount();\n\n    // Create an array of available ticket IDs\n    const availableIds = [];\n\n    // Loop through all possible ticket IDs and check if they're available\n    for (let i = 1; i <= ticketCount; i++) {\n      // Check if the ticket has been refunded or is still available\n      const isRefunded = await contract.refunded(i);\n      if (isRefunded) {\n        availableIds.push(i);\n      }\n    }\n    return availableIds;\n  } catch (error) {\n    console.error(\"Error getting available tickets:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["ethers","parseEther","CONTRACT_ADDRESS","TARGET_NETWORK_ID","TARGET_NETWORK_NAME","EVENT_MANAGER_ABI","TICKET_NFT_ABI","getProvider","window","ethereum","Error","BrowserProvider","getSigner","provider","send","getContract","readOnly","Contract","signer","connectWallet","accounts","length","networkCorrect","checkNetwork","isCorrect","_networkCorrect$curre","console","warn","currentNetwork","name","error","network","getNetwork","chainId","Number","switchNetwork","request","method","params","buyTicket","tokenId","priceInEther","quantity","isOutsider","contract","tokenURI","qrHash","Date","now","value","log","toString","tx","hash","receipt","wait","transactionHash","code","reason","getMyTickets","userAddress","hasTicket","nftAddress","ticketNFT","nftContract","balance","balanceOf","ownedTickets","i","tokenOfOwnerByIndex","push","ticketId","resellTicket","sellTicketBack","getEventDetails","active","eventActive","ticketPriceInsider","ticketPriceOutsider","ticketCount","getTokenMetadataURI","eventManagerContract","nftContractAddress","uri","getAvailableTickets","maxTickets","availableIds","isRefunded","refunded"],"sources":["C:/Users/negis/OneDrive/Desktop/new project/blockfest-ui/src/utils/blockchain.ts"],"sourcesContent":["// blockchain.ts\r\nimport { ethers, parseEther } from 'ethers';\r\n\r\nconst CONTRACT_ADDRESS = '0x6371647dc719E2482223c32880e2f2c9F44c9953';\r\nconst TARGET_NETWORK_ID = 11155111; // Sepolia Testnet Chain ID\r\nconst TARGET_NETWORK_NAME = 'Sepolia Testnet';\r\n\r\n// Contract ABI\r\nconst EVENT_MANAGER_ABI = [\r\n  {\r\n    \"inputs\": [\r\n      {\"internalType\":\"address\",\"name\":\"_ticketNFT\",\"type\":\"address\"},\r\n      {\"internalType\":\"address\",\"name\":\"_staking\",\"type\":\"address\"},\r\n      {\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"},\r\n      {\"internalType\":\"address\",\"name\":\"_sybil\",\"type\":\"address\"}\r\n    ],\r\n    \"stateMutability\":\"nonpayable\",\r\n    \"type\":\"constructor\"\r\n  },\r\n  {\r\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\r\n    \"name\":\"OwnableInvalidOwner\",\r\n    \"type\":\"error\"\r\n  },\r\n  {\r\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\r\n    \"name\":\"OwnableUnauthorizedAccount\",\r\n    \"type\":\"error\"\r\n  },\r\n  {\r\n    \"anonymous\":false,\r\n    \"inputs\":[\r\n      {\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},\r\n      {\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}\r\n    ],\r\n    \"name\":\"OwnershipTransferred\",\r\n    \"type\":\"event\"\r\n  },\r\n  {\r\n    \"anonymous\":false,\r\n    \"inputs\":[\r\n      {\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},\r\n      {\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}\r\n    ],\r\n    \"name\":\"TicketPurchased\",\r\n    \"type\":\"event\"\r\n  },\r\n  {\r\n    \"anonymous\":false,\r\n    \"inputs\":[\r\n      {\"indexed\":true,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},\r\n      {\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}\r\n    ],\r\n    \"name\":\"TicketRefunded\",\r\n    \"type\":\"event\"\r\n  },\r\n  {\r\n    \"inputs\":[\r\n      {\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},\r\n      {\"internalType\":\"string\",\"name\":\"qrHash\",\"type\":\"string\"},\r\n      {\"internalType\":\"bool\",\"name\":\"outsider\",\"type\":\"bool\"}\r\n    ],\r\n    \"name\":\"buyTicket\",\r\n    \"outputs\":[],\r\n    \"stateMutability\":\"payable\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[],\r\n    \"name\":\"cancelEvent\",\r\n    \"outputs\":[],\r\n    \"stateMutability\":\"nonpayable\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[],\r\n    \"name\":\"eventActive\",\r\n    \"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\r\n    \"name\":\"getStakedAmount\",\r\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\r\n    \"name\":\"getSybilScore\",\r\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\r\n    \"name\":\"hasTicket\",\r\n    \"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\r\n    \"name\":\"isOutsider\",\r\n    \"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\r\n    \"name\":\"isValidator\",\r\n    \"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\r\n    \"name\":\"issuedTickets\",\r\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[],\r\n    \"name\":\"maxTickets\",\r\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[\r\n      {\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},\r\n      {\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}\r\n    ],\r\n    \"name\":\"ownedTickets\",\r\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[],\r\n    \"name\":\"owner\",\r\n    \"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\r\n    \"name\":\"refillTickets\",\r\n    \"outputs\":[],\r\n    \"stateMutability\":\"nonpayable\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\r\n    \"name\":\"refunded\",\r\n    \"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[],\r\n    \"name\":\"renounceOwnership\",\r\n    \"outputs\":[],\r\n    \"stateMutability\":\"nonpayable\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\r\n    \"name\":\"sellTicketBack\",\r\n    \"outputs\":[],\r\n    \"stateMutability\":\"nonpayable\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\r\n    \"name\":\"setEventActive\",\r\n    \"outputs\":[],\r\n    \"stateMutability\":\"nonpayable\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[\r\n      {\"internalType\":\"uint256\",\"name\":\"insiderPrice\",\"type\":\"uint256\"},\r\n      {\"internalType\":\"uint256\",\"name\":\"outsiderPrice\",\"type\":\"uint256\"}\r\n    ],\r\n    \"name\":\"setTicketPrices\",\r\n    \"outputs\":[],\r\n    \"stateMutability\":\"nonpayable\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[],\r\n    \"name\":\"staking\",\r\n    \"outputs\":[{\"internalType\":\"contract Staking\",\"name\":\"\",\"type\":\"address\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[],\r\n    \"name\":\"sybil\",\r\n    \"outputs\":[{\"internalType\":\"contract SybilGuard\",\"name\":\"\",\"type\":\"address\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[],\r\n    \"name\":\"ticketCount\",\r\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[],\r\n    \"name\":\"ticketNFT\",\r\n    \"outputs\":[{\"internalType\":\"contract TicketNFT\",\"name\":\"\",\"type\":\"address\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[],\r\n    \"name\":\"ticketPriceInsider\",\r\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[],\r\n    \"name\":\"ticketPriceOutsider\",\r\n    \"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\r\n    \"name\":\"transferOwnership\",\r\n    \"outputs\":[],\r\n    \"stateMutability\":\"nonpayable\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[],\r\n    \"name\":\"validator\",\r\n    \"outputs\":[{\"internalType\":\"contract ValidatorPoS\",\"name\":\"\",\"type\":\"address\"}],\r\n    \"stateMutability\":\"view\",\r\n    \"type\":\"function\"\r\n  },\r\n  {\r\n    \"inputs\":[],\r\n    \"name\":\"withdrawFunds\",\r\n    \"outputs\":[],\r\n    \"stateMutability\":\"nonpayable\",\r\n    \"type\":\"function\"\r\n  }\r\n];// Assuming ABI is moved to a separate file for cleanliness\r\nconst TICKET_NFT_ABI = [\r\n  {\r\n    \"inputs\": [{\"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\"}],\r\n    \"name\": \"tokenURI\",\r\n    \"outputs\": [{\"internalType\": \"string\", \"name\": \"\", \"type\": \"string\"}],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [{\"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\"}],\r\n    \"name\": \"balanceOf\",\r\n    \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [{\"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\"}, {\"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\"}],\r\n    \"name\": \"tokenOfOwnerByIndex\",\r\n    \"outputs\": [{\"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\"}],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  }\r\n];\r\ninterface NetworkInfo {\r\n  chainId: number;\r\n  name: string;\r\n}\r\n\r\nconst getProvider = (): ethers.BrowserProvider => {\r\n  if (!window.ethereum) {\r\n    throw new Error('MetaMask not detected. Please install MetaMask.');\r\n  }\r\n  return new ethers.BrowserProvider(window.ethereum);\r\n};\r\n\r\nconst getSigner = async (provider: ethers.BrowserProvider): Promise<ethers.Signer> => {\r\n  await provider.send('eth_requestAccounts', []);\r\n  return await provider.getSigner();\r\n};\r\n\r\nconst getContract = async (readOnly = false): Promise<ethers.Contract> => {\r\n  const provider = getProvider();\r\n  if (readOnly) {\r\n    return new ethers.Contract(CONTRACT_ADDRESS, EVENT_MANAGER_ABI, provider);\r\n  } else {\r\n    const signer = await getSigner(provider);\r\n    return new ethers.Contract(CONTRACT_ADDRESS, EVENT_MANAGER_ABI, signer);\r\n  }\r\n};\r\n\r\nexport const connectWallet = async (): Promise<string | null> => {\r\n  try {\r\n    const provider = getProvider();\r\n    const accounts = await provider.send('eth_requestAccounts', []);\r\n    if (accounts && accounts.length > 0) {\r\n      const networkCorrect = await checkNetwork();\r\n      if (!networkCorrect.isCorrect) {\r\n        console.warn(`Wallet connected, but on wrong network (${networkCorrect.currentNetwork?.name}). Target: ${TARGET_NETWORK_NAME}`);\r\n      }\r\n      return accounts[0];\r\n    }\r\n    return null;\r\n  } catch (error: any) {\r\n    console.error(\"Wallet connection failed:\", error);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const checkNetwork = async (): Promise<{ isCorrect: boolean; currentNetwork: NetworkInfo | null }> => {\r\n  try {\r\n    const provider = getProvider();\r\n    const network = await provider.getNetwork();\r\n    const currentNetwork: NetworkInfo = {\r\n      chainId: Number(network.chainId),\r\n      name: network.name\r\n    };\r\n    const isCorrect = Number(network.chainId) === TARGET_NETWORK_ID;\r\n    return { isCorrect, currentNetwork };\r\n  } catch (error) {\r\n    console.error(\"Failed to check network:\", error);\r\n    return { isCorrect: false, currentNetwork: null };\r\n  }\r\n};\r\n\r\nexport const switchNetwork = async (chainId: string) => {\r\n  try {\r\n    await window.ethereum.request({\r\n      method: 'wallet_switchEthereumChain',\r\n      params: [{ chainId: chainId }],\r\n    });\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Network switch failed:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n// Stub implementations of the missing exports (must be implemented to avoid import errors)\r\n// src/utils/blockchain.ts\r\n\r\n// ... (other imports, constants, helpers) ...\r\n\r\n// --- CORRECTED buyTicket function ---\r\nexport const buyTicket = async (\r\n  tokenId: string,\r\n  priceInEther: string,\r\n  quantity: boolean,\r\n  isOutsider: string\r\n): Promise<string | null> => {\r\n  try {\r\n      const contract = await getContract(false); // Get contract with signer\r\n\r\n      // Generate a unique token URI and QR hash for the ticket\r\n      const tokenURI = `ipfs://${tokenId}`;\r\n      const qrHash = `qr-${tokenId}-${Date.now()}`;\r\n\r\n      // Convert price string to Wei\r\n      const value = parseEther(priceInEther);\r\n\r\n      console.log(`Attempting to buy ticket with parameters:`, {\r\n          tokenURI,\r\n          qrHash,\r\n          isOutsider: isOutsider === 'true',\r\n          value: value.toString()\r\n      });\r\n\r\n      // Call the contract function with correct arguments and transaction value\r\n      const tx = await contract.buyTicket(\r\n          tokenURI,\r\n          qrHash,\r\n          isOutsider === 'true',\r\n          { value }\r\n      );\r\n\r\n      console.log(`Transaction Sent: ${tx.hash}`);\r\n      const receipt = await tx.wait();\r\n      console.log(`Transaction Confirmed: ${receipt.transactionHash}`);\r\n\r\n      return receipt.transactionHash;\r\n  } catch (error: any) {\r\n      console.error(\"Buy Ticket Error:\", error);\r\n      if (error.code === 'INSUFFICIENT_FUNDS') {\r\n          throw new Error('Insufficient funds for transaction.');\r\n      } else if (error.code === 4001) {\r\n          throw new Error('Transaction rejected by user.');\r\n      } else if (error.reason) {\r\n          throw new Error(`Transaction failed: ${error.reason}`);\r\n      }\r\n      throw new Error('Failed to buy ticket. See console for details.');\r\n  }\r\n};\r\n\r\n// ... (rest of blockchain.ts functions like getMyTickets, resellTicket etc.)\r\n\r\nexport const getMyTickets = async (userAddress: string): Promise<number[]> => {\r\n    try {\r\n        console.log(\"Starting getMyTickets for address:\", userAddress);\r\n        const contract = await getContract(true);\r\n        \r\n        // Check if user has a ticket\r\n        const hasTicket = await contract.hasTicket(userAddress);\r\n        console.log(\"Has ticket:\", hasTicket);\r\n\r\n        if (!hasTicket) {\r\n            console.log(\"User has no tickets\");\r\n            return [];\r\n        }\r\n\r\n        // Get NFT contract\r\n        const nftAddress = await contract.ticketNFT();\r\n        console.log(\"NFT contract address:\", nftAddress);\r\n        const nftContract = new ethers.Contract(nftAddress, TICKET_NFT_ABI, getProvider());\r\n\r\n        // Get user's token balance\r\n        const balance = await nftContract.balanceOf(userAddress);\r\n        console.log(\"User NFT balance:\", balance.toString());\r\n\r\n        const ownedTickets: number[] = [];\r\n\r\n        // Get all tokens owned by user\r\n        for (let i = 0; i < balance; i++) {\r\n            try {\r\n                const tokenId = await nftContract.tokenOfOwnerByIndex(userAddress, i);\r\n                console.log(`Found token ID ${tokenId.toString()} at index ${i}`);\r\n                ownedTickets.push(Number(tokenId));\r\n            } catch (error) {\r\n                console.error(`Error getting token at index ${i}:`, error);\r\n            }\r\n        }\r\n\r\n        // If no tokens found through NFT contract but hasTicket is true,\r\n        // try the direct mapping as fallback\r\n        if (ownedTickets.length === 0) {\r\n            console.log(\"No tokens found through NFT contract, trying direct mapping\");\r\n            try {\r\n                const ticketId = await contract.ownedTickets(userAddress, 0);\r\n                if (ticketId.toString() !== '0') {\r\n                    console.log(\"Found ticket ID from mapping:\", ticketId.toString());\r\n                    ownedTickets.push(Number(ticketId));\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error checking direct mapping:\", error);\r\n            }\r\n        }\r\n\r\n        console.log(`Found ${ownedTickets.length} tickets owned by ${userAddress}:`, ownedTickets);\r\n        return ownedTickets;\r\n    } catch (error: any) {\r\n        console.error(\"Error in getMyTickets:\", error);\r\n        throw new Error(\"Failed to fetch owned tickets. Please try again.\");\r\n    }\r\n};\r\n\r\nexport const resellTicket = async (tokenId: number) => {\r\n  const contract = await getContract();\r\n  const tx = await contract.sellTicketBack(tokenId);\r\n  await tx.wait();\r\n};\r\n\r\nexport const getEventDetails = async () => {\r\n  const contract = await getContract(true);\r\n  return {\r\n    active: await contract.eventActive(),\r\n    ticketPriceInsider: await contract.ticketPriceInsider(),\r\n    ticketPriceOutsider: await contract.ticketPriceOutsider(),\r\n    ticketCount: await contract.ticketCount(),\r\n  };\r\n};\r\n\r\nexport const getTokenMetadataURI = async (tokenId: number): Promise<string> => {\r\n  try {\r\n    // First get the NFT contract address from the event manager\r\n    const eventManagerContract = await getContract(true);\r\n    const nftContractAddress = await eventManagerContract.ticketNFT();\r\n    \r\n    // Now create a contract instance for the NFT\r\n    const provider = getProvider();\r\n    const nftContract = new ethers.Contract(nftContractAddress, TICKET_NFT_ABI, provider);\r\n    \r\n    // Call tokenURI function to get the metadata URI\r\n    const uri = await nftContract.tokenURI(tokenId);\r\n    return uri;\r\n  } catch (error) {\r\n    console.error(\"Error getting token metadata URI:\", error);\r\n    return '';\r\n  }\r\n};\r\n\r\nexport const getAvailableTickets = async (): Promise<number[]> => {\r\n  try {\r\n    const contract = await getContract(true);\r\n    const maxTickets = await contract.maxTickets();\r\n    const ticketCount = await contract.ticketCount();\r\n    \r\n    // Create an array of available ticket IDs\r\n    const availableIds: number[] = [];\r\n    \r\n    // Loop through all possible ticket IDs and check if they're available\r\n    for (let i = 1; i <= ticketCount; i++) {\r\n      // Check if the ticket has been refunded or is still available\r\n      const isRefunded = await contract.refunded(i);\r\n      if (isRefunded) {\r\n        availableIds.push(i);\r\n      }\r\n    }\r\n    \r\n    return availableIds;\r\n  } catch (error) {\r\n    console.error(\"Error getting available tickets:\", error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}