{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\negis\\\\OneDrive\\\\Desktop\\\\new project\\\\blockfest-ui\\\\src\\\\components\\\\VIPVerificationForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useVIP } from '../contexts/VIPContext'; // Adjust path if needed\nimport GlowingButton from './GlowingButton';\nimport { useNavigate } from 'react-router-dom';\nimport { ShieldCheckIcon } from '@heroicons/react/solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VIPVerificationForm = ({\n  onVerified\n}) => {\n  _s();\n  const {\n    checkVIPStatus,\n    checkingVIP,\n    isVIP,\n    resetVIP\n  } = useVIP();\n  const [name, setName] = useState('');\n  const [rollNumber, setRollNumber] = useState('');\n  const navigate = useNavigate();\n  const [verificationAttempted, setVerificationAttempted] = useState(false);\n\n  // Effect to handle successful verification\n  useEffect(() => {\n    if (isVIP === true) {\n      console.log(\"VIP status verified, triggering callback\");\n      onVerified();\n    }\n  }, [isVIP, onVerified]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!name || !rollNumber || checkingVIP) return;\n    setVerificationAttempted(true);\n    const success = await checkVIPStatus(name, rollNumber);\n    if (success) {\n      console.log(\"Verification successful\");\n    }\n  };\n  const handleReset = () => {\n    resetVIP();\n    setVerificationAttempted(false);\n    setName('');\n    setRollNumber('');\n  };\n\n  // If already verified, show a success message and maybe a way to reset\n  if (isVIP) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-secondary-dark p-6 rounded-lg shadow-lg border border-accent-glow/30 text-center animate-fade-in\",\n      children: [/*#__PURE__*/_jsxDEV(ShieldCheckIcon, {\n        className: \"h-16 w-16 text-success mx-auto mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-text-main mb-2\",\n        children: \"VIP Status Verified!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-text-secondary mb-4\",\n        children: \"You can now access the ticket marketplace.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        className: \"text-xs text-accent-light hover:underline\",\n        children: \"Check different credentials\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Show form if not verified\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-secondary-dark p-6 rounded-lg shadow-lg border border-accent-glow/30 animate-fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold text-text-main mb-4 text-center\",\n      children: \"VIP Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-text-secondary text-sm mb-6 text-center\",\n      children: \"Enter your details to check for VIP access.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"vipName\",\n          className: \"block text-sm font-medium text-text-secondary mb-1\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"vipName\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true,\n          className: \"w-full px-3 py-2 bg-primary-dark border border-accent-glow/50 rounded-md text-text-main focus:ring-accent-light focus:border-accent-light focus:outline-none\",\n          placeholder: \"Enter your name\",\n          disabled: checkingVIP\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"vipRollNumber\",\n          className: \"block text-sm font-medium text-text-secondary mb-1\",\n          children: \"Roll Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\" // Or 'number' if appropriate\n          ,\n          id: \"vipRollNumber\",\n          value: rollNumber,\n          onChange: e => setRollNumber(e.target.value),\n          required: true,\n          className: \"w-full px-3 py-2 bg-primary-dark border border-accent-glow/50 rounded-md text-text-main focus:ring-accent-light focus:border-accent-light focus:outline-none\",\n          placeholder: \"Enter your roll number\",\n          disabled: checkingVIP\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GlowingButton, {\n        type: \"submit\",\n        disabled: checkingVIP || !name || !rollNumber,\n        className: \"w-full\",\n        children: checkingVIP ? 'Verifying...' : 'Check VIP Status'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), verificationAttempted && isVIP === false && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-error\",\n        children: \"VIP Access Denied. Please check your credentials.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        className: \"text-xs text-accent-light hover:underline mt-2\",\n        children: \"Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(VIPVerificationForm, \"oRQdpAam4R2GaYKQ24hMwi3eF10=\", false, function () {\n  return [useVIP, useNavigate];\n});\n_c = VIPVerificationForm;\nexport default VIPVerificationForm;\nvar _c;\n$RefreshReg$(_c, \"VIPVerificationForm\");","map":{"version":3,"names":["React","useState","useEffect","useVIP","GlowingButton","useNavigate","ShieldCheckIcon","jsxDEV","_jsxDEV","VIPVerificationForm","onVerified","_s","checkVIPStatus","checkingVIP","isVIP","resetVIP","name","setName","rollNumber","setRollNumber","navigate","verificationAttempted","setVerificationAttempted","console","log","handleSubmit","e","preventDefault","success","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","value","onChange","target","required","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/negis/OneDrive/Desktop/new project/blockfest-ui/src/components/VIPVerificationForm.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useVIP } from '../contexts/VIPContext'; // Adjust path if needed\r\nimport GlowingButton from './GlowingButton';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ShieldCheckIcon } from '@heroicons/react/solid';\r\n\r\ninterface VIPVerificationFormProps {\r\n    onVerified: () => void; // Callback when verification is successful\r\n}\r\n\r\nconst VIPVerificationForm: React.FC<VIPVerificationFormProps> = ({ onVerified }) => {\r\n    const { checkVIPStatus, checkingVIP, isVIP, resetVIP } = useVIP();\r\n    const [name, setName] = useState('');\r\n    const [rollNumber, setRollNumber] = useState('');\r\n    const navigate = useNavigate();\r\n    const [verificationAttempted, setVerificationAttempted] = useState(false);\r\n\r\n    // Effect to handle successful verification\r\n    useEffect(() => {\r\n        if (isVIP === true) {\r\n            console.log(\"VIP status verified, triggering callback\");\r\n            onVerified();\r\n        }\r\n    }, [isVIP, onVerified]);\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (!name || !rollNumber || checkingVIP) return;\r\n\r\n        setVerificationAttempted(true);\r\n        const success = await checkVIPStatus(name, rollNumber);\r\n        if (success) {\r\n            console.log(\"Verification successful\");\r\n        }\r\n    };\r\n\r\n    const handleReset = () => {\r\n        resetVIP();\r\n        setVerificationAttempted(false);\r\n        setName('');\r\n        setRollNumber('');\r\n    };\r\n\r\n    // If already verified, show a success message and maybe a way to reset\r\n    if (isVIP) {\r\n        return (\r\n            <div className=\"bg-secondary-dark p-6 rounded-lg shadow-lg border border-accent-glow/30 text-center animate-fade-in\">\r\n                <ShieldCheckIcon className=\"h-16 w-16 text-success mx-auto mb-4\"/>\r\n                <h3 className=\"text-xl font-semibold text-text-main mb-2\">VIP Status Verified!</h3>\r\n                <p className=\"text-text-secondary mb-4\">You can now access the ticket marketplace.</p>\r\n                {/* Optional: Button to reset/re-check if needed */}\r\n                <button onClick={handleReset} className=\"text-xs text-accent-light hover:underline\">\r\n                    Check different credentials\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Show form if not verified\r\n    return (\r\n        <div className=\"bg-secondary-dark p-6 rounded-lg shadow-lg border border-accent-glow/30 animate-fade-in\">\r\n            <h3 className=\"text-xl font-semibold text-text-main mb-4 text-center\">VIP Verification</h3>\r\n            <p className=\"text-text-secondary text-sm mb-6 text-center\">Enter your details to check for VIP access.</p>\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                <div>\r\n                    <label htmlFor=\"vipName\" className=\"block text-sm font-medium text-text-secondary mb-1\">Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"vipName\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        required\r\n                        className=\"w-full px-3 py-2 bg-primary-dark border border-accent-glow/50 rounded-md text-text-main focus:ring-accent-light focus:border-accent-light focus:outline-none\"\r\n                        placeholder=\"Enter your name\"\r\n                        disabled={checkingVIP}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"vipRollNumber\" className=\"block text-sm font-medium text-text-secondary mb-1\">Roll Number</label>\r\n                    <input\r\n                        type=\"text\" // Or 'number' if appropriate\r\n                        id=\"vipRollNumber\"\r\n                        value={rollNumber}\r\n                        onChange={(e) => setRollNumber(e.target.value)}\r\n                        required\r\n                        className=\"w-full px-3 py-2 bg-primary-dark border border-accent-glow/50 rounded-md text-text-main focus:ring-accent-light focus:border-accent-light focus:outline-none\"\r\n                        placeholder=\"Enter your roll number\"\r\n                        disabled={checkingVIP}\r\n                    />\r\n                </div>\r\n                <GlowingButton \r\n                    type=\"submit\" \r\n                    disabled={checkingVIP || !name || !rollNumber}\r\n                    className=\"w-full\"\r\n                >\r\n                    {checkingVIP ? 'Verifying...' : 'Check VIP Status'}\r\n                </GlowingButton>\r\n            </form>\r\n            {/* Only show denial message if verification was attempted and failed */}\r\n            {verificationAttempted && isVIP === false && \r\n                <div className=\"text-center mt-4\">\r\n                    <p className=\"text-error\">VIP Access Denied. Please check your credentials.</p>\r\n                    <button \r\n                        onClick={handleReset} \r\n                        className=\"text-xs text-accent-light hover:underline mt-2\"\r\n                    >\r\n                        Try again\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VIPVerificationForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}